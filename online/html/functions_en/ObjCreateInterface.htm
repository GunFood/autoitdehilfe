<!DOCTYPE html>
<html>
<head>
<title>Function ObjCreateInterface</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<div class="experimental">Warning: This feature is experimental.  It may not work, may contain bugs or may be changed or removed without notice.<br /><br />DO NOT REPORT BUGS OR REQUEST NEW FEATURES FOR THIS FEATURE.</div><br />
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<div class="top"><h1>ObjCreateInterface</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../functions/ObjCreateInterface.htm"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Creates a reference to an object from the given classname/object pointer, interface identifier and description string.<br /></p>
<p class="codeheader">
ObjCreateInterface ( "CLSID" , "IID" [, "interface_description",[flag = True]] )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">CLSID</td>
<td style="width:85%">Class identifier or object pointer. If this is a class identifier it can be in either ProgID or the string representation of the CLSID.</td>
</tr>
<tr>
<td>IID</td>
<td>String representation of interface identifier.</td>
</tr>
<tr>
<td>interface_description</td>
<td><strong>[optional]</strong> String describing v-table of the object. Use keyword Default to access IDispatch for dual interfaces.</td>
</tr>
<tr>
<td>flag</td>
<td><strong>[optional]</strong> Default value is True meaning the object interface inherits from IUnknown.</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">an object.</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>sets the @error flag to non-zero.</td>
</tr>
</table>

<h2>Remarks</h2>
<p><a href="ObjCreateInterface.htm">ObjCreateInterface()</a> creates objects with methods that are listed in interface-description string.<br />
For COM objects (IUnknown based) first three methods are always QueryInterface, AddRef and Release. Don't specify them inside the description strings.<br />
<br />
<strong>Methods listed inside description string must be in v-table order of the interface. If you provide an invalid or incorrect description AutoIt may become unstable or crash.</strong><br />
<br />
Format of the description string is:<br />
$sTagInterface = "MethodName1 RetType(ParamType1;ParamType2;...); MethodName2 RetType(..."<br />
<br />
By default, AutoIt uses the 'stdcall' calling convention for COM. To use the 'cdecl' place ':cdecl' after the return type.<br />
<br />
Valid Types are:<br />
<table>
<tr>
<td style="width:15%"><strong>Type</strong></td>
<td style="width:85%"><strong>Details</strong></td>
</tr>
<tr>
<td>none</td>
<td>no value (only valid for return type - equivalent to void in C)</td>
</tr>
<tr>
<td>byte</td>
<td>an unsigned 8 bit integer</td>
</tr>
<tr>
<td>boolean</td>
<td>an unsigned 8 bit integer</td>
</tr>
<tr>
<td>short</td>
<td>a 16 bit integer</td>
</tr>
<tr>
<td>word, ushort</td>
<td>an unsigned 16 bit integer</td>
</tr>
<tr>
<td>int, long</td>
<td>a 32 bit integer</td>
</tr>
<tr>
<td>bool</td>
<td>a 32 bit integer</td>
</tr>
<tr>
<td>dword, ulong, uint</td>
<td>an unsigned 32 bit integer</td>
</tr>
<tr>
<td>hresult</td>
<td>a 32 bit integer</td>
</tr>
<tr>
<td>int64</td>
<td>a 64 bit integer</td>
</tr>
<tr>
<td>uint64</td>
<td>an unsigned 64 bit integer</td>
</tr>
<tr>
<td>ptr</td>
<td>a general pointer (void *)</td>
</tr>
<tr>
<td>hwnd</td>
<td>a window handle (pointer)</td>
</tr>
<tr>
<td>handle</td>
<td>an handle (pointer)</td>
</tr>
<tr>
<td>float</td>
<td>a single precision floating point number</td>
</tr>
<tr>
<td>double</td>
<td>a double precision floating point number</td>
</tr>
<tr>
<td>int_ptr, long_ptr, lresult, lparam</td>
<td>an integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</td>
</tr>
<tr>
<td>uint_ptr, ulong_ptr, dword_ptr, wparam</td>
<td>an unsigned integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</td>
</tr>
<tr>
<td>str</td>
<td>an ANSI string (a minimum of 65536 chars is allocated).</td>
</tr>
<tr>
<td>wstr</td>
<td>a UNICODE wide character string (a minimum of 65536 chars is allocated).</td>
</tr>
<tr>
<td>bstr</td>
<td>a composite data type that consists of a length prefix, a data string and a terminator</td>
</tr>
<tr>
<td>variant</td>
<td>a tagged union that can be used to represent any other data type</td>
</tr>
<tr>
<td>idispatch, object</td>
<td>a composite data type that represents object with IDispatch interface</td>
</tr>
<tr>
<td>clsid</td>
<td>128-bit integer in form of GUID string</td>
</tr>
<tr>
<td>struct</td>
<td>structure created with <a href="DllStructCreate.htm">DllStructCreate()</a></td>
</tr>
<tr>
<td>*</td>
<td>Add * to the end of another type to pass it by reference. For example "int*" passes a pointer to an "int" type.</td>
</tr>
</table><br />
See the <a href="../intro/ComRef.htm">Obj/COM Reference</a> for more information about Objects.<br />
</p>

<h2>Related</h2>
<p><a href="ObjCreate.htm">ObjCreate</a></p>

<h2 class="bottom">Example</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Copied to clipboard");
}
}
</script>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\ObjCreateInterface.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">Copy to clipboard<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>

<span class="S0">Example</span><span class="S8">()</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Declare the CLSID, IID and interface description for ITaskbarList.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; It is not necessary to describe the members of IUnknown.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Const</span></a><span class="S0"> </span><span class="S9">$sCLSID_TaskbarList</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"{56FDF344-FD6D-11D0-958A-006097C9A090}"</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Const</span></a><span class="S0"> </span><span class="S9">$sIID_ITaskbarList</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"{56FDF342-FD6D-11D0-958A-006097C9A090}"</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Const</span></a><span class="S0"> </span><span class="S9">$sTagITaskbarList</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"HrInit hresult(); AddTab hresult(hwnd); DeleteTab hresult(hwnd); ActivateTab hresult(hwnd); SetActiveAlt hresult(hwnd);"</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Create the object.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$oTaskbarList</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/ObjCreateInterface.htm"><span class="S4">ObjCreateInterface</span></a><span class="S8">(</span><span class="S9">$sCLSID_TaskbarList</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sIID_ITaskbarList</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sTagITaskbarList</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Initialize the iTaskbarList object.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S9">$oTaskbarList</span><span class="S8">.</span><span class="S14">HrInit</span><span class="S8">()</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Run Notepad.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/Run.htm"><span class="S4">Run</span></a><span class="S8">(</span><span class="S7">"notepad.exe"</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Wait for the Notepad window to appear and get a handle to it.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hNotepad</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/WinWait.htm"><span class="S4">WinWait</span></a><span class="S8">(</span><span class="S7">"[CLASS:Notepad]"</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Tell the user what to look for.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Look in the Taskbar and you should see an entry for Notepad."</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"Press OK to continue."</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Delete the Notepad entry from the Taskbar.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S9">$oTaskbarList</span><span class="S8">.</span><span class="S14">DeleteTab</span><span class="S8">(</span><span class="S9">$hNotepad</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Tell the user to look again.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Look in the Taskbar. &nbsp;There should no longer be a Notepad entry but Notepad is still running."</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"Press OK to continue."</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Close Notepad.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/WinClose.htm"><span class="S4">WinClose</span></a><span class="S8">(</span><span class="S9">$hNotepad</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;Example</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
