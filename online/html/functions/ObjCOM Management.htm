<!DOCTYPE html>
<html>
<head>
  <title>Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<div class="top"><h1>Obj/COM Funktionsreferenz</h1><div>
<p>Es folgt eine Liste der Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\functions\ObjCreate.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ObjCreate</a></td>
<td>Erzeugt eine Referenz auf ein COM-Object von dem angegebenen Klassennamen.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ObjCreateInterface.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ObjCreateInterface</a></td>
<td>Erzeugt eine Referenz zu einem Objekt aus dem angegebenen Klassennamen/Object-Pointer, Interface-Identifier und Bezeichnungsstring.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ObjEvent.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ObjEvent</a></td>
<td>Verarbeitet eingehende Ereignisse von dem angegebenen Objekt.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ObjGet.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ObjGet</a></td>
<td>Ruft eine Referenz zu einem COM-Objekt ab, von einem vorhandenem Prozess oder Dateinamen.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ObjName.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ObjName</a></td>
<td>Gibt den Namen oder die Schnittstelleninformation eines Objekts zur&uuml;ck.<br /></td>
</tr>
</table>

</body>
