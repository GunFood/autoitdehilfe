<!DOCTYPE html>
<html>
<head>
<title>Funktion _WinAPI_GetWindow</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>_WinAPI_GetWindow</h1><div>
<div id="flagtext">Beschreibung anzeigen in</div>
<div id="flaglink"> <a href="../libfunctions_en/_WinAPI_GetWindow.htm"><img src="../images/Flagge_en.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Ermittelt das Handle eines Fensters, das ein bestimmtes Verh&auml;ltnis (Z-Anordnung oder Besitzer) zu dem angegebenen Fenster hat<br /></p>
<p class="codeheader">
#include &lt;WinAPISysWin.au3&gt;<br />
_WinAPI_GetWindow ( $hWnd, $iCmd )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$hWnd</td>
<td style="width:85%">Handle des Fensters. Das ermittelte Fenster-Handle ist relativ zu diesem Fenster, basierend auf dem Wert im $iCmd Parameter.</td>
</tr>
<tr>
<td>$iCmd</td>
<td>Gibt das Verh&auml;ltnis an, das zwischen dem angegebenen Fenster und dem Fenster, dessen Handle ermittelt werden soll, besteht.<br />
Dieser Parameter kann einer der folgenden Werte sein:<br />
&nbsp;&nbsp;&nbsp; $GW_CHILD - Das ermittelte Handle identifiziert das Child-Fenster an der Spitze der Z-Anordnung, falls das angegebene<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Fenster ein Parent-Fenster ist; andernfalls ist das ermittelte Handle 0.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Die Funktion pr&uuml;ft nur auf Child-Fenster des angegebenen Fensters. Sie pr&uuml;ft dann keine abk&ouml;mmlichen Fenster.<br />
&nbsp;&nbsp;&nbsp; $GW_HWNDFIRST - Das ermittelte Handle identifiziert das Fenster gleichen Typs, welches am h&ouml;chsten in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Topmost-Fenster ist, identifiziert das Handle das Topmost-Fenster, welches am h&ouml;chsten in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Top-Level Fenster ist, identifiziert das Handle das Top-Level Fenster, welches am h&ouml;chsten in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Child-Fenster ist, identifiziert das Handle das Fenster auf gleicher Ebene, welches am h&ouml;chsten in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; $GW_HWNDLAST - Das ermittelte Handle identifiziert das Fenster gleichen Typs, welches am niedrigsten in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Topmost-Fenster ist, identifiziert das Handle das Topmost-Fenster, welches am niedrigsten in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Top-Level Fenster ist, identifiziert das Handle das Top-Level Fenster, welches am niedrigsten in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Child-Fenster ist, identifiziert das Handle das Fenster auf gleicher Ebene, welches am niedrigsten in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; $GW_HWNDNEXT - Das ermittelte Handle identifiziert das Fenster, das in der Z-Anordnung direkt unter dem angegebenen Fenster ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Topmost-Fenster ist, identifiziert das Handle das Topmost-Fenster, welches direkt unter dem angegebenen Fenster in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Top-Level Fenster ist, identifiziert das Handle das Top-Level Fenster, welches direkt unter dem angegebenen Fenster in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Child-Fenster ist, identifiziert das Handle das Fenster auf gleicher Ebene, welches direkt unter dem angegebenen Fenster in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; $GW_HWNDPREV - Das ermittelte Handle identifiziert das Fenster, das in der Z-Anordnung direkt &uuml;ber dem angegebenen Fenster ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Topmost-Fenster ist, identifiziert das Handle das Topmost-Fenster, welches direkt &uuml;ber dem angegebenen Fenster in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Top-Level Fenster ist, identifiziert das Handle das Top-Level Fenster, welches direkt &uuml;ber dem angegebenen Fenster in der Z-Anordnung ist.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Falls das angegebene Fenster ein Child-Fenster ist, identifiziert das Handle das Fenster auf gleicher Ebene, welches direkt &uuml;ber dem angegebenen Fenster in der Z-Anordnung ist.<br />
$GW_OWNER - Das ermittelte Handle identifiziert den Besitzer des angegebenen Fensters, sofern vorhanden</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Erfolg:</td>
<td style="width:90%">Das Fensterhandle</td>
</tr>
<tr>
<td class="valign-top">Fehler:</td>
<td>0. Es ist <a href="_WinAPI_GetLastError.htm">_WinAPI_GetLastError()</a> aufzurufen um erweiterte Fehlerinformationen zu erhalten.</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p>Die EnumChildWindows Funktion ist zuverl&auml;ssiger als der Aufruf von GetWindow in einer Schleife. Eine Anwendung die GetWindow aufruft, um diese Aufgabe zu erledigen, riskiert in einer Endlosschleife gefangen zu werden oder referenziert wom&ouml;glich ein Fenster, das zerst&ouml;rt wurde.<br />
<br />
Oben genannte Konstanten ben&ouml;tigen #include &lt;WinAPIConstants.au3&gt;<br />
</p>

<h2>Siehe auch</h2>
<p>Suche nach <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(GetWindow);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">GetWindow</a> in der MSDN Bibliothek.
</p>

</body>
</html>
