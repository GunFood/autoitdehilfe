<!DOCTYPE html>
<html>
<head>
<title>Funktion Run</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>Run</h1><div>
<div id="flagtext">Beschreibung anzeigen in</div>
<div id="flaglink"> <a href="../functions_en/Run.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><img src="../images/Flagge_en.png" height="29" width="36" border=0 hspace=10/></a></div>
<div ><input id="toggleButton" type="image" onclick="Themes.toggleTheme()" src="../images/dark.png" height ="36" width="36" alt="Toggle Theme"></div><br />
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Startet ein externes Programm.<br /></p>
<p class="codeheader">
Run ( "program" [, "workingdir" [, show_flag [, opt_flag]]] )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">program</td>
<td style="width:85%">Der komplette Pfad des Programms (.EXE, .BAT, .COM oder .PIF), das ausgef&uuml;hrt werden soll. (siehe Bemerkungen)</td>
</tr>
<tr>
<td>workingdir</td>
<td><strong>[optional]</strong> Der Pfad, in dem das Programm ausgef&uuml;hrt werden soll (Arbeitsverzeichnis). Leerstring ("") gibt das aktuelle Arbeitsverzeichnis an. Dies ist nicht der Pfad des Programms.</td>
</tr>
<tr>
<td>show_flag</td>
<td><strong>[optional]</strong> Das "show"- (Sichtbarkeits-) Flag des auszuf&uuml;hrenden Programms:<br />
&nbsp;&nbsp;&nbsp; @SW_HIDE = verstecktes Fenster (alternative Eingabe: default).<br />
&nbsp;&nbsp;&nbsp; @SW_MINIMIZE = minimiertes Fenster.<br />
&nbsp;&nbsp;&nbsp; @SW_MAXIMIZE = maximiertes Fenster.</td>
</tr>
<tr>
<td>opt_flag</td>
<td><strong>[optional]</strong> Steuert verschiedene Optionen, die die Interaktion zwischen Parent- und Child-Prozess betreffen (STDIO).<br />
&nbsp;&nbsp;&nbsp; $STDIN_CHILD (0x1) = Stellt ein Handle zum STDIN-Stream des Child-Fensters bereit<br />
&nbsp;&nbsp;&nbsp; $STDOUT_CHILD (0x2) = Stellt ein Handle zum STDOUT-Stream des Child-Fensters bereit.<br />
&nbsp;&nbsp;&nbsp; $STDERR_CHILD (0x4) = Stellt ein Handle zum STDERR-Stream des Child-Fensters bereit.<br />
&nbsp;&nbsp;&nbsp; $STDERR_MERGED (0x8) = Stellt das selbe Handle f&uuml;r den STDOUT- und STDERR-Stream bereit (Setzt $STDOUT_CHILD und $STDERR_CHILD).<br />
&nbsp;&nbsp;&nbsp; $STDIO_INHERIT_PARENT (0x10) = Stellt dem Child-Fenster das Handle zum STDIO-Stream des Parent-Fensters bereit. Kann nicht mit einem anderen STDIO-Flag kombiniert werden. Dieses Flag ist nur dann sinnvoll, wenn die Parent-Anwendung als Kommandozeilenapplikation kompiliert wurde.<br />
&nbsp;&nbsp;&nbsp; $RUN_CREATE_NEW_CONSOLE (0x10000) = Der Child-Kommandozeilenprozess wird in einem eigenen Kommandozeilenfenster ausgef&uuml;hrt. Dieses Flag ist nur dann sinnvoll, wenn die Parent-Anwendung als Kommandozeilenapplikation kompiliert wurde.<br />
<br />
Die Konstanten sind in AutoItConstants.au3 definiert.</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Erfolg:</td>
<td style="width:90%">Die PID des Prozesses, der gestartet wurde.</td>
</tr>
<tr>
<td class="valign-top">Fehler:</td>
<td>0 und setzt das @error Flag auf ungleich null.</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p>Pfade mit Leerzeichen m&uuml;ssen in Anf&uuml;hrungszeichen gesetzt werden.<br />
<br />
Um DOS- (Konsolen-) Kommandos auszuf&uuml;hren, sollte man folgendes ausprobieren: <br />
<em><a href="Run.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">Run</a>(@ComSpec & " /c " & 'commandName', "", @SW_HIDE)&nbsp;&nbsp;&nbsp; ;Nicht die Leerzeichen vor und nach "/c" vergessen!</em><br />
<br />
Nach dem Start des angeforderten Programms wird das Skript weiter ausgef&uuml;hrt. Soll die Ausf&uuml;hrung des Skripts angehalten werden, bis das gestartete Programm beendet ist, so ist statt der <a href="Run.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">Run</a> Funktion die <a href="RunWait.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">RunWait()</a> Funktion zu verwenden.<br />
<br />
Das Bereitstellen der Standard-I/O-Parameter mit den geeigneten Werten ist Voraussetzung f&uuml;r die Interaktion des Child-Prozesses mit den Funktionen <a href="StderrRead.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StderrRead()</a>, <a href="StdinWrite.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StdinWrite()</a> und <a href="StdoutRead.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StdoutRead()</a>.<br />
Um mehrere I/O-Streams zu verwalten, kombiniert man die „Flag“-Werte (oder man benutzt $STDERR_CHILD, $STDIN_CHILD & $STDOUT_CHILD).<br />
<br />
Um die I/O-Streams zu schlie&szlig;en, m&uuml;ssen folgende Bedingungen erf&uuml;llt sein: <br />
1) Der Child-Prozess hat seine Seite des Streams geschlossen (das ist der Fall, wenn der Child-Prozess geschlossen wird). <br />
2) AutoIt muss gekaperte Streams auslesen, bis keine Daten mehr enthalten sind. <br />
3) Wenn STDIN dem Child-Prozess zugewiesen ist, muss <a href="StdinWrite.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StdinWrite()</a> aufgerufen werden, um den Stream zu schlie&szlig;en. Sobald alle Streams als nicht mehr ben&ouml;tigt erkannt werden, werden alle intern verwendeten Ressourcen automatisch freigegeben.<br />
<br />
<a href="StdioClose.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StdioClose()</a> kann verwendet werden, um das Schlie&szlig;en der STDIO-Streams zu erzwingen.<br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="ConsoleRead.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ConsoleRead</a>, <a href="ProcessClose.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ProcessClose</a>, <a href="RunAs.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">RunAs</a>, <a href="RunAsWait.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">RunAsWait</a>, <a href="RunWait.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">RunWait</a>, <a href="ShellExecute.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ShellExecute</a>, <a href="ShellExecuteWait.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ShellExecuteWait</a>, <a href="StderrRead.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StderrRead</a>, <a href="StdinWrite.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StdinWrite</a>, <a href="StdioClose.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StdioClose</a>, <a href="StdoutRead.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StdoutRead</a></p>

<h2 class="bottom">Beispiel</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Das Beispiel wurde in die Zwischenablage kopiert");
}
}
</script>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Dieses Skript &ouml;ffnen"><param name="Item1" value=",Examples\\HelpFile\\Run.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">In die Zwischenablage kopieren<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><span class="S0">Example</span><span class="S8">()</span>

<a class="codeSnippetLink" href="../keywords/Func.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><span class="S5">Func</span></a><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Startet den Editor mit einem maximierten Fenster.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$iPID</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/Run.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><span class="S4">Run</span></a><span class="S8">(</span><span class="S7">"notepad.exe"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"#@SW_SHOWMAXIMIZED><span class="S6">@SW_SHOWMAXIMIZED</span></a><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Wartet 10 Sekunden bis das Editorfenster erscheint.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/WinWait.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><span class="S4">WinWait</span></a><span class="S8">(</span><span class="S7">"[CLASS:Notepad]"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S3">10</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Wartet 2 Sekunden.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/Sleep.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><span class="S4">Sleep</span></a><span class="S8">(</span><span class="S3">2000</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Schlie&szlig;t den Editor Prozess mit Hilfe der PID die durch Run zur&uuml;ckgegeben wurde.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/ProcessClose.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><span class="S4">ProcessClose</span></a><span class="S8">(</span><span class="S9">$iPID</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><span class="S5">EndFunc</span></a><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;Example</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
