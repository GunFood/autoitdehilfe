<!DOCTYPE html>
<html>
<head>
  <title>Benutzerdefinierte Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1>Diagnostic Benutzerdefinierte Funktionsreferenz</h1>
<p>Es folgt eine Liste der benutzerdefinierten Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>Wenn diese Funktion verwendet wird, so muss <strong>#include &lt;WinAPIDiag.au3&gt;</strong> hinzugefügt werden.</p>
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Benutzerdefinierte Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DisplayStruct.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DisplayStruct</a></td>
<td>Zeigt die Daten einer gegebenen Struktur oder Speicheradresse als Liste an<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumDllProc.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_EnumDllProc</a></td>
<td>Listet die exportierten Funktion der angegebenen Dynamic-Link-Bibliothek (DLL) auf<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_FatalExit.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_FatalExit</a></td>
<td>&Uuml;bertr&auml;gt die Ausf&uuml;hrungskontrolle an den Debugger<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetApplicationRestartSettings.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetApplicationRestartSettings</a></td>
<td>Ruft die f&uuml;r den angegebenen Prozess registrierten Neustart-Informationen ab<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetErrorMode.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetErrorMode</a></td>
<td>Ruft den Fehlermodus f&uuml;r den aktuellen Prozess ab<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsInternetConnected.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsInternetConnected</a></td>
<td>Pr&uuml;ft, ob der aktuelle Benutzer mit dem Internet verbunden ist<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsNetworkAlive.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsNetworkAlive</a></td>
<td>Bestimmt, ob ein lokales System mit einem Netzwerk verbunden ist oder nicht und identifiziert die Art der Netzwerkverbindung<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_NtStatusToDosError.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_NtStatusToDosError</a></td>
<td>Wandelt den angegebenen NTSTATUS-Fehlercode in seinen &auml;quivalenten Systemfehlercode um<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_RegisterApplicationRestart.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_RegisterApplicationRestart</a></td>
<td>Registriert die aktive Instanz einer Anwendung f&uuml;r einen Neustart<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetErrorMode.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetErrorMode</a></td>
<td>Kontrolliert, ob das System die angegebenen Arten von schweren Fehlern behandelt oder ob der Prozess sie behandelt<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_UniqueHardwareID.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_UniqueHardwareID</a></td>
<td>Erzeugt eine eindeutige Hardware-Kennung (ID) f&uuml;r den lokalen Computer<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_UnregisterApplicationRestart.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_UnregisterApplicationRestart</a></td>
<td>Removes the active instance of an application from the restart list<br /></td>
</tr>
</table>

</body>
