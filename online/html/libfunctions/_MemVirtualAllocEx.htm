<!DOCTYPE html>
<html>
<head>
<title>Funktion _MemVirtualAllocEx</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<h1 style="float:left; margin:15px 0 0 0; padding:0 0 0 0;">_MemVirtualAllocEx</h1><br />
<a href="../libfunctions_en/_MemVirtualAllocEx.htm"><img src="../images/Flagge_en.gif" height="29" width="36" border=0 hspace=10 style="float:right"/></a><br />
<div style="display:block; text-align:right;">Beschreibung anzeigen in</div><br />
<p style="margin:2px 0 0 0;" class="funcdesc">Reserviert einen Seitenbereich innerhalb des virtuellen Adressraumes eines Prozesses<br /></p>
<p class="codeheader">
#include &lt;Memory.au3&gt;<br />
_MemVirtualAllocEx ( $hProcess, $pAddress, $iSize, $iAllocation, $iProtect )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$hProcess</td>
<td style="width:85%">Handle zu einem Prozess </td>
</tr>
<tr>
<td>$pAddress</td>
<td>Zeiger auf die gew&uuml;nschte Basisadresse des Seitenbereiches, der zugeordnet werden soll.</td>
</tr>
<tr>
<td>$iSize</td>
<td>Legt die Gr&ouml;&szlig;e des zuzuordnenden Bereichs in Bytes fest.</td>
</tr>
<tr>
<td>$iAllocation</td>
<td>Legt die Art der Speicherzuordnung fest:<br />
&nbsp;&nbsp;&nbsp; $MEM_COMMIT - Stellt physischen Speicher im RAM oder in der Auslagerungsdatei f&uuml;r den angegebenen Seitenbereich zur Verf&uuml;gung.<br />
&nbsp;&nbsp;&nbsp; $MEM_RESERVE - Reserviert einen Bereich im virtuellen Adressraum eines Prozesses, ohne jeglichen realen (physischen) Speicher zur Verf&uuml;gung zu stellen.<br />
&nbsp;&nbsp;&nbsp; $MEM_TOP_DOWN - Speicher wird an der h&ouml;chstm&ouml;glichen Adresse zugeordnet.</td>
</tr>
<tr>
<td>$iProtect</td>
<td>Art des Zugriffsschutzes:<br />
&nbsp;&nbsp;&nbsp; $PAGE_READONLY - Erlaubt nur Lesezugriffe auf den eingebundenen Seitenbereich.<br />
&nbsp;&nbsp;&nbsp; $PAGE_READWRITE - Erlaubt Lese- und Schreibzugriffe auf den eingebundenen Bereich.<br />
&nbsp;&nbsp;&nbsp; $PAGE_EXECUTE - Erlaubt Codeausf&uuml;hrung im eingebundenen Bereich.<br />
&nbsp;&nbsp;&nbsp; $PAGE_EXECUTE_READ - Erlaubt Codeausf&uuml;hrung und Lesezugriffe im eingebundenen Bereich.<br />
&nbsp;&nbsp;&nbsp; $PAGE_EXECUTE_READWRITE - Erlaubt Codeausf&uuml;hrung, Lese- und Schreibzugriffe im eingebundenen Bereich.<br />
&nbsp;&nbsp;&nbsp; $PAGE_GUARD - Gesch&uuml;tzte Seiten; sie sind zwar eingebunden, l&ouml;sen aber beim ersten Zugriff eine Ausnahme (Exception) aus, die vom VMM aufgefangen wird.<br />
&nbsp;&nbsp;&nbsp; $PAGE_NOACCESS - Verbietet jeglichen Zugriff auf den Seitenbereich, Versuch f&uuml;hrt zum Prozessabbruch.<br />
&nbsp;&nbsp;&nbsp; $PAGE_NOCACHE - Seitenbereich darf nicht im Systemcache gespeichert werden.</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
Gibt&nbsp;einen Zeiger auf die Basisadresse des Speicherbereichs zur&uuml;ck<br />


<h2>Bemerkungen</h2>
<p>_MemVirtualAlloc kann nur Speicher im Adressraum des aufrufenden Prozesses bereitstellen,<br />
_MemVirtualAllocEx kann auch auf den Adressraum anderer Prozesse zugreifen.<br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="_MemVirtualFreeEx.htm">_MemVirtualFreeEx</a></p>

<h2>Siehe auch</h2>
<p>Suche nach <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(VirtualAllocEx);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">VirtualAllocEx</a> in der MSDN Bibliothek.
</p>

</body>
</html>
