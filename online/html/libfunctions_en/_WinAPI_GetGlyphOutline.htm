<!DOCTYPE html>
<html>
<head>
<title>Function _WinAPI_GetGlyphOutline</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<h1>_WinAPI_GetGlyphOutline</h1>
<p class="funcdesc">Retrieves the outline or bitmap for a character in the TrueType font<br /></p>
<p class="codeheader">
#include &lt;WinAPIGdi.au3&gt;<br />
_WinAPI_GetGlyphOutline ( $hDC, $sChar, $iFormat, ByRef $pBuffer [, $tMAT2 = 0] )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$hDC</td>
<td style="width:85%">A handle to the device context which font is selected.</td>
</tr>
<tr>
<td>$sChar</td>
<td>The character for which data is to be returned.</td>
</tr>
<tr>
<td>$iFormat</td>
<td>The format of the data that the function retrieves.<br />
This parameter can be one of the following values:<br />
&nbsp;&nbsp;&nbsp; $GGO_BEZIER<br />
&nbsp;&nbsp;&nbsp; $GGO_BITMAP<br />
&nbsp;&nbsp;&nbsp; $GGO_GLYPH_INDEX<br />
&nbsp;&nbsp;&nbsp; $GGO_GRAY2_BITMAP<br />
&nbsp;&nbsp;&nbsp; $GGO_GRAY4_BITMAP<br />
&nbsp;&nbsp;&nbsp; $GGO_GRAY8_BITMAP<br />
&nbsp;&nbsp;&nbsp; $GGO_METRICS<br />
&nbsp;&nbsp;&nbsp; $GGO_NATIVE<br />
&nbsp;&nbsp;&nbsp; $GGO_UNHINTED</td>
</tr>
<tr>
<td>$pBuffer</td>
<td>Returns a pointer to a memory block (buffer) that receives the outline or bitmap data.<br />
Optionaly, you can set this parameter to 0 before function call, then the function will allocate the required memory block itself.<br />
Otherwise, it must be a valid memory pointer returned by the <a href="_WinAPI_CreateBuffer.htm">_WinAPI_CreateBuffer()</a> function, or by previously calling this function.<br />
If the $GGO_METRICS is specified, this parameter is ignored, and function only returns the information about a glyph (see below).</td>
</tr>
<tr>
<td>$tMAT2</td>
<td><strong>[optional]</strong> $tagMAT2 structure specifying a transformation matrix for the character.<br />
If this parameter is 0 (Default), the transformation will not be used (it is identity matrix).</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">$tagGLYPHMETRICS structure containing information about the placement and orientation of a glyph,<br />
@extended flag returns a number of bytes copied to the buffer (if used), in bytes.</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>Sets the @error flag to non-zero.</td>
</tr>
</table>

<h2>Remarks</h2>
<p>Note that, for the $GGO_GRAY... values, the function retrieves a glyph bitmap that contains n^2+1 (n squared plus one) levels of gray.<br />
<br />
The glyph bitmap returned by <a href="_WinAPI_GetGlyphOutline.htm">_WinAPI_GetGlyphOutline()</a> when $GGO_BITMAP is specified is a DWORD-aligned, row-oriented, monochrome bitmap.<br />
When $GGO_GRAY2_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 4.<br />
When $GGO_GRAY4_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 16.<br />
When $GGO_GRAY8_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 64.<br />
<br />
When you no longer need the buffer allocated by this function, you must call the <a href="_WinAPI_FreeMemory.htm">_WinAPI_FreeMemory()</a> function (do not use any other memory routines) to release occupied memory.<br />
</p>

<h2>Related</h2>
<p><a href="_WinAPI_CreateBuffer.htm">_WinAPI_CreateBuffer</a>, <a href="_WinAPI_FreeMemory.htm">_WinAPI_FreeMemory</a></p>

<h2>See Also</h2>
<p>Search <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(GetGlyphOutline);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">GetGlyphOutline</a> in MSDN  Library.
</p>

<h2 class="bottom">Example</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Copied to clipboard");
}
}
</script>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\_WinAPI_GetGlyphOutline.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">Copy to clipboard<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;APIGdiConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;FontConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;GUIConstantsEx.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;SendMessage.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;StaticConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WinAPIGdi.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WinAPIGdiDC.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WinAPIHObj.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WinAPIMem.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WindowsConstants.au3&gt;</span>

<span class="S1">; Creates logical font ("Times") and retrieve bitmap bits for a random character</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hDC</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_CreateCompatibleDC.htm"><span class="S15">_WinAPI_CreateCompatibleDC</span></a><span class="S8">(</span><span class="S3">0</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hFont</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_CreateFont.htm"><span class="S15">_WinAPI_CreateFont</span></a><span class="S8">(</span><span class="S3">512</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">400</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Booleans.htm"><span class="S5">False</span></a><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Booleans.htm"><span class="S5">False</span></a><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Booleans.htm"><span class="S5">False</span></a><span class="S8">,</span><span class="S0"> </span><span class="S9">$DEFAULT_CHARSET</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$OUT_DEFAULT_PRECIS</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$CLIP_DEFAULT_PRECIS</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$DEFAULT_QUALITY</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S7">'Times'</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hSv</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_SelectObject.htm"><span class="S15">_WinAPI_SelectObject</span></a><span class="S8">(</span><span class="S9">$hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$hFont</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$pData</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">0</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$tGM</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_GetGlyphOutline.htm"><span class="S15">_WinAPI_GetGlyphOutline</span></a><span class="S8">(</span><span class="S9">$hDC</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../functions/ChrW.htm"><span class="S4">ChrW</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../functions/Random.htm"><span class="S4">Random</span></a><span class="S8">(</span><span class="S3">65</span><span class="S8">,</span><span class="S0"> </span><span class="S3">90</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)),</span><span class="S0"> </span><span class="S9">$GGO_BITMAP</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$pData</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$W</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructGetData.htm"><span class="S4">DllStructGetData</span></a><span class="S8">(</span><span class="S9">$tGM</span><span class="S8">,</span><span class="S0"> </span><span class="S7">'BlackBoxX'</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$H</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructGetData.htm"><span class="S4">DllStructGetData</span></a><span class="S8">(</span><span class="S9">$tGM</span><span class="S8">,</span><span class="S0"> </span><span class="S7">'BlackBoxY'</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../libfunctions/_WinAPI_SelectObject.htm"><span class="S15">_WinAPI_SelectObject</span></a><span class="S8">(</span><span class="S9">$hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$hSv</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../libfunctions/_WinAPI_DeleteObject.htm"><span class="S15">_WinAPI_DeleteObject</span></a><span class="S8">(</span><span class="S9">$hFont</span><span class="S8">)</span>

<span class="S1">; Create 1 bits-per-pixel bitmap</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hBmp</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_CreateBitmap.htm"><span class="S15">_WinAPI_CreateBitmap</span></a><span class="S8">(</span><span class="S3">32</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">*</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/Ceiling.htm"><span class="S4">Ceiling</span></a><span class="S8">(</span><span class="S9">$W</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">/</span></a><span class="S0"> </span><span class="S3">32</span><span class="S8">),</span><span class="S0"> </span><span class="S9">$H</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$pData</span><span class="S8">)</span>

<span class="S1">; Crop bitmap to the required size and colorize it</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aColorTable</span><span class="S8">[</span><span class="S3">2</span><span class="S8">]</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S8">[</span><span class="S3">0xFFFFFF</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0xC00000</span><span class="S8">]</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hDib</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_CreateDIB.htm"><span class="S15">_WinAPI_CreateDIB</span></a><span class="S8">(</span><span class="S9">$W</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$H</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_CreateDIBColorTable.htm"><span class="S15">_WinAPI_CreateDIBColorTable</span></a><span class="S8">(</span><span class="S9">$aColorTable</span><span class="S8">),</span><span class="S0"> </span><span class="S3">2</span><span class="S8">)</span>
<span class="S9">$hSv</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_SelectObject.htm"><span class="S15">_WinAPI_SelectObject</span></a><span class="S8">(</span><span class="S9">$hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$hDib</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../libfunctions/_WinAPI_DrawBitmap.htm"><span class="S15">_WinAPI_DrawBitmap</span></a><span class="S8">(</span><span class="S9">$hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$hBmp</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$MERGEPAINT</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../libfunctions/_WinAPI_SelectObject.htm"><span class="S15">_WinAPI_SelectObject</span></a><span class="S8">(</span><span class="S9">$hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$hSv</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../libfunctions/_WinAPI_DeleteObject.htm"><span class="S15">_WinAPI_DeleteObject</span></a><span class="S8">(</span><span class="S9">$hBmp</span><span class="S8">)</span>

<span class="S1">; Free unnecessary resources</span>
<a class="codeSnippetLink" href="../libfunctions/_WinAPI_FreeMemory.htm"><span class="S15">_WinAPI_FreeMemory</span></a><span class="S8">(</span><span class="S9">$pData</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../libfunctions/_WinAPI_DeleteDC.htm"><span class="S15">_WinAPI_DeleteDC</span></a><span class="S8">(</span><span class="S9">$hDC</span><span class="S8">)</span>

<span class="S1">; Create GUI</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hForm</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/GUICreate.htm"><span class="S4">GUICreate</span></a><span class="S8">(</span><span class="S7">'Test '</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringReplace.htm"><span class="S4">StringReplace</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../macros.htm#@ScriptName"><span class="S6">@ScriptName</span></a><span class="S8">,</span><span class="S0"> </span><span class="S7">'.au3'</span><span class="S8">,</span><span class="S0"> </span><span class="S7">'()'</span><span class="S8">),</span><span class="S0"> </span><span class="S9">$W</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$H</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$idPic</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/GUICtrlCreatePic.htm"><span class="S4">GUICtrlCreatePic</span></a><span class="S8">(</span><span class="S7">''</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$W</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$H</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hPic</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/GUICtrlGetHandle.htm"><span class="S4">GUICtrlGetHandle</span></a><span class="S8">(</span><span class="S9">$idPic</span><span class="S8">)</span>

<span class="S1">; Set bitmap to control</span>
<a class="codeSnippetLink" href="../libfunctions/_SendMessage.htm"><span class="S15">_SendMessage</span></a><span class="S8">(</span><span class="S9">$hPic</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$STM_SETIMAGE</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$hDib</span><span class="S8">)</span>
<span class="S9">$hBmp</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_SendMessage.htm"><span class="S15">_SendMessage</span></a><span class="S8">(</span><span class="S9">$hPic</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$STM_GETIMAGE</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><span class="S9">$hBmp</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">&lt;&gt;</span></a><span class="S0"> </span><span class="S9">$hDib</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_DeleteObject.htm"><span class="S15">_WinAPI_DeleteObject</span></a><span class="S8">(</span><span class="S9">$hDib</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">EndIf</span></a>

<span class="S1">; Show GUI</span>
<a class="codeSnippetLink" href="../functions/GUISetState.htm"><span class="S4">GUISetState</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../macros.htm#@SW_SHOW"><span class="S6">@SW_SHOW</span></a><span class="S8">)</span>

<a class="codeSnippetLink" href="../keywords/Do.htm"><span class="S5">Do</span></a>
<a class="codeSnippetLink" href="../keywords/Do.htm"><span class="S5">Until</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/GUIGetMsg.htm"><span class="S4">GUIGetMsg</span></a><span class="S8">()</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S9">$GUI_EVENT_CLOSE</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
