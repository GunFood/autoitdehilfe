<!DOCTYPE html>
<html>
<head>
  <title>Benutzerdefinierte Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1>Debug Benutzerdefinierte Funktionsreferenz</h1>
<p>Es folgt eine Liste der benutzerdefinierten Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>Wenn diese Funktion verwendet wird, so muss <strong>#include &lt;Debug.au3&gt;</strong> hinzugefügt werden.</p>
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Benutzerdefinierte Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_Assert.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_Assert</a></td>
<td>Zeigt eine Nachricht an, falls die Aussage nicht zutrifft<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_DebugArrayDisplay.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_DebugArrayDisplay</a></td>
<td>Zeigt ein 1D oder 2D Array in einem ListView um das Debuggen zu unterst&uuml;tzen<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_DebugBugReportEnv.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_DebugBugReportEnv</a></td>
<td>Gibt einen String aus, der Informationen f&uuml;r einen Fehlerbericht enth&auml;lt<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_DebugCOMError.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_DebugCOMError</a></td>
<td>Setzt das Debug-Level f&uuml;r COM Fehler, setzt es zur&uuml;ck oder fragt es ab.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_DebugOut.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_DebugOut</a></td>
<td>Schreibt die Ausgabe einer Debugging-Session, welche durch _DebugSetup() gestartet wurde<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_DebugReport.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_DebugReport</a></td>
<td>Schreibt zu einer Debug-Sitzung<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_DebugReportEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_DebugReportEx</a></td>
<td>Schreibt zu einer Debugging-Sitzung eine formatierte Nachricht<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_DebugReportVar.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_DebugReportVar</a></td>
<td>Schreibt zu einer Debugging-Session den Inhalt einer Variablen<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_DebugSetup.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_DebugSetup</a></td>
<td>Startet eine Debug-Sitzung durch Verwendung einer festgelegten Reportart<br /></td>
</tr>
</table>

</body>
