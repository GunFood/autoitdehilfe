<!DOCTYPE html>
<html>
<head>
  <title>Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<div class="top"><h1>Controls Funktionsreferenz</h1><div>
<p>Es folgt eine Liste der Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlClick.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlClick</a></td>
<td>Sendet einen Mausklick-Befehl an das angegebene Control.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlCommand.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlCommand</a></td>
<td>Sendet einen Befehl an ein Control.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlDisable.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlDisable</a></td>
<td>Sperrt/deaktivert ein Control.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlEnable.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlEnable</a></td>
<td>Gibt ein gesperrtes (disabled) Control frei.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlFocus.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlFocus</a></td>
<td>Setzt den Eingabefokus auf ein bestimmtes Control in einem Fenster.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlGetFocus.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlGetFocus</a></td>
<td>Gibt den Klassennamen des Controls zur&uuml;ck, das den (Eingabe-) Fokus in einem bestimmten Fenster hat.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlGetHandle.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlGetHandle</a></td>
<td>Erfragt den internen "handle" (Prozessidentifizierungscode) eines Controls.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlGetPos.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlGetPos</a></td>
<td>Erfragt die Position und die Gr&ouml;&szlig;e eines Controls relativ zu seinem Fenster.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlGetText.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlGetText</a></td>
<td>Erfragt Text vom Control.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlHide.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlHide</a></td>
<td>Versteckt ein Control.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlListView.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlListView</a></td>
<td>Sendet einen Befehl an ein ListView32 Control.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlMove.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlMove</a></td>
<td>Verschiebt ein Control in einem Fenster.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlSend.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlSend</a></td>
<td>Sendet eine Folge von Zeichen (Tastendr&uuml;cken) an ein Control.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlSetText.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlSetText</a></td>
<td>Schreibt einen neuen Text in ein Control.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlShow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlShow</a></td>
<td>Zeigt ein verstecktes Control an.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ControlTreeView.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ControlTreeView</a></td>
<td>Sendet einen Befehl an ein TreeView32 Control.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\StatusbarGetText.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StatusbarGetText</a></td>
<td>Liest den Text der Statusbar, soweit es sich um ein Standard Control handelt.<br /></td>
</tr>
</table>

</body>
