<!DOCTYPE html>
<html>
<head>
  <title>User Defined Functions</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1>Windows user defined functions Reference</h1>
<p>Below is a complete list of the user defined functions available in AutoIt.
Click on a user defined function name for a detailed description.</p>
<p>When using them you need to add a <strong>#include &lt;WinAPISysWin.au3&gt;</strong>.
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">User Defined Function</th>
  <th style="width:75%">Description</th>
</tr>
<tr>
<td><a href="_WinAPI_AdjustWindowRectEx.htm">_WinAPI_AdjustWindowRectEx</a></td>
<td>Calculates the required size of the window rectangle, based on the desired size of the client rectangle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_AnimateWindow.htm">_WinAPI_AnimateWindow</a></td>
<td>Enables you to produce special effects when showing or hiding windows<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_BeginDeferWindowPos.htm">_WinAPI_BeginDeferWindowPos</a></td>
<td>Allocates memory for a multiple-window-position structure<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_BringWindowToTop.htm">_WinAPI_BringWindowToTop</a></td>
<td>Brings the specified window to the top of the Z order<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_BroadcastSystemMessage.htm">_WinAPI_BroadcastSystemMessage</a></td>
<td>Sends a message to the specified recipients<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CallWindowProc.htm">_WinAPI_CallWindowProc</a></td>
<td>Passes the hook information to the next hook procedure in the current hook chain<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CallWindowProcW.htm">_WinAPI_CallWindowProcW</a></td>
<td>Passes message information to the specified window procedure<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CascadeWindows.htm">_WinAPI_CascadeWindows</a></td>
<td>Cascades the specified child windows of the specified parent window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ChangeWindowMessageFilterEx.htm">_WinAPI_ChangeWindowMessageFilterEx</a></td>
<td>Modifies the User Interface Privilege Isolation (UIPI) message filter for a specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ChildWindowFromPointEx.htm">_WinAPI_ChildWindowFromPointEx</a></td>
<td>Determines which, if any, of the child windows belonging to the specified parent window contains the specified point<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CloseWindow.htm">_WinAPI_CloseWindow</a></td>
<td>Minimizes (but does not destroy) the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateWindowEx.htm">_WinAPI_CreateWindowEx</a></td>
<td>Creates an overlapped, pop-up, or child window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DeferWindowPos.htm">_WinAPI_DeferWindowPos</a></td>
<td>Updates the specified multiple-window-position structure for the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DefWindowProc.htm">_WinAPI_DefWindowProc</a></td>
<td>Call the default window procedure to provide default processing<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DefWindowProcW.htm">_WinAPI_DefWindowProcW</a></td>
<td>Calls the default window procedure to provide default processing for any window messages<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DeregisterShellHookWindow.htm">_WinAPI_DeregisterShellHookWindow</a></td>
<td>Unregisters a specified Shell window that is registered to receive Shell hook messages<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DestroyWindow.htm">_WinAPI_DestroyWindow</a></td>
<td>Destroys the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DragAcceptFiles.htm">_WinAPI_DragAcceptFiles</a></td>
<td>Registers whether a window accepts dropped files<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DragFinish.htm">_WinAPI_DragFinish</a></td>
<td>Releases memory that the system allocated for use in transferring file names to the application<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DragQueryFileEx.htm">_WinAPI_DragQueryFileEx</a></td>
<td>Retrieves the names of dropped files that result from a successful drag-and-drop operation<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DragQueryPoint.htm">_WinAPI_DragQueryPoint</a></td>
<td>Retrieves the position of the mouse pointer at the time a file was dropped during a drag-and-drop operation<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EndDeferWindowPos.htm">_WinAPI_EndDeferWindowPos</a></td>
<td>Simultaneously updates the position and size of one or more windows in a single screen-refreshing cycle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumChildWindows.htm">_WinAPI_EnumChildWindows</a></td>
<td>Enumerates a child windows that belong to the specified parent window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumWindows.htm">_WinAPI_EnumWindows</a></td>
<td>Enumerates all windows<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumWindowsPopup.htm">_WinAPI_EnumWindowsPopup</a></td>
<td>Enumerates popup windows<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumWindowsTop.htm">_WinAPI_EnumWindowsTop</a></td>
<td>Enumerates all top level windows<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FindWindow.htm">_WinAPI_FindWindow</a></td>
<td>Retrieves the handle to the top-level window whose class name and window name match<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FlashWindow.htm">_WinAPI_FlashWindow</a></td>
<td>Flashes the specified window one time<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FlashWindowEx.htm">_WinAPI_FlashWindowEx</a></td>
<td>Flashes the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetAncestor.htm">_WinAPI_GetAncestor</a></td>
<td>Retrieves the handle to the ancestor of the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetClassInfoEx.htm">_WinAPI_GetClassInfoEx</a></td>
<td>Retrieves information about a window class<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetClassLongEx.htm">_WinAPI_GetClassLongEx</a></td>
<td>Retrieves the specified value associated with the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetClassName.htm">_WinAPI_GetClassName</a></td>
<td>Retrieves the name of the class to which the specified window belongs<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetClientHeight.htm">_WinAPI_GetClientHeight</a></td>
<td>Retrieves the height of a window's client area<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetClientRect.htm">_WinAPI_GetClientRect</a></td>
<td>Retrieves the coordinates of a window's client area<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetClientWidth.htm">_WinAPI_GetClientWidth</a></td>
<td>Retrieves the width of a window's client area<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetDesktopWindow.htm">_WinAPI_GetDesktopWindow</a></td>
<td>Returns the handle of the Windows desktop window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetDlgItem.htm">_WinAPI_GetDlgItem</a></td>
<td>Retrieves the handle of a control in the specified dialog box<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetFocus.htm">_WinAPI_GetFocus</a></td>
<td>Retrieves the handle of the window that has the keyboard focus<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetForegroundWindow.htm">_WinAPI_GetForegroundWindow</a></td>
<td>Returns the handle of the foreground window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetGUIThreadInfo.htm">_WinAPI_GetGUIThreadInfo</a></td>
<td>Retrieves information about the active window or a specified GUI thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetLastActivePopup.htm">_WinAPI_GetLastActivePopup</a></td>
<td>Determines which pop-up window owned by the specified window was most recently active<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetLayeredWindowAttributes.htm">_WinAPI_GetLayeredWindowAttributes</a></td>
<td>Gets Layered Window Attributes<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetMessageExtraInfo.htm">_WinAPI_GetMessageExtraInfo</a></td>
<td>Retrieves the extra message information for the current thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetParent.htm">_WinAPI_GetParent</a></td>
<td>Retrieves the handle of the specified child window's parent window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetParentProcess.htm">_WinAPI_GetParentProcess</a></td>
<td>Retrieves the PID of the parent process for the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetShellWindow.htm">_WinAPI_GetShellWindow</a></td>
<td>Retrieves a handle to the Shell's desktop window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetSysColor.htm">_WinAPI_GetSysColor</a></td>
<td>Retrieves the current color of the specified display element<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetTopWindow.htm">_WinAPI_GetTopWindow</a></td>
<td>Retrieves a handle to the child window at the top of the Z order<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindow.htm">_WinAPI_GetWindow</a></td>
<td>Retrieves the handle of a window that has a specified relationship to the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowDC.htm">_WinAPI_GetWindowDC</a></td>
<td>Retrieves the device context (DC) for the entire window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowDisplayAffinity.htm">_WinAPI_GetWindowDisplayAffinity</a></td>
<td>Retrieves the current display affinity setting, from any process, for a given window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowExt.htm">_WinAPI_GetWindowExt</a></td>
<td>Retrieves the x-extent and y-extent of the window for the specified device context<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowFileName.htm">_WinAPI_GetWindowFileName</a></td>
<td>Retrieves the fully-qualified path of the module associated with the specified window handle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowHeight.htm">_WinAPI_GetWindowHeight</a></td>
<td>Returns the height of the window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowInfo.htm">_WinAPI_GetWindowInfo</a></td>
<td>Retrieves information about the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowLong.htm">_WinAPI_GetWindowLong</a></td>
<td>Retrieves information about the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowOrg.htm">_WinAPI_GetWindowOrg</a></td>
<td>Retrieves the x-coordinates and y-coordinates of the window origin for the specified device context<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowPlacement.htm">_WinAPI_GetWindowPlacement</a></td>
<td>Retrieves the placement of the window for Min, Max, and normal positions<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowRect.htm">_WinAPI_GetWindowRect</a></td>
<td>Retrieves the dimensions of the bounding rectangle of the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowText.htm">_WinAPI_GetWindowText</a></td>
<td>Retrieves the text of the specified window's title bar<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowThreadProcessId.htm">_WinAPI_GetWindowThreadProcessId</a></td>
<td>Retrieves the identifier of the thread that created the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowWidth.htm">_WinAPI_GetWindowWidth</a></td>
<td>Returns the width of the window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_InProcess.htm">_WinAPI_InProcess</a></td>
<td>Determines whether a window belongs to the current process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_InvalidateRect.htm">_WinAPI_InvalidateRect</a></td>
<td>Adds a rectangle to the specified window's update region<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsChild.htm">_WinAPI_IsChild</a></td>
<td>Tests whether a window is a child window of a specified parent window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsClassName.htm">_WinAPI_IsClassName</a></td>
<td>Wrapper to check ClassName of the control<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsHungAppWindow.htm">_WinAPI_IsHungAppWindow</a></td>
<td>Determines whether the specified application is not responding<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsIconic.htm">_WinAPI_IsIconic</a></td>
<td>Determines whether the specified window is minimized (iconic)<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsWindow.htm">_WinAPI_IsWindow</a></td>
<td>Determines whether the specified window handle identifies an existing window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsWindowEnabled.htm">_WinAPI_IsWindowEnabled</a></td>
<td>Determines whether the specified window is enabled for mouse and keyboard input<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsWindowUnicode.htm">_WinAPI_IsWindowUnicode</a></td>
<td>Determines whether the specified window is a native Unicode window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsWindowVisible.htm">_WinAPI_IsWindowVisible</a></td>
<td>Retrieves the visibility state of the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsZoomed.htm">_WinAPI_IsZoomed</a></td>
<td>Determines whether a window is maximized<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_KillTimer.htm">_WinAPI_KillTimer</a></td>
<td>Destroys the specified timer<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MoveWindow.htm">_WinAPI_MoveWindow</a></td>
<td>Changes the position and dimensions of the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_OpenIcon.htm">_WinAPI_OpenIcon</a></td>
<td>Restores a minimized (iconic) window to its previous size and position and activates the window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_PostMessage.htm">_WinAPI_PostMessage</a></td>
<td>Places a message in the message queue and then returns<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_RegisterClass.htm">_WinAPI_RegisterClass</a></td>
<td>Registers a window class<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_RegisterClassEx.htm">_WinAPI_RegisterClassEx</a></td>
<td>Registers a window class<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_RegisterShellHookWindow.htm">_WinAPI_RegisterShellHookWindow</a></td>
<td>Registers a specified Shell window to receive certain messages for events or notifications<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_RegisterWindowMessage.htm">_WinAPI_RegisterWindowMessage</a></td>
<td>Defines a new window message that is guaranteed to be unique throughout the system<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SendMessageTimeout.htm">_WinAPI_SendMessageTimeout</a></td>
<td>Sends the specified message to one of more windows<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetClassLongEx.htm">_WinAPI_SetClassLongEx</a></td>
<td>Replaces the specified value into the specified window belongs<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetFocus.htm">_WinAPI_SetFocus</a></td>
<td>Sets the keyboard focus to the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetFont.htm">_WinAPI_SetFont</a></td>
<td>Sets a window font<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetForegroundWindow.htm">_WinAPI_SetForegroundWindow</a></td>
<td>Puts the specified window into the foreground and activates its<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetLayeredWindowAttributes.htm">_WinAPI_SetLayeredWindowAttributes</a></td>
<td>Sets Layered Window Attributes<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetMessageExtraInfo.htm">_WinAPI_SetMessageExtraInfo</a></td>
<td>Sets the extra message information for the current thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetParent.htm">_WinAPI_SetParent</a></td>
<td>Changes the parent window of the specified child window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetSysColors.htm">_WinAPI_SetSysColors</a></td>
<td>Obtains information about the display devices in a system<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetTimer.htm">_WinAPI_SetTimer</a></td>
<td>Creates a timer with the specified time-out value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowDisplayAffinity.htm">_WinAPI_SetWindowDisplayAffinity</a></td>
<td>Stores the display affinity setting in kernel mode on the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowLong.htm">_WinAPI_SetWindowLong</a></td>
<td>Sets information about the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowPlacement.htm">_WinAPI_SetWindowPlacement</a></td>
<td>Sets the placement of the window for Min, Max, and normal positions<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowPos.htm">_WinAPI_SetWindowPos</a></td>
<td>Changes the size, position, and Z order of a child, pop-up, or top-level window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowText.htm">_WinAPI_SetWindowText</a></td>
<td>Changes the text of the specified window's title bar<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ShowOwnedPopups.htm">_WinAPI_ShowOwnedPopups</a></td>
<td>Shows or hides all pop-up windows owned by the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ShowWindow.htm">_WinAPI_ShowWindow</a></td>
<td>Sets the specified window's show state<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SwitchToThisWindow.htm">_WinAPI_SwitchToThisWindow</a></td>
<td>Switches the focus to a specified window and bring it to the foreground<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_TileWindows.htm">_WinAPI_TileWindows</a></td>
<td>Tiles the specified child windows of the specified parent window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_UnregisterClass.htm">_WinAPI_UnregisterClass</a></td>
<td>Unregisters a window class, freeing the memory required for the class<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_UpdateLayeredWindow.htm">_WinAPI_UpdateLayeredWindow</a></td>
<td>Updates the position, size, shape, content, and translucency of a layered window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_UpdateLayeredWindowEx.htm">_WinAPI_UpdateLayeredWindowEx</a></td>
<td>Updates a bitmap translucency of a layered window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_UpdateLayeredWindowIndirect.htm">_WinAPI_UpdateLayeredWindowIndirect</a></td>
<td>Updates the position, size, shape, content, and translucency of a layered window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_UpdateWindow.htm">_WinAPI_UpdateWindow</a></td>
<td>Updates the client area of a window by sending a WM_PAINT message to the window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WindowFromPoint.htm">_WinAPI_WindowFromPoint</a></td>
<td>Retrieves the handle of the window that contains the specified point<br /></td>
</tr>
</table>

</body>
