<!DOCTYPE html>
<html>
<head>
<title>Funktion StdoutRead</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>StdoutRead</h1><div>
<div id="flagtext">Beschreibung anzeigen in</div>
<div id="flaglink"> <a href="../functions_en/StdoutRead.htm"><img src="../images/Flagge_en.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Liest vom STDOUT-Stream eines zuvor gestarteten Child-Prozesses ein.<br /></p>
<p class="codeheader">
StdoutRead ( process_id [, peek = False [, binary = False]] )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">process_id</td>
<td style="width:85%">Die Prozess-ID eines Child-Prozesses, wie bei einem vorigen Aufruf von Run zur&uuml;ckgegeben</td>
</tr>
<tr>
<td>peek</td>
<td><strong>[optional]</strong> Wenn True, entfernt die Funktion die eingelesenen Zeichen nicht aus dem Stream</td>
</tr>
<tr>
<td>binary</td>
<td><strong>[optional]</strong> Wenn True, liest die Funktion die Daten als bin&auml;r anstatt als Text (Standard ist Text)</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Erfolg:</td>
<td style="width:90%">Die gelesenen Daten. @extended enth&auml;lt die Anzahl der gelesenen Bytes.</td>
</tr>
<tr>
<td class="valign-top">Fehler:</td>
<td>Setzt das @error Flag auf ungleich 0, wenn EOF erreicht ist, STDOUT nicht an diesen Prozess weitergeleitet wurde oder ein anderer Fehler aufgetreten ist.</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p><a href="StdoutRead.htm">StdoutRead()</a> liest aus dem Konsolen-Standard-Ausgabe-Stream eines Child-Prozesses, der normalerweise von Konsolen-Applikationen genutzt wird, um Text auf dem Bildschirm auszugeben. Beim Aufruf von <a href="Run.htm">Run()</a> f&uuml;r den Child-Prozess, aus dem man lesen m&ouml;chte, muss der STD-I/O-Parameter den Wert $STDOUT_CHILD (2) enthalten, damit diese Funktion richtig arbeitet (siehe die <a href="Run.htm">Run</a>-Funktion).<br />
<a href="StdoutRead.htm">StdoutRead()</a> blockiert den Stream nicht, sondern kehrt sofort zur&uuml;ck. Sollen alle Daten ermittelt werden, muss die Funktion in einer Schleife aufgerufen werden.<br />
"Peeking" auf dem Stream entfernt die Daten nicht aus dem Puffer, gibt aber die verf&uuml;gbaren Daten normal zur&uuml;ck.<br />
Standardm&auml;&szlig;ig werden Daten im Textformat zur&uuml;ckgegeben. Wird die Binary-Option verwendet, so werden die Daten im Bin&auml;rformat zur&uuml;ckgegeben.<br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="Run.htm">Run</a>, <a href="RunAs.htm">RunAs</a>, <a href="StderrRead.htm">StderrRead</a>, <a href="StdinWrite.htm">StdinWrite</a>, <a href="StdioClose.htm">StdioClose</a></p>

<h2 class="bottom">Beispiel</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Das Beispiel wurde in die Zwischenablage kopiert");
}
}
</script>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Dieses Skript &ouml;ffnen"><param name="Item1" value=",Examples\\HelpFile\\StdoutRead.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">In die Zwischenablage kopieren<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;Array.au3&gt;</span><span class="S0"> </span><span class="S1">; wird f&uuml;r nur f&uuml;r _ArrayDisplay ben&ouml;tigt.</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;AutoItConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>

<span class="S1">; Zeigt rekursiv die Dateien innerhalb eines Verzeichnisses an.</span>
<span class="S0">Example</span><span class="S8">()</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$sFilePath</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@ScriptDir"><span class="S6">@ScriptDir</span></a><span class="S0"> </span><span class="S1">; Dursucht das aktuelle Skriptverzeichnis</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$sFilter</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"*.*"</span><span class="S0"> </span><span class="S1">; Sucht nach allen Dateien im aktuellen Verzeichnis. F&uuml;r eine Liste von erlaubten Platzhaltern (Wildcards) durchsucht die Hilfe-Datei nach 'Wildcards'.</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Wenn der Dateipfad kein Verzeichnis ist, so wird aus der 'Example'-Funktion gesprungen.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S5">Not</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringInStr.htm"><span class="S4">StringInStr</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../functions/FileGetAttrib.htm"><span class="S4">FileGetAttrib</span></a><span class="S8">(</span><span class="S9">$sFilePath</span><span class="S8">),</span><span class="S0"> </span><span class="S7">"D"</span><span class="S8">)</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Return</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/SetError.htm"><span class="S4">SetError</span></a><span class="S8">(</span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">EndIf</span></a>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Entfernt nachfolgende Backslashes und f&uuml;gt ein einziges Backslash hinzu.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$sFilePath</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringRegExpReplace.htm"><span class="S4">StringRegExpReplace</span></a><span class="S8">(</span><span class="S9">$sFilePath</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"[\\/]+\z"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"\"</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S11">#cs</span>
<span class="S2">&nbsp; &nbsp; &nbsp; &nbsp; Kommandozeilenparameter f&uuml;r DIR:</span>
<span class="S2">&nbsp; &nbsp; &nbsp; &nbsp; /B - Einfache Ausgabe.</span>
<span class="S2">&nbsp; &nbsp; &nbsp; &nbsp; /A-D - Sucht nach allen Dateien und ignoriere Verzeichnisse.</span>
<span class="S2">&nbsp; &nbsp; &nbsp; &nbsp; /S - Sucht innerhalb von Unterverzeichnissen.</span>
<span class="S2">&nbsp; &nbsp; </span><span class="S11">#ce</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$iPID</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/Run.htm"><span class="S4">Run</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../macros.htm#@ComSpec"><span class="S6">@ComSpec</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">' /C DIR "'</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sFilePath</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sFilter</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">'" /B /A-D /S'</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sFilePath</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@SW_HIDE"><span class="S6">@SW_HIDE</span></a><span class="S8">,</span><span class="S0"> </span><span class="S9">$STDOUT_CHILD</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Um nach Dateien zu suchen welche Unicodezeichen enthalten muss der /U Kommandozeilenparameter verwendet werden.</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Es wird solange gewartet, bis der Prozess mit der Prozess-ID, welche von Run zur&uuml;ckgegeben wurde, beendet ist.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/ProcessWaitClose.htm"><span class="S4">ProcessWaitClose</span></a><span class="S8">(</span><span class="S9">$iPID</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Liest den Stdout Stream der Prozess-ID welche von Run zur&uuml;ckgegeben wurde. Das kann auch in einer while-Schleife geschehen. Siehe dazu das Beispiel f&uuml;r StderrRead.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$sOutput</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StdoutRead.htm"><span class="S4">StdoutRead</span></a><span class="S8">(</span><span class="S9">$iPID</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Verwendet StringSplit um die Ausgabe von StdoutRead in ein Array zu teilen. Alle Wagenr&uuml;ckl&auml;ufe (@CRLF) werden entfernt und @CRLF (Zeilenvorschub) wird als Trennzeichen verwendet.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aArray</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringSplit.htm"><span class="S4">StringSplit</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../functions/StringTrimRight.htm"><span class="S4">StringTrimRight</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../functions/StringStripCR.htm"><span class="S4">StringStripCR</span></a><span class="S8">(</span><span class="S9">$sOutput</span><span class="S8">),</span><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringLen.htm"><span class="S4">StringLen</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../macros.htm#@LF"><span class="S6">@LF</span></a><span class="S8">)),</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@LF"><span class="S6">@LF</span></a><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@error"><span class="S6">@error</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Es sieht so aus als ob es einen Fehler gab w&auml;hrend der Suche nach allen Dateien im aktuellen Verzeichnis."</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Else</span></a>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Zeigt die Ergebnisse an.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_ArrayDisplay.htm"><span class="S15">_ArrayDisplay</span></a><span class="S8">(</span><span class="S9">$aArray</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">EndIf</span></a>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;Example</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
