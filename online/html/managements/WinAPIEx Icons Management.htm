<!DOCTYPE html>
<html>
<head>
  <title>Benutzerdefinierte Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1>Icons Benutzerdefinierte Funktionsreferenz</h1>
<p>Es folgt eine Liste der benutzerdefinierten Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>Wenn diese Funktion verwendet wird, so muss <strong>#include &lt;WinAPIIcons.au3&gt;</strong> hinzugefügt werden.</p>
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Benutzerdefinierte Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_AddIconTransparency.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_AddIconTransparency</a></td>
<td>F&uuml;gt einem 32 Bits-pro-Pixel Icon Transparenz hinzu<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CopyIcon.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CopyIcon</a></td>
<td>Kopiert das angegebene Icon von einem anderen Modul<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_Create32BitHICON.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_Create32BitHICON</a></td>
<td>Converts an icon to a 32 bits-per-pixel format and copies to the new icon<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CreateEmptyIcon.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CreateEmptyIcon</a></td>
<td>Erzeugt ein vollkommen transparentes Icon mit der angegebenen L&auml;nge, H&ouml;he und Farbtiefe.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CreateIcon.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CreateIcon</a></td>
<td>Erzeugt ein Icon mit der angegebenen Gr&ouml;&szlig;e, Farbe und Bitmuster.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CreateIconFromResourceEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CreateIconFromResourceEx</a></td>
<td>Erzeugt ein Icon oder einen Mauszeiger von den Ressourcenbits welche das Icon beschreiben.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CreateIconIndirect.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CreateIconIndirect</a></td>
<td>Erzeugt ein Icon oder ein Mauszeiger mit der gegebenen Gr&ouml;&szlig;e, Farbe und Bitmustern.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DestroyIcon.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DestroyIcon</a></td>
<td>L&ouml;scht ein Icon und gibt den durch das Icon belegten Speicher wieder frei<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_ExtractIcon.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_ExtractIcon</a></td>
<td>Extracts an icon from the specified executable file, DLL, or icon file<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_ExtractIconEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_ExtractIconEx</a></td>
<td>Erstellt ein Array von Handles zu gro&szlig;en oder kleinen Icons, die aus einer Datei extrahiert wurden<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_FileIconInit.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_FileIconInit</a></td>
<td>Initializes or reinitializes the system image list<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetIconDimension.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetIconDimension</a></td>
<td>Ruft eine Dimension des angegebenen Symbols ab<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetIconInfo.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetIconInfo</a></td>
<td>Ermittelt Informationen &uuml;ber das bestimmte Icon oder Cursor<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetIconInfoEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetIconInfoEx</a></td>
<td>Retrieves information about the specified icon or cursor<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_LoadIcon.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_LoadIcon</a></td>
<td>Loads the specified icon resource from the executable (.exe) file associated with an application instance<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_LoadIconMetric.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_LoadIconMetric</a></td>
<td>Loads a specified icon resource with a client-specified system metric<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_LoadIconWithScaleDown.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_LoadIconWithScaleDown</a></td>
<td>Loads an icon and scales down a larger image instead of scaling up a smaller image<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_LoadShell32Icon.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_LoadShell32Icon</a></td>
<td>Extrahiert ein Icon aus der shell32.dll<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_LookupIconIdFromDirectoryEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_LookupIconIdFromDirectoryEx</a></td>
<td>Searches through icon or cursor data for the icon or cursor that best fits the current display device<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_MirrorIcon.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_MirrorIcon</a></td>
<td>Reverses (mirrors) icons so that they are displayed correctly on a mirrored device context<br /></td>
</tr>
</table>

</body>
