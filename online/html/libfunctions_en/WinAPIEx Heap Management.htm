<!DOCTYPE html>
<html>
<head>
  <title>User Defined Functions</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1>Heap user defined functions Reference</h1>
<p>Below is a complete list of the user defined functions available in AutoIt.
Click on a user defined function name for a detailed description.</p>
<p>When using them you need to add a <strong>#include &lt;WinAPIMem.au3&gt;</strong>.
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">User Defined Function</th>
  <th style="width:75%">Description</th>
</tr>
<tr>
<td><a href="_WinAPI_CreateBuffer.htm">_WinAPI_CreateBuffer</a></td>
<td>Allocates a block of memory from the internal library heap<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateBufferFromStruct.htm">_WinAPI_CreateBufferFromStruct</a></td>
<td>Allocates a block of memory from the internal library heap and initializes it with the structure's data<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateString.htm">_WinAPI_CreateString</a></td>
<td>Copies a specified string to the newly allocated memory block and returns its pointer<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EqualMemory.htm">_WinAPI_EqualMemory</a></td>
<td>Compares two blocks of memory to determine whether the specified number of bytes are identical<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FillMemory.htm">_WinAPI_FillMemory</a></td>
<td>Fills a block of memory with the given value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FreeMemory.htm">_WinAPI_FreeMemory</a></td>
<td>Frees a memory block in the internal library heap<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetMemorySize.htm">_WinAPI_GetMemorySize</a></td>
<td>Retrieves the size of a memory block allocated from the internal library heap<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GlobalMemoryStatus.htm">_WinAPI_GlobalMemoryStatus</a></td>
<td>Retrieves information about current available memory<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsBadCodePtr.htm">_WinAPI_IsBadCodePtr</a></td>
<td>Determines whether the calling process has read access to the memory at the specified address<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsBadReadPtr.htm">_WinAPI_IsBadReadPtr</a></td>
<td>Verifies that the calling process has read access to the specified range of memory<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsBadStringPtr.htm">_WinAPI_IsBadStringPtr</a></td>
<td>Verifies that the calling process has read access to the specified range of memory<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsBadWritePtr.htm">_WinAPI_IsBadWritePtr</a></td>
<td>Verifies that the calling process has write access to the specified range of memory<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsMemory.htm">_WinAPI_IsMemory</a></td>
<td>Determines whether the specified pointer points to the memory block in the internal library heap<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LocalFree.htm">_WinAPI_LocalFree</a></td>
<td>Frees the specified local memory object and invalidates its handle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MoveMemory.htm">_WinAPI_MoveMemory</a></td>
<td>Moves a block of memory from one location to another<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ReadProcessMemory.htm">_WinAPI_ReadProcessMemory</a></td>
<td>Reads memory in a specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WriteProcessMemory.htm">_WinAPI_WriteProcessMemory</a></td>
<td>Writes memory in a specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ZeroMemory.htm">_WinAPI_ZeroMemory</a></td>
<td>Fills a block of memory with zeros<br /></td>
</tr>
</table>

</body>
