<!DOCTYPE html>
<html>
<head>
<title>Schl&uuml;sselwort Static</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Schl&uuml;sselwortreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>Static</h1><div>
<div id="flagtext">Beschreibung anzeigen in</div>
<div id="flaglink"> <a href="../keywords_en/Static.htm"><img src="../images/Flagge_en.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Deklariert eine statische Variable oder erzeugt ein statisches Array.<br /></p>
<p class="codeheader">
<strong>Static</strong> [Scope] $variable [ = initializer ]<br />
<strong>Static</strong> [Scope] $avArray<strong>[</strong>subscript 1<strong>]</strong>...<strong>[</strong>subscript n<strong>]</strong> [ = initializer ]<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">Scope</td>
<td style="width:85%">Ein optionaler Modifizierer, <strong>Local</strong> oder <strong>Global</strong>, der die Sichtbarkeit der Variablen angibt.</td>
</tr>
<tr>
<td>$variable</td>
<td>Der Name der zu deklarierenden statischen Variable.</td>
</tr>
<tr>
<td>initializer</td>
<td>Der Wert, der bei Initialisierung der Variablen zugewiesen wird. Der Initialisierer kann ein Funktionsaufruf sein der mathematische oder String-Operationen umfassen kann. Dieser Initialisierer wird nur ausgewertet, wenn die Variable das erste Mal deklariert wird.</td>
</tr>
<tr>
<td>subscript</td>
<td>Die Anzahl der zu erstellenden Elemente f&uuml;r die Array-Dimension, indexiert von 0 bis n-1.</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p>Das Schl&uuml;sselwort Static kann vor dem optionalen G&uuml;ltigkeitsbereich, oder nach diesem in der Zeile auftreten. <strong>Local Static</strong> oder <strong>Static Local</strong> sind beide akzeptabel.<br />
<br />
Falls der G&uuml;ltigkeitsbereich <strong>Local</strong> genutzt wird, dann ist die statische Variable nur sichtbar und benutzbar in der Funktion in der diese deklariert ist. Falls der G&uuml;ltigkeitsbereich <strong>Global</strong> genutzt wird, dann ist die statische Variable sichtbar und benutzbar in allen Teilen des Skriptes; in diesem Zusammenhang, ein <em>Global Static</em> hat kaum einen Unterschied zu einer <em>Global</em> Variable. Falls der G&uuml;ltigkeitsbereich nicht angegeben wird, dann wird die statische Variable im lokalen G&uuml;ltigkeitsbereich erzeugt; in dieser Art ist Static &auml;hnlich zu Dim.<br />
<br />
Der Unterschied zwischen Local und Static ist die Lebensdauer der Variablen. Local Variablen werden nur gespeichert w&auml;hrend die Funktion aufgerufen wird und sind nur innerhalb der Funktion sichtbar in der diese deklariert sind; wenn die Funktion zur&uuml;ckkehrt, werden alle Variablen freigegeben. Static Variablen sind ebenso nur innerhalb der funktion sichtbar in der diese deklariert sind, aber sie existieren weiter und behalten ihren letzten Wert, nachdem die Ausf&uuml;hrung der Funktion beendet ist. Wenn nach Variablen gesucht wird, wird der lokale G&uuml;ltigkeitsbereich zuerst gepr&uuml;ft und dann der globale als zweites.<br />
<br />
Das Schl&uuml;sselwort Static f&uuml;hrt &auml;hnliche Funktionen aus wie die Schl&uuml;sselworte <a href="Dim.htm">Global/Local/Dim</a>.<br />
<ol><li>Sie alle deklarieren eine Variable bevor sie genutzt wird.</li><br />
<li>Sie alle k&ouml;nnen ein Array erzeugen.</li></ol><br />
<br />
<strong>Achtung:</strong> Statische Variablen <em>m&uuml;ssen</em> mit dem Schl&uuml;sselwort <strong>Static</strong> deklariert werden, bevor sie benutzt werden, ganz gleich wie AutoItSetOption("<a href="../functions/AutoItSetOption.htm#MustDeclareVars">MustDeclareVars</a>") gesetzt ist. Statische Variablen k&ouml;nnen nicht <strong><a href="Dim.htm">Const</a></strong> sein.<br />
<br />
Es k&ouml;nnen ebenso mehrere statische Variablen in einer Zeile deklariert werden:<br />
<p class="code">Static $a, $b, $c</p><br />
Und initialisiere die Variablen:<br />
<p class="code">Static $a = 2, $b = 10, $c = 20</p><br />
<br />
Wenn eine statische Variable initialisiert wird, dann wird der Anfangswert nur das erste Mal ausgewertet und zugewiesen, wenn die Variable erzeugt wird. Bei allen nachfolgenden Durchl&auml;ufen wird der Initialisierer ignoriert.<br />
<br />
Siehe <a href="Dim.htm">Local</a> f&uuml;r mehr Informationen dar&uuml;ber, wie man Arrays nutzt, was hat dieselbe Funktionalit&auml;t wie in Local, ausgenommen f&uuml;r:<br />
<ol><li>Reinitialisierung einer Static Variable hat keinen Effekt.</li><br />
<br />
<li>Eine statische Variable kann nicht von einer lokalen zu einer globalen Variablen ge&auml;ndert, oder umgekehrt.</li></ol><br />
<br />
Wenn die Arraygr&ouml;&szlig;e ge&auml;ndert werden soll, dann ist <a href="ReDim.htm">ReDim</a> zu verwenden.<br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="../functions/AutoItSetOption.htm#MustDeclareVars">AutoItSetOption</a>, <a href="Dim.htm">Local</a>, <a href="ReDim.htm">ReDim</a>, <a href="../functions/UBound.htm">UBound</a></p>

<h2 class="bottom">Beispiel</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Das Beispiel wurde in die Zwischenablage kopiert");
}
}
</script>
<h3>Beispiel 1</h3>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Dieses Skript &ouml;ffnen"><param name="Item1" value=",Examples\\HelpFile\\Static.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">In die Zwischenablage kopieren<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>

<span class="S1">; Ruft die Example-Funktion auf um die statische Variable in dessen lokalen G&uuml;ltigkeitsbereich (Scope) zu initialisieren.</span>
<span class="S0">Example</span><span class="S8">()</span>

<span class="S1">; Ruft die Example-Funktion ein zweites Mal auf um zu zeigen, dass die Variable den Inhalt behalten hat, den wir ihr zuletzt zugewiesen haben.</span>
<span class="S0">Example</span><span class="S8">()</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Static.htm"><span class="S5">Static</span></a><span class="S0"> </span><span class="S9">$sString</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"Dies ist eine Textzeile welche deklariert wird mittels einer statischen Variable innerhalb eines lokalen G&uuml;ltigkeitsbereich."</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"Die Variable $sString wird nur dieser Funktion sichtbar sein bis das Script sich beendet."</span>


<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sString</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$sString</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"Wenn man nur den lokalen G&uuml;ltigkeitsbereich f&uuml;r diesen String verwenden w&uuml;rde, so w&auml;re dieser String nicht sichtbar wenn wir die Funktion mehrfach aufrufen."</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"Da wir aber das Static Schl&uuml;sselwort verwenden wird die Variable $sString ihren zuletzt zugewiesenen Wert behalten."</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;Example</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
<h3>Beispiel 2</h3>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Dieses Skript &ouml;ffnen"><param name="Item1" value=",Examples\\HelpFile\\Static[02].au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext2\').innerText)">In die Zwischenablage kopieren<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext2">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>

<span class="S0">Example</span><span class="S8">()</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; SomeFunc</span><span class="S8">()</span><span class="S0"> </span><span class="S1">; This will display a message box of 1, 1.</span>
<span class="S0">&nbsp; &nbsp; SomeFunc</span><span class="S8">()</span><span class="S0"> </span><span class="S1">; This will display a message box of 1, 2.</span>
<span class="S0">&nbsp; &nbsp; SomeFunc</span><span class="S8">()</span><span class="S0"> </span><span class="S1">; This will display a message box of 1, 3.</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;Example</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> SomeFunc</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; This initialises a Static variable in Local scope. When a variable is declared just in Local scope (within a Function,)</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; it's destroyed when the Function ends/returns. This isn't the case for a Static variable. The variable can't be</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; accessed from anywhere else in the script apart from the Function it was declared in.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Static.htm"><span class="S5">Static</span></a><span class="S0"> </span><span class="S9">$vVariableThatIsStatic</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">0</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$vVariableThatIsLocal</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">0</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$vVariableThatIsLocal</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">+=</span></a><span class="S0"> </span><span class="S3">1</span><span class="S0"> </span><span class="S1">; This will always be 1 as it was destroyed once returned from SomeFunc.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$vVariableThatIsStatic</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">+=</span></a><span class="S0"> </span><span class="S3">1</span><span class="S0"> </span><span class="S1">; This will increase by 1.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$vVariableThatIsLocal</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$vVariableThatIsStatic</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;SomeFunc</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
