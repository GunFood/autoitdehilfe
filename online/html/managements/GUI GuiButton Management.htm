<!DOCTYPE html>
<html>
<head>
  <title>Benutzerdefinierte Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1>GuiButton Benutzerdefinierte Funktionsreferenz</h1>
<p>Es folgt eine Liste der benutzerdefinierten Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>Wenn diese Funktion verwendet wird, so muss <strong>#include &lt;GuiButton.au3&gt;</strong> hinzugefügt werden.</p>
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Benutzerdefinierte Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_Click.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_Click</a></td>
<td>Simuliert einen Klick auf einen Button<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_Create.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_Create</a></td>
<td>Erstellt ein Button-Control<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_Destroy.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_Destroy</a></td>
<td>L&ouml;scht ein Button-Control<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_Enable.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_Enable</a></td>
<td>Aktiviert oder deaktiviert die Eingabe per Maus oder Tastatur in dem festgelegten Button<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetCheck.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetCheck</a></td>
<td>Ermittelt den Status, ob ein Radiobutton oder eine Checkbox markiert ist<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetFocus.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetFocus</a></td>
<td>Ermittelt, ob der Button den Fokus der Tastatur besitzt<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetIdealSize.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetIdealSize</a></td>
<td>Ermittelt die optimale Gr&ouml;&szlig;e des Buttons, damit dessen Text und Bild am besten passen, wenn eine Imagelist vorhanden ist<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetImage.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetImage</a></td>
<td>Ermittelt ein Handle zu dem Bild (Icon oder Bitmap), welches dem Button zugewiesen ist<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetImageList.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetImageList</a></td>
<td>Ermittelt ein Array, welches eine Imagelist f&uuml;r die jeweiligen Button-Controls enth&auml;lt<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetNote.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetNote</a></td>
<td>Ermittelt den Text der Notiz, der mit einem Befehlszeilen-Button verbunden ist<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetNoteLength.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetNoteLength</a></td>
<td>Ermittelt die L&auml;nge der Textnotiz, welche in der Beschreibung f&uuml;r einen Befehlszeilen-Button dargestellt werden k&ouml;nnte<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetSplitInfo.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetSplitInfo</a></td>
<td>Ermittelt Informationen f&uuml;r ein "Split"-Button-Control<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetState.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetState</a></td>
<td>Ermittelt den Status eines Buttons oder einer Checkbox<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetText.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetText</a></td>
<td>Ermittelt den Text eines Buttons<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_GetTextMargin.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_GetTextMargin</a></td>
<td>Ermittelt die ben&ouml;tigten R&auml;nder um Text in einem Button-Control zu zeichnen<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetCheck.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetCheck</a></td>
<td>Setzt den markierten Status eines Radiobuttons oder einer Checkbox<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetDontClick.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetDontClick</a></td>
<td>Setzt den Status des $BST_DONTCLICK Flags eines Buttons<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetFocus.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetFocus</a></td>
<td>Setzt den Tastatur-Fokus f&uuml;r den festgelegten Button<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetImage.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetImage</a></td>
<td>Weist einem Button ein Bild zu<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetImageList.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetImageList</a></td>
<td>Verkn&uuml;pft eine Imagelist zu einem Button-Control<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetNote.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetNote</a></td>
<td>Setzt den Text der Notiz, der mit einem Befehlszeilen-Button verbunden ist<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetShield.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetShield</a></td>
<td>Setzt den ben&ouml;tigten Status f&uuml;r einen festgelegten Button oder Befehlszeilen-Button um ein erh&ouml;ht versetztes Icon darzustellen<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetSize.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetSize</a></td>
<td>Legt die Gr&ouml;&szlig;e des Buttons fest<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetSplitInfo.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetSplitInfo</a></td>
<td>Setzt Informationen f&uuml;r ein "Split Button" Control<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetState.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetState</a></td>
<td>Setzt den "hervorgehoben" Status eines Buttons. Der "hervorgehoben" Status gibt an, ob der Button hervorgehoben ist, als h&auml;tte der Benutzer ihn gedr&uuml;ckt<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetStyle.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetStyle</a></td>
<td>Setzt den Stil des Buttons<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetText.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetText</a></td>
<td>Setzt den Text eines Buttons<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_SetTextMargin.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_SetTextMargin</a></td>
<td>Setzt den Rand, welcher verwendet wird, um den Text in einem Button-Control zu zeichnen<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_GUICtrlButton_Show.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_GUICtrlButton_Show</a></td>
<td>Zeigt bzw. versteckt einen Button<br /></td>
</tr>
</table>

</body>
