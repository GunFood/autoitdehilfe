<!DOCTYPE html>
<html>
<head>
<title>Function _MemGlobalAlloc</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<h1 style="float:left; margin:15px 0 0 0; padding:0 0 0 0;">_MemGlobalAlloc</h1><br />
<a href="../libfunctions/_MemGlobalAlloc.htm"><img src="../images/Flagge_de.gif" height="29" width="36" border=0 hspace=10 style="float:right"/></a><br />
<div style="display:block; text-align:right;">Show description in</div><br />
<p style="margin:2px 0 0 0;" class="funcdesc">Allocates the specified number of bytes from the heap<br /></p>
<p class="codeheader">
#include &lt;Memory.au3&gt;<br />
_MemGlobalAlloc ( $iBytes [, $iFlags = 0] )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$iBytes</td>
<td style="width:85%">The number of bytes to allocate. If this parameter is zero and the $iFlags parameter specifies<br />
$GMEM_MOVEABLE, the function returns a handle to a memory object that is marked as discarded.</td>
</tr>
<tr>
<td>$iFlags</td>
<td><strong>[optional]</strong> The memory allocation attributes:<br />
&nbsp;&nbsp;&nbsp; $GMEM_FIXED - Allocates fixed memory. The return value is a pointer.<br />
&nbsp;&nbsp;&nbsp; $GMEM_MOVEABLE - Allocates movable memory. Memory blocks are never moved in physical memory, but they can be moved within the default heap.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; The return value is a handle to the memory object.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; To translate the handle into a pointer, use the <a href="_MemGlobalLock.htm">_MemGlobalLock()</a> function.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; This value cannot be combined with $GMEM_FIXED.<br />
&nbsp;&nbsp;&nbsp; $GMEM_ZEROINIT - Initializes memory contents to zero<br />
&nbsp;&nbsp;&nbsp; $GHND - Combines $GMEM_MOVEABLE and $GMEM_ZEROINIT<br />
&nbsp;&nbsp;&nbsp; $GPTR - Combines $GMEM_FIXED and $GMEM_ZEROINIT</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">a handle to the newly allocated memory object.</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>0.</td>
</tr>
</table>

<h2>Remarks</h2>
<p>Windows memory management does not provide a separate local heap and global heap.<br />
If this function succeeds, it allocates at least the amount of memory requested.<br />
If the actual amount allocated is greater than the amount requested, the process can use the entire amount.<br />
To determine the actual number of bytes allocated, use the <a href="_MemGlobalSize.htm">_MemGlobalSize()</a> function.<br />
If the heap does not contain sufficient free space to satisfy the request, this function returns NULL.<br />
Memory allocated with this function is guaranteed to be aligned on an 8 byte boundary.<br />
To execute dynamically generated code, use the <a href="_MemVirtualAlloc.htm">_MemVirtualAlloc()</a> function to allocate memory and the _Mem_VirtualProtect() function to grant $PAGE_EXECUTE access.<br />
To free the memory, use the <a href="_MemGlobalFree.htm">_MemGlobalFree()</a> function.<br />
</p>

<h2>Related</h2>
<p><a href="_MemGlobalFree.htm">_MemGlobalFree</a>, <a href="_MemGlobalLock.htm">_MemGlobalLock</a>, <a href="_MemGlobalSize.htm">_MemGlobalSize</a>, <a href="_MemVirtualAlloc.htm">_MemVirtualAlloc</a></p>

<h2>See Also</h2>
<p>Search <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(GlobalAlloc);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">GlobalAlloc</a> in MSDN  Library.
</p>

</body>
</html>
