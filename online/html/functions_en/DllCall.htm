<!DOCTYPE html>
<html>
<head>
<title>Function DllCall</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<h1 style="float:left; margin:15px 0 0 0; padding:0 0 0 0;">DllCall</h1><br />
<a href="../functions/DllCall.htm"><img src="../images/Flagge_de.gif" height="29" width="36" border=0 hspace=10 style="float:right"/></a><br />
<div style="display:block; text-align:right;">Show description in</div><br />
<p style="margin:2px 0 0 0;" class="funcdesc">Dynamically calls a function in a DLL.<br /></p>
<p class="codeheader">
DllCall ( "dll", "return type", "function" [, type1, param1 [, type n, param n]] )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">dll</td>
<td style="width:85%">The filename of the DLL to use. e.g. "user32.dll". A handle obtained from DllOpen can also be used (See Remarks).</td>
</tr>
<tr>
<td>return type</td>
<td>The return type of the function (see below).</td>
</tr>
<tr>
<td>function</td>
<td>The name, eg. "MessageBox" or the ordinal value, e.g. 62, of the function in the DLL to call.</td>
</tr>
<tr>
<td>type1</td>
<td><strong>[optional]</strong> The type of the parameter (see remarks).</td>
</tr>
<tr>
<td>param1</td>
<td><strong>[optional]</strong> The actual parameter (see remarks).</td>
</tr>
<tr>
<td>type n</td>
<td><strong>[optional]</strong> The type of the nth parameter (see remarks).</td>
</tr>
<tr>
<td>param n</td>
<td><strong>[optional]</strong> The actual nth parameter (see remarks).</td>
</tr>
</table><br />Valid Types are:<br />
<br />
<table>
<tr>
<td style="width:15%"><strong>Type</strong></td>
<td style="width:85%"><strong>Details</strong></td>
</tr>
<tr>
<td>NONE</td>
<td>no value (only valid for return type - equivalent to void in C)</td>
</tr>
<tr>
<td>BYTE</td>
<td>an unsigned 8 bit integer</td>
</tr>
<tr>
<td>BOOLEAN</td>
<td>an unsigned 8 bit integer</td>
</tr>
<tr>
<td>SHORT</td>
<td>a 16 bit integer</td>
</tr>
<tr>
<td>USHORT</td>
<td>an unsigned 16 bit integer</td>
</tr>
<tr>
<td>WORD</td>
<td>an unsigned 16 bit integer</td>
</tr>
<tr>
<td>INT</td>
<td>a 32 bit integer</td>
</tr>
<tr>
<td>LONG</td>
<td>a 32 bit integer</td>
</tr>
<tr>
<td>BOOL</td>
<td>a 32 bit integer</td>
</tr>
<tr>
<td>UINT</td>
<td>an unsigned 32 bit integer</td>
</tr>
<tr>
<td>ULONG</td>
<td>an unsigned 32 bit integer</td>
</tr>
<tr>
<td>DWORD</td>
<td>an unsigned 32 bit integer</td>
</tr>
<tr>
<td>INT64</td>
<td>a 64 bit integer</td>
</tr>
<tr>
<td>UINT64</td>
<td>an unsigned 64 bit integer</td>
</tr>
<tr>
<td>PTR</td>
<td>a general pointer (void *)</td>
</tr>
<tr>
<td>HWND</td>
<td>a window handle (pointer)</td>
</tr>
<tr>
<td>HANDLE</td>
<td>an handle (pointer)</td>
</tr>
<tr>
<td>FLOAT</td>
<td>a single precision floating point number</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>a double precision floating point number</td>
</tr>
<tr>
<td>INT_PTR, LONG_PTR, LRESULT, LPARAM</td>
<td>an integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</td>
</tr>
<tr>
<td>UINT_PTR, ULONG_PTR, DWORD_PTR, WPARAM</td>
<td>an unsigned integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</td>
</tr>
<tr>
<td>STR</td>
<td>an ANSI string (a minimum of 65536 chars is allocated).</td>
</tr>
<tr>
<td>WSTR</td>
<td>a UNICODE wide character string (a minimum of 65536 chars is allocated).</td>
</tr>
<tr>
<td>STRUCT</td>
<td>structure created with DllStructCreate()</td>
</tr>
<tr>
<td>*</td>
<td>Add * to the end of another type to pass it by reference. For example "int*" passes a pointer to an "int" type.</td>
</tr>
</table><br />
<br />Conversions from Windows API types to AutoIt types:<br />
<br />
<table>
<tr>
<td style="width:15%"><strong>WINDOWS API Type</strong></td>
<td style="width:85%"><strong>AutoIt Type</strong></td>
</tr>
<tr>
<td>LPCSTR/LPSTR</td>
<td>STR</td>
</tr>
<tr>
<td>LPCWSTR/LPWSTR</td>
<td>WSTR</td>
</tr>
<tr>
<td>LPVOID</td>
<td>PTR</td>
</tr>
<tr>
<td>LP<em>xyz</em></td>
<td><em>xyz</em>*</td>
</tr>
<tr>
<td>HINSTANCE</td>
<td>HANDLE</td>
</tr>
<tr>
<td>HRESULT</td>
<td>LONG</td>
</tr>
<tr>
<td>LONGLONG/LARGE_INTEGER</td>
<td>INT64</td>
</tr>
<tr>
<td>ULONGLONG/ULARGE_INTEGER</td>
<td>UINT64</td>
</tr>
<tr>
<td>SIZE_T</td>
<td>ULONG_PTR</td>
</tr>
</table>To use nested structures inside a structure you must re-define the nested structure. For example, a structure containing 2 POINT structures ("long;long") would be declared as "long;long;long;long". The first two long values correspond to the first POINT structure and the second two values correspond to the second POINT structure.<br />
<br />
For more Windows API types see <a href="http://msdn.microsoft.com/en-us/library/aa383751.aspx">MSDN</a>.<br />
<br />


<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">an array. See remarks.</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>sets the @error flag to non-zero.</td>
</tr>
<tr>
<td class="valign-top">@error:</td>
<td>1 = unable to use the DLL file,<br />
2&nbsp;= unknown "return type",<br />
3&nbsp;= "function" not found in the DLL file,<br />
4&nbsp;= bad number of parameters,<br />
5&nbsp;= bad parameter.</td>
</tr>
</table><br />


<h2>Remarks</h2>
<p>If a dll filename is given then the DLL is automatically loaded and then closed at the end of the call. If you want to manually control the loading and unloading of the DLL then you should use <a href="DllOpen.htm">DllOpen()</a> and <a href="DllClose.htm">DllClose()</a> and use a handle instead of a filename in this function.<br />
<br />
By default, AutoIt uses the 'stdcall' calling method. To use the 'cdecl' method place ':cdecl' after the return type.<br />
<a href="DllCall.htm">DllCall</a>("SQLite.dll", "int:cdecl", "sqlite3_open", "str", $sDatabase_Filename , "long*", 0).<br />
<br />
By default, AutoIt tries to use the ANSI version of a function name, i.e. MessageBoxA is attempted when MessageBox is given as the function name. To call the unicode version use MessageBoxW.<br />
<br />
If the function call fails then @error is set to non-zero.<br />
Otherwise an array is returned that contains the function return value and a copy of all the parameters (including parameters that the function may have modified when passed by reference).<br />
$return[0] = function return value<br />
$return[1] = param1<br />
$return[2] = param2<br />
...<br />
$return[n] = paramn<br />
<br />
If an output parameter with type STR or WSTR is defined as a Null string only a maximum 65536 string will be return.<br />
</p>

<h2>Related</h2>
<p><a href="DllCallbackFree.htm">DllCallbackFree</a>, <a href="DllCallbackGetPtr.htm">DllCallbackGetPtr</a>, <a href="DllCallbackRegister.htm">DllCallbackRegister</a>, <a href="DllClose.htm">DllClose</a>, <a href="DllOpen.htm">DllOpen</a>, <a href="DllStructCreate.htm">DllStructCreate</a>, <a href="DllStructGetPtr.htm">DllStructGetPtr</a></p>

<h2 class="bottom">Example</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Copied to clipboard");
}
}
</script>
<h3>Example 1</h3>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\DllCall.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">Copy to clipboard<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><span class="S1">; Calling the MessageBox API directly.</span>
<a class="codeSnippetLink" href="../functions/DllCall.htm"><span class="S4">DllCall</span></a><span class="S8">(</span><span class="S7">"user32.dll"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"MessageBox"</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"hwnd"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span><span class="S0"> </span><span class="S1">; Handle to the parent window</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"str"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Some text"</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span><span class="S0"> </span><span class="S1">; The text of the message box</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"str"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Some title"</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span><span class="S0"> </span><span class="S1">; The title of the message box</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; Flags for the message box.</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
<h3>Example 2</h3>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\DllCall[2].au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext2\').innerText)">Copy to clipboard<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext2">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>

<span class="S1">; Calling a function that modifies parameters,</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$iPID</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/Run.htm"><span class="S4">Run</span></a><span class="S8">(</span><span class="S7">"notepad"</span><span class="S8">)</span>

<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hWnd</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/WinWait.htm"><span class="S4">WinWait</span></a><span class="S8">(</span><span class="S7">"[CLASS:Notepad]"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2000</span><span class="S8">)</span>

<a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><span class="S9">$hWnd</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Timeout occured.</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Exit.htm"><span class="S5">Exit</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Default.htm"><span class="S5">Default</span></a><span class="S8">,</span><span class="S0"> </span><span class="S7">"Unable to start notepad!"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">EndIf</span></a>

<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aResult</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllCall.htm"><span class="S4">DllCall</span></a><span class="S8">(</span><span class="S7">"user32.dll"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"GetWindowText"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"hwnd"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$hWnd</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"str"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">32768</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Default.htm"><span class="S5">Default</span></a><span class="S8">,</span><span class="S0"> </span><span class="S7">"Number of characters returned: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$aResult</span><span class="S8">[</span><span class="S3">0</span><span class="S8">])</span>
<a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Default.htm"><span class="S5">Default</span></a><span class="S8">,</span><span class="S0"> </span><span class="S7">"Text (returned in parameter 2): '"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$aResult</span><span class="S8">[</span><span class="S3">2</span><span class="S8">]</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"'"</span><span class="S8">)</span>

<a class="codeSnippetLink" href="../functions/WinClose.htm"><span class="S4">WinClose</span></a><span class="S8">(</span><span class="S9">$hWnd</span><span class="S8">)</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
<h3>Example 3</h3>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\DllCall[3].au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext3\').innerText)">Copy to clipboard<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext3">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>

<span class="S1">; Show the Windows PickIconDlg.</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$sFileName</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@SystemDir"><span class="S6">@SystemDir</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">'\shell32.dll'</span>

<span class="S1">; Create a structure to store the icon index</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$tIconIndex</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructCreate.htm"><span class="S4">DllStructCreate</span></a><span class="S8">(</span><span class="S7">"int"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$tString</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructCreate.htm"><span class="S4">DllStructCreate</span></a><span class="S8">(</span><span class="S7">"wchar[260]"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$iStructsize</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructGetSize.htm"><span class="S4">DllStructGetSize</span></a><span class="S8">(</span><span class="S9">$tString</span><span class="S8">)</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">/</span></a><span class="S0"> </span><span class="S3">2</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$tString</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sFileName</span><span class="S8">)</span>

<span class="S1">; Run the PickIconDlg - '62' is the ordinal value for this function</span>
<a class="codeSnippetLink" href="../functions/DllCall.htm"><span class="S4">DllCall</span></a><span class="S8">(</span><span class="S7">"shell32.dll"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"none"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">62</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"hwnd"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"struct*"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$tString</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"int"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$iStructsize</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"struct*"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$tIconIndex</span><span class="S8">)</span>

<span class="S9">$sFileName</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructGetData.htm"><span class="S4">DllStructGetData</span></a><span class="S8">(</span><span class="S9">$tString</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$iIconIndex</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructGetData.htm"><span class="S4">DllStructGetData</span></a><span class="S8">(</span><span class="S9">$tIconIndex</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span>

<span class="S1">; Show the new filename and icon index</span>
<a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Info"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Last selected file: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sFileName</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"Icon-Index: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$iIconIndex</span><span class="S8">)</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
