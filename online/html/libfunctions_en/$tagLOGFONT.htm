<!DOCTYPE html>
<html>
<head>
<title>Keyword $tagLOGFONT</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1 class="small">Keyword Reference</h1>
<hr style="height:0px">
<div class="top"><h1>$tagLOGFONT</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../libfunctions/$tagLOGFONT.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<div ><input id="toggleButton" type="image" onclick="Themes.toggleTheme()" src="../images/dark.png" height ="36" width="36" alt="Toggle Theme"></div><br />
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Defines the attributes of a font<br /></p>
<p class="codeheader">
Global Const $tagLOGFONT = "struct; int Height;int Width;int Escapement;int Orientation;int Weight;byte Italic;byte Underline;" & _<br />
	"byte Strikeout;byte CharSet;byte OutPrecision;byte ClipPrecision;byte Quality;byte PitchAndFamily;char FaceName[32]; endstruct"<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">Height</td>
<td style="width:85%">Height, in logical units, of the font's character cell or character</td>
</tr>
<tr>
<td>Width</td>
<td>Specifies the average width, in logical units, of characters in the font</td>
</tr>
<tr>
<td>Escapement</td>
<td>Specifies the angle, in tenths of degrees, between the escapement vector and the X axis</td>
</tr>
<tr>
<td>Orientation</td>
<td>Specifies the angle, in tenths of degrees, between each character's base line and the X axis</td>
</tr>
<tr>
<td>Weight</td>
<td>Specifies the weight of the font in the range 0 through 1000</td>
</tr>
<tr>
<td>Italic</td>
<td>Specifies an italic font if set to True</td>
</tr>
<tr>
<td>Underline</td>
<td>Specifies an underlined font if set to True</td>
</tr>
<tr>
<td>StrikeOut</td>
<td>Specifies a strikeout font if set to True</td>
</tr>
<tr>
<td>CharSet</td>
<td>Specifies the character set</td>
</tr>
<tr>
<td>OutPrecision</td>
<td>Specifies the output precision</td>
</tr>
<tr>
<td>ClipPrecision</td>
<td>Specifies the clipping precision</td>
</tr>
<tr>
<td>Quality</td>
<td>Specifies the output quality</td>
</tr>
<tr>
<td>PitchAndFamily</td>
<td>Specifies the pitch and family of the font</td>
</tr>
<tr>
<td>FaceName</td>
<td>Specifies the typeface name of the font</td>
</tr>
</table>

</body>
</html>
