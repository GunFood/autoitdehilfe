<!DOCTYPE html>
<html>
<head>
  <title>Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1>Prozesse Funktionsreferenz</h1>
<p>Es folgt eine Liste der Funktionen die in AutoIt verf√ºgbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="DllCall.htm">DllCall</a></td>
<td>Ruft eine Funktion in einer DLL dynamisch auf.<br /></td>
</tr>
<tr>
<td><a href="DllCallAddress.htm">DllCallAddress</a></td>
<td>Ruft eine Funktion an einer bestimmten Speicheradresse dynamisch auf.<br /></td>
</tr>
<tr>
<td><a href="DllCallbackFree.htm">DllCallbackFree</a></td>
<td>Gibt ein zuvor mit DllCallbackRegister erzeugtes Handle wieder frei.<br /></td>
</tr>
<tr>
<td><a href="DllCallbackGetPtr.htm">DllCallbackGetPtr</a></td>
<td>Gibt einen Zeiger auf eine Callback Funktion zur&uuml;ck die an Win32 API &uuml;bergeben werden kann.<br /></td>
</tr>
<tr>
<td><a href="DllCallbackRegister.htm">DllCallbackRegister</a></td>
<td>Erzeugt eine benutzerdefinierte Callback- (R&uuml;ckruf-)funktion.<br /></td>
</tr>
<tr>
<td><a href="DllClose.htm">DllClose</a></td>
<td>Schlie&szlig;t eine zuvor ge&ouml;ffnete DLL.<br /></td>
</tr>
<tr>
<td><a href="DllOpen.htm">DllOpen</a></td>
<td>L&auml;dt eine DLL f&uuml;r den Gebrauch in DllCall.<br /></td>
</tr>
<tr>
<td><a href="DllStructCreate.htm">DllStructCreate</a></td>
<td>Erzeugt eine Struktur im C/C++-Stil die mit DllCall genutzt werden kann.<br /></td>
</tr>
<tr>
<td><a href="DllStructGetData.htm">DllStructGetData</a></td>
<td>Gibt die Daten eines Elements der Struktur zur&uuml;ck.<br /></td>
</tr>
<tr>
<td><a href="DllStructGetPtr.htm">DllStructGetPtr</a></td>
<td>Gibt den Zeiger auf die Struktur oder ein Element in der Struktur zur&uuml;ck.<br /></td>
</tr>
<tr>
<td><a href="DllStructGetSize.htm">DllStructGetSize</a></td>
<td>Gibt die Gr&ouml;sse der Struktur in Bytes zur&uuml;ck.<br /></td>
</tr>
<tr>
<td><a href="DllStructSetData.htm">DllStructSetData</a></td>
<td>Setzt Daten in einem Element der Struktur.<br /></td>
</tr>
<tr>
<td><a href="ProcessClose.htm">ProcessClose</a></td>
<td>Beendet den genannten Prozess.<br /></td>
</tr>
<tr>
<td><a href="ProcessExists.htm">ProcessExists</a></td>
<td>&Uuml;berpr&uuml;ft, ob ein bestimmter Prozess existiert.<br /></td>
</tr>
<tr>
<td><a href="ProcessGetStats.htm">ProcessGetStats</a></td>
<td>Gibt ein Array mit Speicher- oder IO-Infos eines laufenden Prozesses zur&uuml;ck.<br /></td>
</tr>
<tr>
<td><a href="ProcessList.htm">ProcessList</a></td>
<td>Gibt ein Array zur&uuml;ck, das die aktuell laufenden Prozesse auflistet (Namen und PIDs).<br /></td>
</tr>
<tr>
<td><a href="ProcessSetPriority.htm">ProcessSetPriority</a></td>
<td>&Auml;ndert die Priorit&auml;t eines Prozesses.<br /></td>
</tr>
<tr>
<td><a href="ProcessWait.htm">ProcessWait</a></td>
<td>Pausiert das Skript, bis der genannte Prozess existiert.<br /></td>
</tr>
<tr>
<td><a href="ProcessWaitClose.htm">ProcessWaitClose</a></td>
<td>Pausiert das Skript, bis der genannte Prozess nicht mehr existiert.<br /></td>
</tr>
<tr>
<td><a href="Run.htm">Run</a></td>
<td>Startet ein externes Programm.<br /></td>
</tr>
<tr>
<td><a href="RunAs.htm">RunAs</a></td>
<td>Startet ein externes Programm im Kontext eines anderen Benutzers.<br /></td>
</tr>
<tr>
<td><a href="RunAsWait.htm">RunAsWait</a></td>
<td>Startet ein externes Programm im Kontext eines anderen Benutzers und pausiert das Skript, bis das Programm beendet wurde.<br /></td>
</tr>
<tr>
<td><a href="RunWait.htm">RunWait</a></td>
<td>Startet ein externes Programm und pausiert die Ausf&uuml;hrung des Autoit-Skripts, bis das externe Programm beendet ist.<br /></td>
</tr>
<tr>
<td><a href="ShellExecute.htm">ShellExecute</a></td>
<td>F&uuml;hrt ein externes Programm unter Verwendung der ShellExecute-API aus.<br /></td>
</tr>
<tr>
<td><a href="ShellExecuteWait.htm">ShellExecuteWait</a></td>
<td>F&uuml;hrt ein externes Programm unter Verwendung der ShellExecute API aus und pausiert die Skriptausf&uuml;hrung, bis das Programm beendet wird.<br /></td>
</tr>
<tr>
<td><a href="Shutdown.htm">Shutdown</a></td>
<td>F&auml;hrt das System herunter.<br /></td>
</tr>
<tr>
<td><a href="StderrRead.htm">StderrRead</a></td>
<td>Liest eine Anzahl von Zeichen aus einem STDERR-Stream eines zuvor gestarteten Child-Prozesses ein.<br /></td>
</tr>
<tr>
<td><a href="StdinWrite.htm">StdinWrite</a></td>
<td>Schreibt eine Anzahl von Zeichen in den STDIN-Stream eines zuvor gestarteten Child-Prozesses.<br /></td>
</tr>
<tr>
<td><a href="StdioClose.htm">StdioClose</a></td>
<td>Gibt alle von einem Prozess, der zuvor mit STDIO-Umleitung gestartet wurde, belegten Ressourcen frei.<br /></td>
</tr>
<tr>
<td><a href="StdoutRead.htm">StdoutRead</a></td>
<td>Liest vom STDOUT-Stream eines zuvor gestarteten Child-Prozesses ein.<br /></td>
</tr>
</table>

</body>
