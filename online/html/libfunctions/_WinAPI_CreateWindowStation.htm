<!DOCTYPE html>
<html>
<head>
<title>Funktion _WinAPI_CreateWindowStation</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>_WinAPI_CreateWindowStation</h1><div>
<div id="flagtext">Beschreibung anzeigen in</div>
<div id="flaglink"> <a href="../libfunctions_en/_WinAPI_CreateWindowStation.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><img src="../images/Flagge_en.png" height="29" width="36" border=0 hspace=10/></a></div>
<div ><input id="toggleButton" type="image" onclick="Themes.toggleTheme()" src="../images/dark.png" height ="36" width="36" alt="Toggle Theme"></div><br />
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Erzeugt ein Fensterstationsobjekt assoziiert mit dem aufrufenden Prozess und wei&szlig;t sie der aktuellen Sitzung zu.<br /></p>
<p class="codeheader">
#include &lt;WinAPISys.au3&gt;<br />
_WinAPI_CreateWindowStation ( [$sName = '' [, $iAccess = 0 [, $iFlags = 0 [, $tSecurity = 0]]]] )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$sName</td>
<td style="width:85%"><strong>[optional]</strong> Der Name der zu erstellenden Fensterstation. Fensterstationsnamen beachten keine Gro&szlig;-/ Kleinschreibung und d&uuml;rfen keine Backslash (\) Zeichen beinhalten.<br />
Nur Mitglieder der Administratorengruppe sind befugt einen Namen anzugeben.<br />
Wenn dieser Parameter ein leerer String ist (Standard), so w&auml;hlt das System einen Fensterstationsnamen aus mittels des Anmeldesitzungsidentifizierers des aufrufenden Prozesses.</td>
</tr>
<tr>
<td>$iAccess</td>
<td><strong>[optional]</strong> Der Typ des Zugriffs welche das zur&uuml;ckgegebene Handle zur Fensterstation hat. Dieser Parameter kann einen oder mehrere der folgenden Werte annehmen:<br />
&nbsp;&nbsp;&nbsp; $WINSTA_ALL_ACCESS<br />
&nbsp;&nbsp;&nbsp; $WINSTA_ACCESSCLIPBOARD<br />
&nbsp;&nbsp;&nbsp; $WINSTA_ACCESSGLOBALATOMS<br />
&nbsp;&nbsp;&nbsp; $WINSTA_CREATEDESKTOP<br />
&nbsp;&nbsp;&nbsp; $WINSTA_ENUMDESKTOPS<br />
&nbsp;&nbsp;&nbsp; $WINSTA_ENUMERATE<br />
&nbsp;&nbsp;&nbsp; $WINSTA_EXITWINDOWS<br />
&nbsp;&nbsp;&nbsp; $WINSTA_READATTRIBUTES<br />
&nbsp;&nbsp;&nbsp; $WINSTA_READSCREEN<br />
&nbsp;&nbsp;&nbsp; $WINSTA_WRITEATTRIBUTES</td>
</tr>
<tr>
<td>$iFlags</td>
<td><strong>[optional]</strong> Die optionalen Flags. Dieser kann 0 sein (Standard) oder der folgende Wert:<br />
&nbsp;&nbsp;&nbsp; $CWF_CREATE_ONLY</td>
</tr>
<tr>
<td>$tSecurity</td>
<td><strong>[optional]</strong> Die $tagSECURITY_ATTRIBUTES Struktur welche angibt ob das zur&uuml;ckgegebene Handle von Childprozessen geerbt werden kann. Wenn dieser Parameter 0 ist (Standard), so kann das Handle nicht geerbt werden.</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Erfolg:</td>
<td style="width:90%">Das Handle der neu erzeugten Fensterstation. Wenn die abgegebene Fensterstation bereits existiert, so gelingt die Funktion und es wird das Handle zu der bereits existierenden Fensterstation zur&uuml;ckgegeben..</td>
</tr>
<tr>
<td class="valign-top">Fehler:</td>
<td>0. Es ist <a href="_WinAPI_GetLastError.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetLastError()</a> aufzurufen um erweiterte Fehlerinformationen zu erhalten.</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p>Wenn die Arbeit mit dem Handle abgeschlossen ist, muss es mit der <a href="_WinAPI_CloseWindowStation.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CloseWindowStation()</a> Funktion freigegeben werden.<br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="_WinAPI_CloseWindowStation.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CloseWindowStation</a></p>

<h2>Siehe auch</h2>
<p>Suche nach <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(CreateWindowStation);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">CreateWindowStation</a> in der MSDN Bibliothek.
</p>

</body>
</html>
