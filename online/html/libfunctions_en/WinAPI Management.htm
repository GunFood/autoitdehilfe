<!DOCTYPE html>
<html>
<head>
  <title>User Defined Functions</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1>WinAPI user defined functions Reference</h1>
<p>Below is a complete list of the user defined functions available in AutoIt.
Click on a user defined function name for a detailed description.</p>
<p>When using them you need to add a <strong>#include &lt;WinAPI.au3&gt;</strong>.
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">User Defined Function</th>
  <th style="width:75%">Description</th>
</tr>
<tr>
<td><a href="_WinAPI_AttachConsole.htm">_WinAPI_AttachConsole</a></td>
<td>Attaches the calling process to the console of the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_AttachThreadInput.htm">_WinAPI_AttachThreadInput</a></td>
<td>Attaches the input processing mechanism of one thread to that of another thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_Beep.htm">_WinAPI_Beep</a></td>
<td>Generates simple tones on the speaker<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_BitBlt.htm">_WinAPI_BitBlt</a></td>
<td>Performs a bit-block transfer of color data<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CallNextHookEx.htm">_WinAPI_CallNextHookEx</a></td>
<td>Passes the hook information to the next hook procedure in the current hook chain<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CallWindowProc.htm">_WinAPI_CallWindowProc</a></td>
<td>Passes the hook information to the next hook procedure in the current hook chain<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ClientToScreen.htm">_WinAPI_ClientToScreen</a></td>
<td>Converts the client coordinates of a specified point to screen coordinates<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CloseHandle.htm">_WinAPI_CloseHandle</a></td>
<td>Closes an open object handle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CombineRgn.htm">_WinAPI_CombineRgn</a></td>
<td>Combines two regions and stores the result in a third region<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CommDlgExtendedError.htm">_WinAPI_CommDlgExtendedError</a></td>
<td>Returns a common dialog box error string. This string indicates the most recent error to occur during the execution of one of the common dialog box functions<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CopyIcon.htm">_WinAPI_CopyIcon</a></td>
<td>Copies the specified icon from another module<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateBitmap.htm">_WinAPI_CreateBitmap</a></td>
<td>Creates a bitmap with the specified width, height, and color format<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateCompatibleBitmap.htm">_WinAPI_CreateCompatibleBitmap</a></td>
<td>Creates a bitmap compatible with the specified device context<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateCompatibleDC.htm">_WinAPI_CreateCompatibleDC</a></td>
<td>Creates a memory device context compatible with the specified device<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateEvent.htm">_WinAPI_CreateEvent</a></td>
<td>Creates or opens a named or unnamed event object<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateFile.htm">_WinAPI_CreateFile</a></td>
<td>Creates or opens a file or other device<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateFont.htm">_WinAPI_CreateFont</a></td>
<td>Creates a logical font with the specified characteristics<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateFontIndirect.htm">_WinAPI_CreateFontIndirect</a></td>
<td>Creates a logical font that has specific characteristics<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreatePen.htm">_WinAPI_CreatePen</a></td>
<td>Creates a logical pen that has the specified style, width, and color<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateProcess.htm">_WinAPI_CreateProcess</a></td>
<td>Creates a new process and its primary thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateRectRgn.htm">_WinAPI_CreateRectRgn</a></td>
<td>Creates a rectangular region<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateRoundRectRgn.htm">_WinAPI_CreateRoundRectRgn</a></td>
<td>Creates a rectangular region with rounded corners<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateSolidBitmap.htm">_WinAPI_CreateSolidBitmap</a></td>
<td>Creates a solid color bitmap<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateSolidBrush.htm">_WinAPI_CreateSolidBrush</a></td>
<td>Creates a logical brush that has the specified solid color<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateWindowEx.htm">_WinAPI_CreateWindowEx</a></td>
<td>Creates an overlapped, pop-up, or child window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DefWindowProc.htm">_WinAPI_DefWindowProc</a></td>
<td>Call the default window procedure to provide default processing<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DeleteDC.htm">_WinAPI_DeleteDC</a></td>
<td>Deletes the specified device context<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DeleteObject.htm">_WinAPI_DeleteObject</a></td>
<td>Deletes a logical pen, brush, font, bitmap, region, or palette<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DestroyIcon.htm">_WinAPI_DestroyIcon</a></td>
<td>Destroys an icon and frees any memory the icon occupied<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DestroyWindow.htm">_WinAPI_DestroyWindow</a></td>
<td>Destroys the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DrawEdge.htm">_WinAPI_DrawEdge</a></td>
<td>Draws one or more edges of rectangle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DrawFrameControl.htm">_WinAPI_DrawFrameControl</a></td>
<td>Draws a frame control of the specified type and style<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DrawIcon.htm">_WinAPI_DrawIcon</a></td>
<td>Draws an icon or cursor into the specified device context<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DrawIconEx.htm">_WinAPI_DrawIconEx</a></td>
<td>Draws an icon or cursor into the specified device context<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DrawLine.htm">_WinAPI_DrawLine</a></td>
<td>Draws a line<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DrawText.htm">_WinAPI_DrawText</a></td>
<td>Draws formatted text in the specified rectangle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DuplicateHandle.htm">_WinAPI_DuplicateHandle</a></td>
<td>Duplicates an object handle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnableWindow.htm">_WinAPI_EnableWindow</a></td>
<td>Enables or disables mouse and keyboard input to the specified window or control<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumDisplayDevices.htm">_WinAPI_EnumDisplayDevices</a></td>
<td>Obtains information about the display devices in a system<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumWindows.htm">_WinAPI_EnumWindows</a></td>
<td>Enumerates all windows<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumWindowsPopup.htm">_WinAPI_EnumWindowsPopup</a></td>
<td>Enumerates popup windows<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumWindowsTop.htm">_WinAPI_EnumWindowsTop</a></td>
<td>Enumerates all top level windows<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ExpandEnvironmentStrings.htm">_WinAPI_ExpandEnvironmentStrings</a></td>
<td>Expands environment variable strings and replaces them with their defined values<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ExtractIconEx.htm">_WinAPI_ExtractIconEx</a></td>
<td>Creates an array of handles to large or small icons extracted from a file<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FatalAppExit.htm">_WinAPI_FatalAppExit</a></td>
<td>Displays a message box and terminates the application<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FillRect.htm">_WinAPI_FillRect</a></td>
<td>Fills a rectangle by using the specified brush<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FindExecutable.htm">_WinAPI_FindExecutable</a></td>
<td>Retrieves the name of the executable file associated with the specified file name<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FindWindow.htm">_WinAPI_FindWindow</a></td>
<td>Retrieves the handle to the top-level window whose class name and window name match<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FlashWindow.htm">_WinAPI_FlashWindow</a></td>
<td>Flashes the specified window one time<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FlashWindowEx.htm">_WinAPI_FlashWindowEx</a></td>
<td>Flashes the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FloatToInt.htm">_WinAPI_FloatToInt</a></td>
<td>Returns a 4 byte float as an integer value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FlushFileBuffers.htm">_WinAPI_FlushFileBuffers</a></td>
<td>Flushes the buffers of a specified file and causes all buffered data to be written<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FormatMessage.htm">_WinAPI_FormatMessage</a></td>
<td>Formats a message string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FrameRect.htm">_WinAPI_FrameRect</a></td>
<td>Draws a border around the specified rectangle by using the specified brush<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FreeLibrary.htm">_WinAPI_FreeLibrary</a></td>
<td>Decrements the reference count of the loaded dynamic-link library (DLL) module<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetAncestor.htm">_WinAPI_GetAncestor</a></td>
<td>Retrieves the handle to the ancestor of the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetAsyncKeyState.htm">_WinAPI_GetAsyncKeyState</a></td>
<td>Determines whether a key is up or down at the time the function is called<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetBkMode.htm">_WinAPI_GetBkMode</a></td>
<td>Returns the current background mix mode for a specified device context<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetClassName.htm">_WinAPI_GetClassName</a></td>
<td>Retrieves the name of the class to which the specified window belongs<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetClientHeight.htm">_WinAPI_GetClientHeight</a></td>
<td>Retrieves the height of a window's client area<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetClientRect.htm">_WinAPI_GetClientRect</a></td>
<td>Retrieves the coordinates of a window's client area<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetClientWidth.htm">_WinAPI_GetClientWidth</a></td>
<td>Retrieves the width of a window's client area<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetCurrentProcess.htm">_WinAPI_GetCurrentProcess</a></td>
<td>Returns the process handle of the calling process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetCurrentProcessID.htm">_WinAPI_GetCurrentProcessID</a></td>
<td>Returns the process identifier of the calling process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetCurrentThread.htm">_WinAPI_GetCurrentThread</a></td>
<td>Retrieves a pseudo handle for the calling thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetCurrentThreadId.htm">_WinAPI_GetCurrentThreadId</a></td>
<td>Returns the thread identifier of the calling thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetCursorInfo.htm">_WinAPI_GetCursorInfo</a></td>
<td>Retrieves information about the global cursor<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetDC.htm">_WinAPI_GetDC</a></td>
<td>Retrieves a handle of a display device context for the client area a window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetDesktopWindow.htm">_WinAPI_GetDesktopWindow</a></td>
<td>Returns the handle of the Windows desktop window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetDeviceCaps.htm">_WinAPI_GetDeviceCaps</a></td>
<td>Retrieves device specific information about a specified device<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetDIBits.htm">_WinAPI_GetDIBits</a></td>
<td>Retrieves the bits of the specified bitmap and copies them into a buffer as a DIB<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetDlgCtrlID.htm">_WinAPI_GetDlgCtrlID</a></td>
<td>Returns the identifier of the specified control<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetDlgItem.htm">_WinAPI_GetDlgItem</a></td>
<td>Retrieves the handle of a control in the specified dialog box<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetFileSizeEx.htm">_WinAPI_GetFileSizeEx</a></td>
<td>Retrieves the size of the specified file<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetFocus.htm">_WinAPI_GetFocus</a></td>
<td>Retrieves the handle of the window that has the keyboard focus<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetForegroundWindow.htm">_WinAPI_GetForegroundWindow</a></td>
<td>Returns the handle of the foreground window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetGuiResources.htm">_WinAPI_GetGuiResources</a></td>
<td>Retrieves the count of handles to graphical user interface (GUI) objects in use by the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetIconInfo.htm">_WinAPI_GetIconInfo</a></td>
<td>Retrieves information about the specified icon or cursor<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetLastError.htm">_WinAPI_GetLastError</a></td>
<td>Returns the calling thread's lasterror code value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetLastErrorMessage.htm">_WinAPI_GetLastErrorMessage</a></td>
<td>Returns the calling threads last error message<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetLayeredWindowAttributes.htm">_WinAPI_GetLayeredWindowAttributes</a></td>
<td>Gets Layered Window Attributes<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetModuleHandle.htm">_WinAPI_GetModuleHandle</a></td>
<td>Returns a module handle for the specified module<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetMousePos.htm">_WinAPI_GetMousePos</a></td>
<td>Returns the current mouse position<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetMousePosX.htm">_WinAPI_GetMousePosX</a></td>
<td>Returns the current mouse X position<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetMousePosY.htm">_WinAPI_GetMousePosY</a></td>
<td>Returns the current mouse Y position<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetObject.htm">_WinAPI_GetObject</a></td>
<td>Retrieves information for the specified graphics object<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetOpenFileName.htm">_WinAPI_GetOpenFileName</a></td>
<td>Creates an Open dialog box that lets the user specify the drive, directory, and the name of a file or set of files to open<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetOverlappedResult.htm">_WinAPI_GetOverlappedResult</a></td>
<td>Retrieves the results of an overlapped operation<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetParent.htm">_WinAPI_GetParent</a></td>
<td>Retrieves the handle of the specified child window's parent window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcAddress.htm">_WinAPI_GetProcAddress</a></td>
<td>Retrieves the address of an exported function or variable from the specified module<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessAffinityMask.htm">_WinAPI_GetProcessAffinityMask</a></td>
<td>Obtains the affinity masks for the process and the system<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetSaveFileName.htm">_WinAPI_GetSaveFileName</a></td>
<td>Creates a Save dialog box that lets the user specify the drive, directory, and name of a file to save<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetStdHandle.htm">_WinAPI_GetStdHandle</a></td>
<td>Retrieves a handle for the standard input, standard output, or standard error device<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetStockObject.htm">_WinAPI_GetStockObject</a></td>
<td>Retrieves a handle to one of the predefined stock pens, brushes, fonts, or palettes<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetSysColor.htm">_WinAPI_GetSysColor</a></td>
<td>Retrieves the current color of the specified display element<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetSysColorBrush.htm">_WinAPI_GetSysColorBrush</a></td>
<td>Retrieves a handle identifying a logical brush that corresponds to the specified color index<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetSystemMetrics.htm">_WinAPI_GetSystemMetrics</a></td>
<td>Retrieves the specified system metric or system configuration setting<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetTextExtentPoint32.htm">_WinAPI_GetTextExtentPoint32</a></td>
<td>Computes the width and height of the specified string of text<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetTextMetrics.htm">_WinAPI_GetTextMetrics</a></td>
<td>Retrieves basic information for the currently selected font<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindow.htm">_WinAPI_GetWindow</a></td>
<td>Retrieves the handle of a window that has a specified relationship to the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowDC.htm">_WinAPI_GetWindowDC</a></td>
<td>Retrieves the device context (DC) for the entire window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowHeight.htm">_WinAPI_GetWindowHeight</a></td>
<td>Returns the height of the window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowLong.htm">_WinAPI_GetWindowLong</a></td>
<td>Retrieves information about the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowPlacement.htm">_WinAPI_GetWindowPlacement</a></td>
<td>Retrieves the placement of the window for Min, Max, and normal positions<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowRect.htm">_WinAPI_GetWindowRect</a></td>
<td>Retrieves the dimensions of the bounding rectangle of the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowRgn.htm">_WinAPI_GetWindowRgn</a></td>
<td>Obtains a copy of the window region of a window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowText.htm">_WinAPI_GetWindowText</a></td>
<td>Retrieves the text of the specified window's title bar<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowThreadProcessId.htm">_WinAPI_GetWindowThreadProcessId</a></td>
<td>Retrieves the identifier of the thread that created the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetWindowWidth.htm">_WinAPI_GetWindowWidth</a></td>
<td>Returns the width of the window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetXYFromPoint.htm">_WinAPI_GetXYFromPoint</a></td>
<td>Returns the X/Y values from a $tagPOINT structure<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GlobalMemoryStatus.htm">_WinAPI_GlobalMemoryStatus</a></td>
<td>Retrieves information about current available memory<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GUIDFromString.htm">_WinAPI_GUIDFromString</a></td>
<td>Converts a string GUID to binary form<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GUIDFromStringEx.htm">_WinAPI_GUIDFromStringEx</a></td>
<td>Converts a string GUID to binary form<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_HiWord.htm">_WinAPI_HiWord</a></td>
<td>Returns the high word of a longword value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_InProcess.htm">_WinAPI_InProcess</a></td>
<td>Determines whether a window belongs to the current process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IntToFloat.htm">_WinAPI_IntToFloat</a></td>
<td>Returns a 4 byte integer as a float value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_InvalidateRect.htm">_WinAPI_InvalidateRect</a></td>
<td>Adds a rectangle to the specified window's update region<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsClassName.htm">_WinAPI_IsClassName</a></td>
<td>Wrapper to check ClassName of the control<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsWindow.htm">_WinAPI_IsWindow</a></td>
<td>Determines whether the specified window handle identifies an existing window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsWindowVisible.htm">_WinAPI_IsWindowVisible</a></td>
<td>Retrieves the visibility state of the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LineTo.htm">_WinAPI_LineTo</a></td>
<td>Draws a line from the current position up to, but not including, the specified point<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LoadBitmap.htm">_WinAPI_LoadBitmap</a></td>
<td>Loads the specified bitmap resource from a module's executable file<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LoadImage.htm">_WinAPI_LoadImage</a></td>
<td>Loads an icon, cursor, or bitmap<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LoadLibrary.htm">_WinAPI_LoadLibrary</a></td>
<td>Maps a specified executable module into the address space of the calling process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LoadLibraryEx.htm">_WinAPI_LoadLibraryEx</a></td>
<td>Maps a specified executable module into the address space of the calling process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LoadShell32Icon.htm">_WinAPI_LoadShell32Icon</a></td>
<td>Extracts an icon from the shell32.dll file<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LoadString.htm">_WinAPI_LoadString</a></td>
<td>loads a string resource from the executable file associated with a specified module<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LocalFree.htm">_WinAPI_LocalFree</a></td>
<td>Frees the specified local memory object and invalidates its handle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LoWord.htm">_WinAPI_LoWord</a></td>
<td>Returns the low word of a longword<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MAKELANGID.htm">_WinAPI_MAKELANGID</a></td>
<td>Construct language id from a primary language id and a sublanguage id<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MAKELCID.htm">_WinAPI_MAKELCID</a></td>
<td>Construct locale id from a language id and a sort id<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MakeLong.htm">_WinAPI_MakeLong</a></td>
<td>Returns a long int value from two int values<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MakeQWord.htm">_WinAPI_MakeQWord</a></td>
<td>Returns a QWORD value from two int values<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MessageBeep.htm">_WinAPI_MessageBeep</a></td>
<td>Plays a waveform sound<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_Mouse_Event.htm">_WinAPI_Mouse_Event</a></td>
<td>Synthesizes mouse motion and button clicks<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MoveTo.htm">_WinAPI_MoveTo</a></td>
<td>Updates the current position to the specified point<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MoveWindow.htm">_WinAPI_MoveWindow</a></td>
<td>Changes the position and dimensions of the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MsgBox.htm">_WinAPI_MsgBox</a></td>
<td>Displays a message box with wider margin than original<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MulDiv.htm">_WinAPI_MulDiv</a></td>
<td>Multiplies two 32-bit values and then divides the 64-bit result by a third 32-bit value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MultiByteToWideChar.htm">_WinAPI_MultiByteToWideChar</a></td>
<td>Maps a character string to a wide-character (Unicode) string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MultiByteToWideCharEx.htm">_WinAPI_MultiByteToWideCharEx</a></td>
<td>Maps a character string to a wide-character (Unicode) string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_OpenProcess.htm">_WinAPI_OpenProcess</a></td>
<td>Returns a handle of an existing process object<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_PathFindOnPath.htm">_WinAPI_PathFindOnPath</a></td>
<td>Searchs for a file in the default system paths<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_PointFromRect.htm">_WinAPI_PointFromRect</a></td>
<td>Returns the top/left coordinates of a $tagRECT as a $tagPOINT structure<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_PostMessage.htm">_WinAPI_PostMessage</a></td>
<td>Places a message in the message queue and then returns<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_PrimaryLangId.htm">_WinAPI_PrimaryLangId</a></td>
<td>Extract primary language id from a language id<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_PtInRect.htm">_WinAPI_PtInRect</a></td>
<td>Determines whether the specified point lies within the specified rectangle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ReadFile.htm">_WinAPI_ReadFile</a></td>
<td>Reads data from a file<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ReadProcessMemory.htm">_WinAPI_ReadProcessMemory</a></td>
<td>Reads memory in a specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_RectIsEmpty.htm">_WinAPI_RectIsEmpty</a></td>
<td>Determins whether a rectangle is empty<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_RedrawWindow.htm">_WinAPI_RedrawWindow</a></td>
<td>Updates the specified rectangle or region in a window's client area<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_RegisterWindowMessage.htm">_WinAPI_RegisterWindowMessage</a></td>
<td>Defines a new window message that is guaranteed to be unique throughout the system<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ReleaseCapture.htm">_WinAPI_ReleaseCapture</a></td>
<td>Releases the mouse capture from a window in the current thread and restores normal mouse input processing<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ReleaseDC.htm">_WinAPI_ReleaseDC</a></td>
<td>Releases a device context<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ScreenToClient.htm">_WinAPI_ScreenToClient</a></td>
<td>Converts screen coordinates of a specified point on the screen to client coordinates<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SelectObject.htm">_WinAPI_SelectObject</a></td>
<td>Selects an object into the specified device context<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetBkColor.htm">_WinAPI_SetBkColor</a></td>
<td>Sets the current background color to the specified color value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetBkMode.htm">_WinAPI_SetBkMode</a></td>
<td>Sets the background mix mode of the specified device context<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetCapture.htm">_WinAPI_SetCapture</a></td>
<td>Sets the mouse capture to the specified window belonging to the current thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetCursor.htm">_WinAPI_SetCursor</a></td>
<td>Establishes the cursor shape<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetDefaultPrinter.htm">_WinAPI_SetDefaultPrinter</a></td>
<td>Sets the default printer for the current user on the local computer<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetDIBits.htm">_WinAPI_SetDIBits</a></td>
<td>Sets the pixels in a compatible bitmap using the color data found in a DIB<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetEndOfFile.htm">_WinAPI_SetEndOfFile</a></td>
<td>Sets the physical file size for the specified file to the current position of the file pointer<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetEvent.htm">_WinAPI_SetEvent</a></td>
<td>Sets the specified event object to the signaled state<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetFilePointer.htm">_WinAPI_SetFilePointer</a></td>
<td>Moves the file pointer of the specified file<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetFocus.htm">_WinAPI_SetFocus</a></td>
<td>Sets the keyboard focus to the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetFont.htm">_WinAPI_SetFont</a></td>
<td>Sets a window font<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetHandleInformation.htm">_WinAPI_SetHandleInformation</a></td>
<td>Sets certain properties of an object handle<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetLastError.htm">_WinAPI_SetLastError</a></td>
<td>Sets the last-error code for the calling thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetLayeredWindowAttributes.htm">_WinAPI_SetLayeredWindowAttributes</a></td>
<td>Sets Layered Window Attributes<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetParent.htm">_WinAPI_SetParent</a></td>
<td>Changes the parent window of the specified child window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetProcessAffinityMask.htm">_WinAPI_SetProcessAffinityMask</a></td>
<td>Sets a processor affinity mask for the threads of a specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetSysColors.htm">_WinAPI_SetSysColors</a></td>
<td>Obtains information about the display devices in a system<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetTextColor.htm">_WinAPI_SetTextColor</a></td>
<td>Sets the current text color to the specified color value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowLong.htm">_WinAPI_SetWindowLong</a></td>
<td>Sets information about the specified window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowPlacement.htm">_WinAPI_SetWindowPlacement</a></td>
<td>Sets the placement of the window for Min, Max, and normal positions<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowPos.htm">_WinAPI_SetWindowPos</a></td>
<td>Changes the size, position, and Z order of a child, pop-up, or top-level window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowRgn.htm">_WinAPI_SetWindowRgn</a></td>
<td>Sets the window region of a window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowsHookEx.htm">_WinAPI_SetWindowsHookEx</a></td>
<td>Installs an application-defined hook procedure into a hook chain<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetWindowText.htm">_WinAPI_SetWindowText</a></td>
<td>Changes the text of the specified window's title bar<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ShowCursor.htm">_WinAPI_ShowCursor</a></td>
<td>Displays or hides the cursor<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ShowError.htm">_WinAPI_ShowError</a></td>
<td>Displays an error message box with an optional exit<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ShowMsg.htm">_WinAPI_ShowMsg</a></td>
<td>Displays an "Information" message box<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ShowWindow.htm">_WinAPI_ShowWindow</a></td>
<td>Sets the specified window's show state<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_StringFromGUID.htm">_WinAPI_StringFromGUID</a></td>
<td>Converts a binary GUID to string form<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_StringLenA.htm">_WinAPI_StringLenA</a></td>
<td>Calculates the size of ANSI string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_StringLenW.htm">_WinAPI_StringLenW</a></td>
<td>Calculates the size of wide string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SubLangId.htm">_WinAPI_SubLangId</a></td>
<td>Extract sublanguage id from a language id<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SystemParametersInfo.htm">_WinAPI_SystemParametersInfo</a></td>
<td>Retrieves or sets the value of one of the system-wide parameters<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_TwipsPerPixelX.htm">_WinAPI_TwipsPerPixelX</a></td>
<td>Returns the width of a pixel, in twips<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_TwipsPerPixelY.htm">_WinAPI_TwipsPerPixelY</a></td>
<td>Returns the height of a pixel, in twips<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_UnhookWindowsHookEx.htm">_WinAPI_UnhookWindowsHookEx</a></td>
<td>Removes a hook procedure installed in a hook chain by the _WinAPI_SetWindowsHookEx function<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_UpdateLayeredWindow.htm">_WinAPI_UpdateLayeredWindow</a></td>
<td>Updates the position, size, shape, content, and translucency of a layered window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_UpdateWindow.htm">_WinAPI_UpdateWindow</a></td>
<td>Updates the client area of a window by sending a WM_PAINT message to the window<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WaitForInputIdle.htm">_WinAPI_WaitForInputIdle</a></td>
<td>Waits until a process is waiting for user input with no input pending, or a time out<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WaitForMultipleObjects.htm">_WinAPI_WaitForMultipleObjects</a></td>
<td>Waits until one or all of the specified objects are in the signaled state<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WaitForSingleObject.htm">_WinAPI_WaitForSingleObject</a></td>
<td>Waits until the specified object is in the signaled state<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WideCharToMultiByte.htm">_WinAPI_WideCharToMultiByte</a></td>
<td>Converts a Unicode string to a multibyte string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WindowFromPoint.htm">_WinAPI_WindowFromPoint</a></td>
<td>Retrieves the handle of the window that contains the specified point<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WriteConsole.htm">_WinAPI_WriteConsole</a></td>
<td>Writes a character string to a console screen buffer<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WriteFile.htm">_WinAPI_WriteFile</a></td>
<td>Writes data to a file at the position specified by the file pointer<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WriteProcessMemory.htm">_WinAPI_WriteProcessMemory</a></td>
<td>Writes memory in a specified process<br /></td>
</tr>
</table>

</body>
