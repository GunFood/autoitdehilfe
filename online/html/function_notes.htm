<!DOCTYPE html>
<html>
<head>
  <title>Hinweise zu Funktionen</title>
  <meta charset="utf-8">
  <link href="css/default.css" rel="stylesheet">
</head>

<body>
<h1>Hinweise zu Funktionen</h1>


<p>Viele Funktionen haben optionale Parameter, die beim Funktionsaufruf nicht angegeben werden m&uuml;ssen.
Wenn man einen optionalen Parameter verwenden m&ouml;chte, muss jeder vorangehende Parameter angegeben sein.
Man kann also nur den vorletzten Parameter weglassen, wenn der letzte auch weggelassen wird usw.<br>
<br>
Betrachen wir z.B. die <i><a href="functions/Run.htm">Run</a>-Funktion:<br>
</i><b>Run</b> ( "filename" [, "workingdir" [, flag]] ).<br>
Wenn man den <i>flag</i>-Parameter angeben m&ouml;chte, dann <b>muss</b> auch <i>workingdir</i> angegeben werden.
<br>
<br>
Viele Win___ Funktionen haben einen optionalen Parameter Namens <i>text</i>. Dieser Parameter
soll helfen, zwischen verschiedenen Fenstern mit gleichem Fenstertitel zu differenzieren.<br>
<br>
<br>
Manche Funktionen geben den Erfolg oder Misserfolg ihrer Ausf&uuml;hrung als <b>R&uuml;ckgabewert</b> an,
andere setzen das <b>@error-Flag</b>. Manche tun auch beides...
<br>
@error = 0 ;bedeutet stets Erfolg<br>
Return = variiert, aber es ist typischerweise nicht-Null, wennn die
Ausf&uuml;hrung erfolgreich war, damit es einfach zu handhaben ist.<br>
<br>
    If someUserFunc() Then      ;...Funktion hatte Erfolg<br>
    If Not someUserFunc() Then  ;...Funktion hatte keinen Erfolg<br>
<br>
    $x = FileReadLine("C:\Datei.txt")<br>
    If @error = -1 Then ;Dateiende (eof) wurde erreicht<br>
<br>
<b>
Wenn eine Funktion das @error-Flag setzen kann, dann sollte man es
immer &uuml;berpr&uuml;fen, bevor man einen R&uuml;ckgabewert benutzt.
Wenn @error n&auml;mlich einen Fehler anzeigt, dann ist der
R&uuml;ckgabewert generell undefiniert...
</b>
</p>

<p>@error wird immer auf 0 gesetzt, wenn eine Funktion aufgerufen wird.</p>


<p>Wenn die Dokumentation einer Funktion besagt, dass es keinen R&uuml;ckgabewert gibt, dann gibt AutoIt
trotzdem immer einen Wert zur&uuml;ck, um Fehler zu vermeiden. Normalerweise ist dies "1",
allerdings sollte man sich darauf nicht unbedingt verlassen.</p>

<p>Wenn ein optionaler Parameter definiert werden muss, und dieser ist anderen optionalen Parametern vorangestellt,
 dann muss diesem ein Standardwert zugewiesen werden. Dazu verwendet man das Schl&uuml;sselwort
Default. Sollte das zu Problemen f&uuml;hren, hilft m&ouml;glicherweise die Angabe von "" bei Zeichenketten
und -1 bei Zahlen. Manche Funktionen wie StringInStr oder StringReplace ben&ouml;tigen 0. Zus&auml;tzlich k&ouml;nnen einzelne
Funktionen andere Regelungen haben, welche in der jeweilige Hilfe zu den optionalen Parametern einer Funktion erkl&auml;rt sind.</p>


<p> </p>
</body>
</html>
