<!DOCTYPE html>
<html>
<head>
<title>Funktion _MemGlobalAlloc</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<h1 style="float:left; margin:15px 0 0 0; padding:0 0 0 0;">_MemGlobalAlloc</h1><br />
<a href="../libfunctions_en/_MemGlobalAlloc.htm"><img src="../images/Flagge_en.gif" height="29" width="36" border=0 hspace=10 style="float:right"/></a><br />
<div style="display:block; text-align:right;">Beschreibung anzeigen in</div><br />
<p style="margin:2px 0 0 0;" class="funcdesc">Reserviert eine festgelegte Anzahl von Bytes aus dem Heap<br /></p>
<p class="codeheader">
#include &lt;Memory.au3&gt;<br />
_MemGlobalAlloc ( $iBytes [, $iFlags = 0] )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$iBytes</td>
<td style="width:85%">Anzahl der zu reservierenden Bytes. Wenn dieser Parameter 0 ist und $iFlags als	$GMEM_MOVEABLE festgelegt ist, gibt die Funktion ein Handle zu einem Speicher-Objekt zur&uuml;ck, welches als "verworfen" gekennzeichnet ist.</td>
</tr>
<tr>
<td>$iFlags</td>
<td><strong>[optional]</strong> Die Speicherzuweisungsattribute:<br />
&nbsp;&nbsp;&nbsp; $GMEM_FIXED - Stellt statischen Speicher bereit. Der R&uuml;ckgabewert ist ein Zeiger.<br />
&nbsp;&nbsp;&nbsp; $GMEM_MOVEABLE - Stellt dynamischen Speicher bereit. Speicherbl&ouml;cke werden nie im physikalischen Speicher verschoben, sehr wohl aber innerhalb des Standard-Heaps.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Der R&uuml;ckgabewert ist ein Handle zum Speicherobjekt.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Um das Handle in einen Zeiger zu konvertieren, muss man die <a href="_MemGlobalLock.htm">_MemGlobalLock()</a> Funktion nutzen.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Dieser Wert kann nicht mit $GMEM_FIXED kombiniert werden.<br />
&nbsp;&nbsp;&nbsp; $GMEM_ZEROINIT - Initialisiert Speicherinhalte auf Null<br />
&nbsp;&nbsp;&nbsp; $GHND - Kombiniert $GMEM_MOVEABLE mit $GMEM_ZEROINIT<br />
&nbsp;&nbsp;&nbsp; $GPTR - Kombiniert $GMEM_FIXED mit $GMEM_ZEROINIT</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Erfolg:</td>
<td style="width:90%">Handle zum neu zugewiesenen Speicher-Objekt</td>
</tr>
<tr>
<td class="valign-top">Fehler:</td>
<td>0.</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p>Das Windows Memory Management bietet keinen separaten lokalen und globalen Heap.<br />
Wenn diese Funktion erfolgreich ist, stellt sie zumindest die Menge des angeforderten Speichers bereit.<br />
Wenn der tats&auml;chliche Betrag h&ouml;her ist als der angeforderte, kann der Prozess den kompletten Betrag verwenden.<br />
Zur Bestimmung der tats&auml;chlichen Anzahl von zugeteilten Bytes, muss die <a href="_MemGlobalSize.htm">_MemGlobalSize()</a> Funktion genutzt werden.<br />
Wenn der Heap nicht ausreichend freien Speicher enth&auml;lt, um die Anfrage zu erf&uuml;llen, gibt diese Funktion NULL zur&uuml;ck.<br />
Speicher welcher mit dieser Funktion bereitgestellt wurde, ist an einer 8-Byte Grenze ausgerichtet.<br />
F&uuml;r das Ausf&uuml;hren von dynamisch generiertem Code, nutzen sie die <a href="_MemVirtualAlloc.htm">_MemVirtualAlloc()</a> Funktion um Speicher bereitzustellen, und die _Mem_VirtualProtect Funktion um $PAGE_EXECUTE Zugriff zu gew&auml;hren.<br />
Um den Speicher freizugeben, m&uuml;ssen sie die <a href="_MemGlobalFree.htm">_MemGlobalFree()</a> Funktion nutzen.<br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="_MemGlobalFree.htm">_MemGlobalFree</a>, <a href="_MemGlobalLock.htm">_MemGlobalLock</a>, <a href="_MemGlobalSize.htm">_MemGlobalSize</a>, <a href="_MemVirtualAlloc.htm">_MemVirtualAlloc</a></p>

<h2>Siehe auch</h2>
<p>Suche nach <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(GlobalAlloc);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">GlobalAlloc</a> in der MSDN Bibliothek.
</p>

</body>
</html>
