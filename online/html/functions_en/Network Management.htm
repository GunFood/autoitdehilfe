<!DOCTYPE html>
<html>
<head>
  <title>Functions</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<div class="top"><h1>Network functions Reference</h1><div>
<p>Below is a complete list of the functions available in AutoIt.
Click on a function name for a detailed description.</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Function</th>
  <th style="width:75%">Description</th>
</tr>
<tr>
<td><a href="..\..\html\functions\FtpSetProxy.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">FtpSetProxy</a></td>
<td>Sets the internet proxy to use for ftp access.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\HttpSetProxy.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">HttpSetProxy</a></td>
<td>Sets the internet proxy to use for http access.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\HttpSetUserAgent.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">HttpSetUserAgent</a></td>
<td>Sets the HTTP user-agent string which is sent with all Inet requests.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\InetClose.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">InetClose</a></td>
<td>Closes a handle returned from InetGet().<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\InetGet.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">InetGet</a></td>
<td>Downloads a file from the internet using the HTTP, HTTPS or FTP protocol.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\InetGetInfo.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">InetGetInfo</a></td>
<td>Returns detailed data for a handle returned from InetGet().<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\InetGetSize.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">InetGetSize</a></td>
<td>Returns the size (in bytes) of a file located on the internet.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\InetRead.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">InetRead</a></td>
<td>Downloads a file from the internet using the HTTP, HTTPS or FTP protocol.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\Ping.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">Ping</a></td>
<td>Pings a host and returns the roundtrip-time.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\TCPAccept.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">TCPAccept</a></td>
<td>Permits an incoming connection attempt on a socket.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\TCPCloseSocket.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">TCPCloseSocket</a></td>
<td>Closes a TCP socket.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\TCPConnect.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">TCPConnect</a></td>
<td>Create a socket connected to an existing server.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\TCPListen.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">TCPListen</a></td>
<td>Creates a socket listening for an incoming connection.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\TCPNameToIP.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">TCPNameToIP</a></td>
<td>Converts an Internet name to IP address.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\TCPRecv.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">TCPRecv</a></td>
<td>Receives data from a connected socket.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\TCPSend.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">TCPSend</a></td>
<td>Sends data on a connected socket.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\TCPShutdown.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">TCPShutdown, UDPShutdown</a></td>
<td>Stops TCP/UDP services.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\TCPStartup.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">TCPStartup, UDPStartup</a></td>
<td>Starts TCP or UDP services.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\UDPBind.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">UDPBind</a></td>
<td>Create a socket bound to an incoming connection.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\UDPCloseSocket.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">UDPCloseSocket</a></td>
<td>Close a UDP socket.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\UDPOpen.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">UDPOpen</a></td>
<td>Open a socket connected to an existing server .<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\UDPRecv.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">UDPRecv</a></td>
<td>Receives data from an opened socket.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\UDPSend.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">UDPSend</a></td>
<td>Sends data on an opened socket.<br /></td>
</tr>
</table>

</body>
