<!DOCTYPE html>
<html>
<head>
<title>Function _WinAPI_WaitForInputIdle</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<h1 style="float:left; margin:15px 0 0 0; padding:0 0 0 0;">_WinAPI_WaitForInputIdle</h1><br />
<a href="../libfunctions/_WinAPI_WaitForInputIdle.htm"><img src="../images/Flagge_de.gif" height="29" width="36" border=0 hspace=10 style="float:right"/></a><br />
<div style="display:block; text-align:right;">Show description in</div><br />
<p style="margin:2px 0 0 0;" class="funcdesc">Waits until a process is waiting for user input with no input pending, or a time out<br /></p>
<p class="codeheader">
#include &lt;WinAPIProc.au3&gt;<br />
_WinAPI_WaitForInputIdle ( $hProcess [, $iTimeout = -1] )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$hProcess</td>
<td style="width:85%">A handle to the process. If this process is a console application or does not have a message<br />
queue, this function returns immediately.</td>
</tr>
<tr>
<td>$iTimeOut</td>
<td><strong>[optional]</strong> The time out interval, in milliseconds. If set to -1, the function does not return until the<br />
process is idle.</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">True</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>False</td>
</tr>
</table>

<h2>Remarks</h2>
<p>This function causes a thread to suspend execution until the specified process has finished its initialization<br />
and is waiting for user input with no input pending. This can be useful for synchronizing a parent process and<br />
a newly created child process. When a parent process creates a child process, the CreateProcess function<br />
returns without waiting for the child process to finish its initialization. Before trying to communicate with<br />
the child process, the parent process can use this function to determine when the child's initialization has<br />
been completed. This function can be used at any time, not just during application startup.<br />
</p>

<h2>See Also</h2>
<p>Search <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(WaitForInputIdle);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">WaitForInputIdle</a> in MSDN  Library.
</p>

</body>
</html>
