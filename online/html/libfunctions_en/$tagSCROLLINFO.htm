<!DOCTYPE html>
<html>
<head>
<title>Keyword $tagSCROLLINFO</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1 class="small">Keyword Reference</h1>
<hr style="height:0px">
<div class="top"><h1>$tagSCROLLINFO</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../libfunctions/$tagSCROLLINFO.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<div ><input id="toggleButton" type="image" onclick="Themes.toggleTheme()" src="../images/dark.png" height ="36" width="36" alt="Toggle Theme"></div><br />
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Contains scroll bar parameters to be set by the $SBM_SETSCROLLINFO message, or retrieved by the $SBM_GETSCROLLINFO message<br /></p>
<p class="codeheader">
Global Const $tagSCROLLINFO = "uint cbSize;uint fMask;int  nMin;int  nMax;uint nPage;int  nPos;int  nTrackPos"<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">cbSize</td>
<td style="width:85%">Specifies the size, in bytes, of this structure. The caller must set this to DllStructGetSize($tagSCROLLINFO).</td>
</tr>
<tr>
<td>fMask</td>
<td>Specifies the scroll bar parameters to set or retrieve. This member can be a combination of the following values:<br />
&nbsp;&nbsp;&nbsp; $SIF_ALL - Combination of $SIF_PAGE, $SIF_POS, $SIF_RANGE, and $SIF_TRACKPOS.<br />
&nbsp;&nbsp;&nbsp; $SIF_DISABLENOSCROLL - This value is used only when setting a scroll bar's parameters.<br />
If the scroll bar's new parameters make the scroll bar unnecessary, disable the scroll bar instead of removing it.<br />
&nbsp;&nbsp;&nbsp; $SIF_PAGE - The nPage member contains the page size for a proportional scroll bar.<br />
&nbsp;&nbsp;&nbsp; $SIF_POS - The nPos member contains the scroll box position, which is not updated while the user drags the scroll box.<br />
&nbsp;&nbsp;&nbsp; $SIF_RANGE - The nMin and nMax members contain the minimum and maximum values for the scrolling range.<br />
&nbsp;&nbsp;&nbsp; $SIF_TRACKPOS - The nTrackPos member contains the current position of the scroll box while the user is dragging it.</td>
</tr>
<tr>
<td>nMin</td>
<td>Specifies the minimum scrolling position.</td>
</tr>
<tr>
<td>nMax</td>
<td>Specifies the maximum scrolling position.</td>
</tr>
<tr>
<td>nPage</td>
<td>Specifies the page size. A scroll bar uses this value to determine the appropriate size of the proportional scroll box.</td>
</tr>
<tr>
<td>nPos</td>
<td>Specifies the position of the scroll box.</td>
</tr>
<tr>
<td>nTrackPos</td>
<td>Specifies the immediate position of a scroll box that the user is dragging.<br />
An application can retrieve this value while processing the $SB_THUMBTRACK request code.<br />
An application cannot set the immediate scroll position, the SetScrollInfo function ignores this member.</td>
</tr>
</table>

<h2>Remarks</h2>
<p>$SIF_xxxxx and $SB_XXX for scrollbar require #include &lt;ScrollbarsConstants.au3&gt;<br />
</p>

</body>
</html>
