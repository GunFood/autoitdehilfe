<!DOCTYPE html>
<html>
<head>
<title>Funktion _WinAPI_WaitForInputIdle</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>_WinAPI_WaitForInputIdle</h1><div>
<div id="flagtext">Beschreibung anzeigen in</div>
<div id="flaglink"> <a href="../libfunctions_en/_WinAPI_WaitForInputIdle.htm"><img src="../images/Flagge_en.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Wartet, w&auml;hrend ein Prozess auf Benutzereingaben ohne bevorstehende Eingabe oder Zeitlimit wartet<br /></p>
<p class="codeheader">
#include &lt;WinAPIProc.au3&gt;<br />
_WinAPI_WaitForInputIdle ( $hProcess [, $iTimeout = -1] )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$hProcess</td>
<td style="width:85%">Ein Handle zu dem Prozess. Ist dieser Prozess eine Konsolenanwendung oder hat er keine Nachrichten-<br />
Warteschlange, kehrt diese Funktion unverz&uuml;glich zur&uuml;ck.</td>
</tr>
<tr>
<td>$iTimeOut</td>
<td><strong>[optional]</strong> Der Zeitlimit-Intervall, in Millisekunden. Falls auf -1 gesetzt, kehrt die Funktion nicht zur&uuml;ck w&auml;hrend<br />
der Prozess im Leerlauf ist.</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Erfolg:</td>
<td style="width:90%">True</td>
</tr>
<tr>
<td class="valign-top">Fehler:</td>
<td>False</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p>Diese Funktion veranlasst einen Thread die Ausf&uuml;hrung solange zu unterbrechen bis der angegebene Prozess seine<br />
Initialisierung beendet hat und auf eine Benutzereingabe ohne anstehende Eingabe wartet. Das kann n&uuml;tzlich sein<br />
um einen Parent-Prozess und einen neu erzeugten Child-Prozess zu synchronisieren. Wenn ein Parent-Prozess einen<br />
Chld-Prozess erzeugt, kehrt die CreateProcess Funktion zur&uuml;ck, ohne auf die Beendigung der Initialisierung des<br />
Child-Prozesses zu warten. Bevor der Parent-Prozess versucht mit dem Child-Prozess zu kommunizieren, kann er<br />
diese Funktion benutzen, um zu ermitteln, ob die Initialisierung vollst&auml;ndig abgeschlossen ist. Diese Funktion<br />
kann zu jeder Zeit benutzt werden, nicht nur w&auml;hrend dem Start der Anwendung.<br />
</p>

<h2>Siehe auch</h2>
<p>Suche nach <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(WaitForInputIdle);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">WaitForInputIdle</a> in der MSDN Bibliothek.
</p>

</body>
</html>
