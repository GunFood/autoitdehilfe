<!DOCTYPE html>
<html>
<head>
  <title>Dateinamen und Pfade</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>
<body>
  <h1>Dateinamen und Pfade</h1>
  <p>Immer wenn ein Funktionsparameter als "Dateiname" angegeben wird, impliziert er einen Dateinamen mit einem vollst&auml;ndigen Pfad. Obwohl AutoIt-Funktionen h&auml;ufig einen relativen Pfad akzeptieren, kann nicht garantiert werden, dass dies ordnungsgem&auml;&szlig; funktioniert, da f&uuml;r einige Dateifunktionen in der Windows-API ein vollst&auml;ndig qualifizierter Pfad erforderlich ist. Wenn kein Pfad angegeben ist und nur ein einfacher Name zum Definieren einer Datei verwendet wird, erstellt AutoIt diese oder sucht sie im aktuellen Arbeitsverzeichnis, dessen Pfad im Makro @WorkingDir gefunden wird.</p>
  <p>Das Arbeitsverzeichnis wird beim Start des Skripts auf @ScriptDir festgelegt. Dieser Pfad kann w&auml;hrend der Ausf&uuml;hrung des Skripts durch Aufrufen von FileChangeDir ge&auml;ndert werden. Beachten Sie jedoch, dass das aktuelle Arbeitsverzeichnis auch durch einige Funktionen automatisch ge&auml;ndert werden kann - z.B. FileOpen/SaveDialog bei erfolgreicher R&uuml;ckgabe oder Run, wenn der Parameter "Arbeitsverzeichnis" angegeben ist.</p>
<p>Die MSDN-Seite <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#fully_qualified_vs._relative_paths">Naming Files, Paths, and Namespaces</a> enth&auml;lt weitere Informationen zum Schreiben von Dateinamen und Pfaden.</p>
</body>
</html>
