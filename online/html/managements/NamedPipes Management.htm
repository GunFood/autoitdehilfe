<!DOCTYPE html>
<html>
<head>
  <title>Benutzerdefinierte Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1>NamedPipes Benutzerdefinierte Funktionsreferenz</h1>
<p>Es folgt eine Liste der benutzerdefinierten Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>Wenn diese Funktion verwendet wird, so muss <strong>#include &lt;NamedPipes.au3&gt;</strong> hinzugefügt werden.</p>
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Benutzerdefinierte Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_CallNamedPipe.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_CallNamedPipe</a></td>
<td>F&uuml;hrt ein Lese/Schreibt Operation auf eine Named Pipe durch<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_ConnectNamedPipe.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_ConnectNamedPipe</a></td>
<td>Aktiviert einen benannten Datenstromserver, der auf eine Client-Verbindung wartet<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_CreateNamedPipe.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_CreateNamedPipe</a></td>
<td>Erzeugt die Instanz einer Named Pipe (FIFO)<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_CreatePipe.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_CreatePipe</a></td>
<td>Erzeugt eine anonyme Pipe<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_DisconnectNamedPipe.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_DisconnectNamedPipe</a></td>
<td>Trennt die Serverseite einer benannten Pipe-Instanz vom Client-Prozess<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_GetNamedPipeHandleState.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_GetNamedPipeHandleState</a></td>
<td>Ruft Informationen &uuml;ber eine benannte Pipe ab<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_GetNamedPipeInfo.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_GetNamedPipeInfo</a></td>
<td>Ermittelt Informationen &uuml;ber die angef&uuml;hrte Benannte Pipe<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_PeekNamedPipe.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_PeekNamedPipe</a></td>
<td>Kopiert Daten aus einer Pipe in einen Puffer, ohne die Daten aus der Pipe zu entfernen<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_SetNamedPipeHandleState.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_SetNamedPipeHandleState</a></td>
<td>Legt den Lesemodus und den Wartemodus der angegebenen benannten Pipe fest<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_TransactNamedPipe.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_TransactNamedPipe</a></td>
<td>Liest und beschreibt eine benannte Pipe in einer Netzwerkoperation<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_NamedPipes_WaitNamedPipe.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_WaitNamedPipe</a></td>
<td>Wartet, bis eine Instanz einer benannten Pipe verf&uuml;gbar ist<br /></td>
</tr>
</table>

</body>
