<!DOCTYPE html>
<html>
<head>
<title>Function _WinAPI_DrawIconEx</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<div class="top"><h1>_WinAPI_DrawIconEx</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../libfunctions/_WinAPI_DrawIconEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<div ><input id="toggleButton" type="image" onclick="Themes.toggleTheme()" src="../images/dark.png" height ="36" width="36" alt="Toggle Theme"></div><br />
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Draws an icon or cursor into the specified device context<br /></p>
<p class="codeheader">
#include &lt;WinAPIGdiDC.au3&gt;<br />
_WinAPI_DrawIconEx ( $hDC, $iX, $iY, $hIcon [, $iWidth = 0 [, $iHeight = 0 [, $iStep = 0 [, $hBrush = 0 [, $iFlags = 3]]]]] )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$hDC</td>
<td style="width:85%">Handle to the device context into which the icon or cursor is drawn</td>
</tr>
<tr>
<td>$iX</td>
<td>X coordinate of the upper-left corner of the icon</td>
</tr>
<tr>
<td>$iY</td>
<td>Y coordinate of the upper-left corner of the icon</td>
</tr>
<tr>
<td>$hIcon</td>
<td>Handle to the icon to be drawn</td>
</tr>
<tr>
<td>$iWidth</td>
<td><strong>[optional]</strong> Specifies the logical width of the icon or cursor.<br />
If this parameter is zero and the $iFlags parameter is "default size", the function uses the $SM_CXICON or $SM_CXCURSOR system metric value to set the width.<br />
If this is zero and "default size" is not used, the function uses the actual resource width.</td>
</tr>
<tr>
<td>$iHeight</td>
<td><strong>[optional]</strong> Specifies the logical height of the icon or cursor.<br />
If this parameter is zero and the $iFlags parameter is "default size", the function uses the $SM_CYICON or $SM_CYCURSOR system metric value to set the width.<br />
If this is zero and "default size" is not used, the function uses the actual resource height.</td>
</tr>
<tr>
<td>$iStep</td>
<td><strong>[optional]</strong> Specifies the index of the frame to draw if $hIcon identifies an animated cursor.<br />
This parameter is ignored if $hIcon does not identify an animated cursor.</td>
</tr>
<tr>
<td>$hBrush</td>
<td><strong>[optional]</strong> Handle to a brush that the system uses for flicker-free drawing.<br />
If $hBrush is a valid brush handle, the system creates an offscreen bitmap using the specified brush for the background color, draws the icon or cursor into the bitmap, and then copies the bitmap into the device context identified by $hDC.<br />
If $hBrush is 0, the system draws the icon or cursor directly into the device context.</td>
</tr>
<tr>
<td>$iFlags</td>
<td><strong>[optional]</strong> Specifies the drawing flags. This parameter can be one of the following values:<br />
1 - Draws the icon or cursor using the mask<br />
2 - Draws the icon or cursor using the image<br />
3 - Draws the icon or cursor using the mask and image<br />
4 - Draws the icon or cursor using the system default image rather than the user-specified image<br />
5 - Draws the icon or cursor using the width and height specified by the system metric values for cursors or icons, if the width and height parameters are set to zero.<br />
If this flag is not specified and width and height are set to zero, the function uses the actual resource size.<br />
6 - Draws the icon as an unmirrored icon</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">True</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>False, call <a href="_WinAPI_GetLastError.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetLastError()</a> to get extended error information</td>
</tr>
</table>

<h2>Related</h2>
<p><a href="_WinAPI_DrawIcon.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DrawIcon</a></p>

<h2>See Also</h2>
<p>Search <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(DrawIconEx);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">DrawIconEx</a> in MSDN  Library.
</p>

</body>
</html>
