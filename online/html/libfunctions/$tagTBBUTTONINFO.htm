<!DOCTYPE html>
<html>
<head>
<title>Schl&uuml;sselwort $tagTBBUTTONINFO</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1 class="small">Schl&uuml;sselwortreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>$tagTBBUTTONINFO</h1><div>
<div id="flagtext">Beschreibung anzeigen in</div>
<div id="flaglink"> <a href="../libfunctions_en/$tagTBBUTTONINFO.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><img src="../images/Flagge_en.png" height="29" width="36" border=0 hspace=10/></a></div>
<div ><input id="toggleButton" type="image" onclick="Themes.toggleTheme()" src="../images/dark.png" height ="36" width="36" alt="Toggle Theme"></div><br />
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Enth&auml;lt oder ermittelt Informationen eines bestimmten Buttons in einer Toolbar<br /></p>
<p class="codeheader">
Global Const $tagTBBUTTONINFO = "int Size;int Mask;int Command;int Image;byte State;byte Style;short CX;int Param;ptr Text;int TextMax"<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">Size</td>
<td style="width:85%">Gr&ouml;&szlig;e der Struktur, in Bytes</td>
</tr>
<tr>
<td>Mask</td>
<td>Flags die angeben welche der anderen Strukturmitglieder g&uuml;ltige Daten enthalten:<br />
&nbsp;&nbsp;&nbsp; $TBIF_BYINDEX - Das <strong>Param</strong>, gesendet mit einer $TB_GETBUTTONINFO oder $TB_SETBUTTONINFO Nachricht, ist ein Index<br />
&nbsp;&nbsp;&nbsp; $TBIF_COMMAND - Das <strong>Command</strong> Mitglied enth&auml;lt g&uuml;ltige Informationen oder sollen abgerufen werden<br />
&nbsp;&nbsp;&nbsp; $TBIF_IMAGE - Das <strong>Image</strong> Mitglied enth&auml;lt g&uuml;ltige Informationen oder sollen abgerufen werden<br />
&nbsp;&nbsp;&nbsp; $TBIF_IMAGELABEL - Weist darauf hin, dass <strong>ImageLabel</strong> benutzt werden soll<br />
&nbsp;&nbsp;&nbsp; $TBIF_LPARAM - Das <strong>Param</strong> Mitglied enth&auml;lt g&uuml;ltige Informationen oder sollen abgerufen werden<br />
&nbsp;&nbsp;&nbsp; $TBIF_SIZE - Das <strong>CX</strong> Mitglied enth&auml;lt g&uuml;ltige Informationen oder sollen abgerufen werden<br />
&nbsp;&nbsp;&nbsp; $TBIF_STATE - Das <strong>State</strong> Mitglied enth&auml;lt g&uuml;ltige Informationen oder sollen abgerufen werden<br />
&nbsp;&nbsp;&nbsp; $TBIF_STYLE - Das <strong>Style</strong> Mitglied enth&auml;lt g&uuml;ltige Informationen oder sollen abgerufen werden<br />
&nbsp;&nbsp;&nbsp; $TBIF_TEXT - Das <strong>Text</strong> Mitglied enth&auml;lt g&uuml;ltige Informationen oder sollen abgerufen werden</td>
</tr>
<tr>
<td>Command</td>
<td>Befehls-Identifizierer des Buttons</td>
</tr>
<tr>
<td>Image</td>
<td>0-basierter Index des Bildes des Buttons. Setzt man dieses Mitglied auf $I_IMAGECALLBACK, so wird die Toolbar eine $TBN_GETDISPINFO Benachrichtigung senden, um den Bilderindex zu ermitteln, wenn es gebraucht wird.<br />
Setzt man dieses Mitglied auf $I_IMAGENONE, wird darauf hingewiesen, dass der Button kein Bild beinhaltet.</td>
</tr>
<tr>
<td>State</td>
<td>Zustandsflags des Buttons</td>
</tr>
<tr>
<td>Style</td>
<td>Stilflags des Buttons</td>
</tr>
<tr>
<td>CX</td>
<td>Breite der Schalfl&auml;che, in Pixel</td>
</tr>
<tr>
<td>Param</td>
<td>Anwendungsdefinierter Wert, der mit dem Buttons verkn&uuml;pft ist</td>
</tr>
<tr>
<td>Text</td>
<td>Adresse eines Zeichen Puffers, der den Text des Buttons enth&auml;lt oder empf&auml;ngt</td>
</tr>
<tr>
<td>TextMax</td>
<td>Gr&ouml;&szlig;e des Puffers von <strong>Text</strong>. Falls die Informationen des Buttons gesetzt werden sollen, wird dieses Mitglied ignoriert</td>
</tr>
</table>

</body>
</html>
