<!DOCTYPE html>
<html>
<head>
<title>Function _WinAPI_RegSetValue</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<div class="top"><h1>_WinAPI_RegSetValue</h1><div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Sets the data and type of a specified value under a registry key<br /></p>
<p class="codeheader">
#include &lt;WinAPIReg.au3&gt;<br />
_WinAPI_RegSetValue ( $hKey, $sValueName, $iType, $tValueData, $iBytes )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$hKey</td>
<td style="width:85%">Handle to an open registry key. The key must have been opened with the $KEY_SET_VALUE access right.<br />
This handle is returned by the <a href="_WinAPI_RegCreateKey.htm">_WinAPI_RegCreateKey()</a> or <a href="_WinAPI_RegOpenKey.htm">_WinAPI_RegOpenKey()</a> function.<br />
It can also be one of the following predefined keys:<br />
&nbsp;&nbsp;&nbsp; $HKEY_CLASSES_ROOT<br />
&nbsp;&nbsp;&nbsp; $HKEY_CURRENT_CONFIG<br />
&nbsp;&nbsp;&nbsp; $HKEY_CURRENT_USER<br />
&nbsp;&nbsp;&nbsp; $HKEY_LOCAL_MACHINE<br />
&nbsp;&nbsp;&nbsp; $HKEY_PERFORMANCE_DATA<br />
&nbsp;&nbsp;&nbsp; $HKEY_USERS</td>
</tr>
<tr>
<td>$sValueName</td>
<td>The name of the value to be set.<br />
If a value with this name is not already present in the key, the function adds it to the key.<br />
If $sValueName is empty string, the function sets the type and data for the key's unnamed or default value.</td>
</tr>
<tr>
<td>$iType</td>
<td>The type of data. This parameter can be one of the following values :<br />
&nbsp;&nbsp;&nbsp; $REG_BINARY<br />
&nbsp;&nbsp;&nbsp; $REG_DWORD<br />
&nbsp;&nbsp;&nbsp; $REG_DWORD_BIG_ENDIAN<br />
&nbsp;&nbsp;&nbsp; $REG_DWORD_LITTLE_ENDIAN<br />
&nbsp;&nbsp;&nbsp; $REG_EXPAND_SZ<br />
&nbsp;&nbsp;&nbsp; $REG_LINK<br />
&nbsp;&nbsp;&nbsp; $REG_MULTI_SZ<br />
&nbsp;&nbsp;&nbsp; $REG_NONE<br />
&nbsp;&nbsp;&nbsp; $REG_QWORD<br />
&nbsp;&nbsp;&nbsp; $REG_QWORD_LITTLE_ENDIAN<br />
&nbsp;&nbsp;&nbsp; $REG_SZ</td>
</tr>
<tr>
<td>$tValueData</td>
<td>The structure (buffer) that contains the data to be stored.<br />
For string-based types, such as REG_SZ, the string must be null-terminated.<br />
With the REG_MULTI_SZ data type, the string must be terminated with two null characters.<br />
A backslash must be preceded by another backslash as an escape character.<br />
For example, specify "C:\\mydir\\myfile" to store the string "C:\mydir\myfile".</td>
</tr>
<tr>
<td>$iBytes</td>
<td>The size of the data, in bytes.<br />
If the data has the REG_SZ, REG_MULTI_SZ or REG_EXPAND_SZ type, this size includes any terminating null character or characters unless the data was stored without them.</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">1.</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>0 and sets the @error flag to non-zero, @extended flag may contain the system error code.</td>
</tr>
</table>

<h2>Related</h2>
<p><a href="_WinAPI_RegCreateKey.htm">_WinAPI_RegCreateKey</a>, <a href="_WinAPI_RegOpenKey.htm">_WinAPI_RegOpenKey</a></p>

<h2>See Also</h2>
<p>Search <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(RegSetValueEx);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">RegSetValueEx</a> in MSDN  Library.
</p>

</body>
</html>
