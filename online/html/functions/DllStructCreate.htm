<!DOCTYPE html>
<html>
<head>
<title>Funktion DllStructCreate</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<h1 style="float:left; margin:15px 0 0 0; padding:0 0 0 0;">DllStructCreate</h1><br />
<a href="../functions_en/DllStructCreate.htm"><img src="../images/Flagge_en.gif" height="29" width="36" border=0 hspace=10 style="float:right"/></a><br />
<div style="display:block; text-align:right;">Beschreibung anzeigen in</div><br />
<p style="margin:2px 0 0 0;" class="funcdesc">Erzeugt eine Struktur im C/C++-Stil die mit DllCall genutzt werden kann.<br /></p>
<p class="codeheader">
DllStructCreate ( Struct [, Pointer] )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">Struct</td>
<td style="width:85%">Ein String, der die zu erzeugende Struktur repr&auml;sentiert (Siehe Bemerkung).</td>
</tr>
<tr>
<td>Pointer</td>
<td><strong>[optional]</strong> Falls bereitgestellt, belegt die Struktur keinen neuen Speicher, sondern nutzt den Speicher, auf dessen Adresse der &uuml;bergebene Zeiger verweist.</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Erfolg:</td>
<td style="width:90%">Eine Variable f&uuml;r den Gebrauch in DllStruct-Aufrufen.</td>
</tr>
<tr>
<td class="valign-top">Fehler:</td>
<td>Setzt @error auf ungleich 0.</td>
</tr>
<tr>
<td class="valign-top">@Error:</td>
<td>1 = &Uuml;bergebene Variable an DllStructCreate war kein String.<br />
2 = Unbekannter Datentyp in der &uuml;bergebenen Variable.<br />
3 = Belegung des ben&ouml;tigten Speichers f&uuml;r die Struktur fehlgeschlagen, oder Pointer = 0.<br />
4 = Fehler bei der Belegung des Speichers f&uuml;r den &uuml;bergebenen String.</td>
</tr>
</table><br />
<table>
<tr>
<td style="width:15%"><strong>Typ</strong></td>
<td style="width:85%"><strong>Details</strong></td>
</tr>
<tr>
<td>BYTE</td>
<td>8Bit (1Byte) Integer vorzeichenlos</td>
</tr>
<tr>
<td>BOOLEAN</td>
<td>8Bit (1Byte) Integer vorzeichenlos</td>
</tr>
<tr>
<td>CHAR</td>
<td>8bit(1byte) ASCII Zeichen</td>
</tr>
<tr>
<td>WCHAR</td>
<td>16Bit (2Byte) UNICODE-Zeichen, (wide char)</td>
</tr>
<tr>
<td>SHORT</td>
<td></td>
</tr>
<tr>
<td>&nbsp;&nbsp;&nbsp;&nbsp;16Bit (2Byte) Integer mit Vorzeichen</td>
<td></td>
</tr>
<tr>
<td>USHORT</td>
<td>16Bit (2Byte) Integer vorzeichenlos</td>
</tr>
<tr>
<td>WORD</td>
<td>16Bit (2Byte) Integer vorzeichenlos</td>
</tr>
<tr>
<td>INT</td>
<td>32Bit (4Byte) Integer mit Vorzeichen</td>
</tr>
<tr>
<td>LONG</td>
<td>32Bit (4Byte) Integer mit Vorzeichen</td>
</tr>
<tr>
<td>BOOL</td>
<td>32Bit (4Byte) Integer mit Vorzeichen</td>
</tr>
<tr>
<td>UINT</td>
<td>32Bit (4Byte) Integer vorzeichenlos</td>
</tr>
<tr>
<td>ULONG</td>
<td>32Bit (4Byte) Integer vorzeichenlos</td>
</tr>
<tr>
<td>DWORD</td>
<td>32Bit (4Byte) Integer vorzeichenlos</td>
</tr>
<tr>
<td>INT64</td>
<td>64Bit (8Byte) Integer mit Vorzeichen</td>
</tr>
<tr>
<td>UINT64</td>
<td>64Bit (8Byte) Integer vorzeichenlos</td>
</tr>
<tr>
<td>PTR</td>
<td>32 oder 64bit Zeiger (Je nachdem, ob die x86 oder die x64 Version von AutoIt benutzt wird)</td>
</tr>
<tr>
<td>HWND</td>
<td>32 oder 64bit Zeiger (Je nachdem, ob die x86 oder die x64 Version von AutoIt benutzt wird)</td>
</tr>
<tr>
<td>HANDLE</td>
<td>32 oder 64bit Zeiger (Je nachdem, ob die x86 oder die x64 Version von AutoIt benutzt wird)</td>
</tr>
<tr>
<td>FLOAT</td>
<td>32Bit (4Byte) Flie&szlig;kommazahl</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>64Bit (8Byte) Flie&szlig;kommazahl</td>
</tr>
<tr>
<td>INT_PTR, LONG_PTR, LRESULT, LPARAM</td>
<td>32 oder 64Bit Integer mit Vorzeichen (in Abh&auml;ngigkeit zur benutzten AutoIt Version x86 oder x64)</td>
</tr>
<tr>
<td>UINT_PTR, ULONG_PTR, DWORD_PTR, WPARAM</td>
<td>32 oder 64Bit Integer vorzeichenlos (in Abh&auml;ngigkeit zur benutzten AutoIt Version x86 oder x64)</td>
</tr>
<tr>
<td>STRUCT</td>
<td>Die nachfolgenden Datentypen werden ausgerichtet nach den Regeln der C-Deklaration. Siehe unten.</td>
</tr>
<tr>
<td>ENDSTRUCT</td>
<td>Ende einer Sammlung von Datentypen. Einbettung ist m&ouml;glich, siehe unten.</td>
</tr>
<tr>
<td>ALIGN</td>
<td>n-Bytes Begrenzung an der Datentypen ausgerichtet werden.</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p>Jeder Datentyp muss mit einem Semikolon getrennt werden ';'.<br />
<br />
Array's werden durch hinzuf&uuml;gen von '[size]' nach dem Datentyp erzeugt: <a href="DllStructCreate.htm">DllStructCreate</a>("int;char[128]").<br />
<br />
Ein Elementname kann &auml;hnlich der C Deklaration hinzugef&uuml;gt werden (<a href="DllStructCreate.htm">DllStructCreate</a>("int n;char buffer[128]")). <br />
Dieser Elementname kann anstelle eines Elements in anderen DllStruct... Funktionen genutzt werden. Er muss alphanumerisch und/oder mit einem Unterstrich sein (a-z,1-9,_).<br />
<br />
Wird eine Zusammenstellung von Datentypen definiert wie in "struct{}" in C Deklaration, muss "STRUCT; ...; ENDSTRUCT;" angewendet werden.<br />
Dies ist notwendig, um die Ausrichtung innerhalb der gesamten Struktur zu ber&uuml;cksichtigen. Dies ist nicht erforderlich, wenn alle Datentypen in der definierten Struktur, als eine implizite Struktur Ausrichtung angelegt wurden.<br />
<br />
<a href="DllStructCreate.htm">DllStructCreate</a>("int;STRUCT;ptr;int;ENDSTRUCT;int")&nbsp;&nbsp;&nbsp; ; Struktur ist 32 byte unter einem Windows 64-Bit und 16 unter einem Windows 32-Bit<br />
<a href="DllStructCreate.htm">DllStructCreate</a>("int;ptr;int;int")&nbsp;&nbsp;&nbsp; ; Struktur ist 24 byte unter einem Windows 64-Bit und 16 unter einem Windows 32-Bit<br />
<br />
F&uuml;r eine andere Ausrichtung der Struktur kann man "align" als Prefix benutzen. Standardwert f&uuml;r n ist 8.<br />
Erlaubte Werte sind 1, 2, 4, 8 und 16. Die Ausrichtung eines Elements wird entweder an der Grenze eines Vielfachen von n oder an der eines Vielfachen der Gr&ouml;&szlig;e eines Elements sein, <strong>je nachdem welches kleiner ist</strong>. Dies ist wie bei der "#pragma pack option" mit dem Microsoft Visual C++ Compiler.<br />
<br />
<a href="DllStructCreate.htm">DllStructCreate</a>("short;int")&nbsp;&nbsp;&nbsp; ; Die Struktur ist 8 Bytes gro&szlig;, der "int" beginnt ab Offset 4<br />
<a href="DllStructCreate.htm">DllStructCreate</a>("align 2;short;int")&nbsp;&nbsp;&nbsp; ; Die Struktur ist 6 Bytes gro&szlig;, der "int" beginnt ab Offset 2 <br />
<br />
<a href="DllStructCreate.htm">DllStructCreate</a>("byte;double")&nbsp;&nbsp;&nbsp; ; Die Struktur ist 16 Bytes gro&szlig;, der "double" beginnt ab Offset 8<br />
<a href="DllStructCreate.htm">DllStructCreate</a>("align 4;byte;double")&nbsp;&nbsp;&nbsp; ; Die Struktur ist 12 Bytes gro&szlig;, der "double" beginnt ab Offset 4<br />
<br />
Wenn eine &Auml;nderung der Ausrichtung ben&ouml;tigt wird, kann "align" vor dem ersten Element, welches ge&auml;ndert werden werden soll, stehen. "align" oder "align 8" f&uuml;hrt zur Standardausrichtung.<br />
<br />
Um belegten Speicher wieder freizugeben, braucht man lediglich die zur&uuml;ckgegebene Variable auf 0 setzen.<br />
<br />
<strong>Die Gesamtheit der anzuwendenden Ausrichtungsregeln:</strong><br />
<br />
Die Ausrichtung eines Arrays ist die gleiche wie die Ausrichtung eines der Elemente des Arrays.<br />
<br />
Die Ausrichtung am Beginn einer Struktur ist die maximale Ausrichtung jedes einzelnen Mitglieds der Struktur.<br />
Jedes Element in der Struktur ist anzuordnen gem&auml;&szlig; der richtigen Ausrichtung, wie in der obigen Tabelle definiert, welche eine implizite Einbettung erfordert, in Abh&auml;ngigkeit zum vorhergehenden Element.<br />
<br />
Die Strukturgr&ouml;&szlig;e ist ein ganzzahliges Vielfaches ihrer Ausrichtung, was ein Auff&uuml;llen nach dem letzten Element erfordert.<br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="DllCall.htm">DllCall</a>, <a href="DllStructGetData.htm">DllStructGetData</a>, <a href="DllStructGetPtr.htm">DllStructGetPtr</a>, <a href="DllStructGetSize.htm">DllStructGetSize</a>, <a href="DllStructSetData.htm">DllStructSetData</a>, <a href="IsDllStruct.htm">IsDllStruct</a></p>

<h2 class="bottom">Beispiel</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Das Beispiel wurde in die Zwischenablage kopiert");
}
}
</script>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Dieses Skript &ouml;ffnen"><param name="Item1" value=",Examples\\HelpFile\\DllStructCreate.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">In die Zwischenablage kopieren<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>

<span class="S1">;=========================================================</span>
<span class="S1">;&nbsp; &nbsp;Erzeugen der Struktur</span>
<span class="S1">;&nbsp; &nbsp;struct {</span>
<span class="S1">;&nbsp; &nbsp;&nbsp; &nbsp; int&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var1;</span>
<span class="S1">;&nbsp; &nbsp;&nbsp; &nbsp; unsigned char&nbsp; &nbsp;var2;</span>
<span class="S1">;&nbsp; &nbsp;&nbsp; &nbsp; unsigned int&nbsp; &nbsp; var3;</span>
<span class="S1">;&nbsp; &nbsp;&nbsp; &nbsp; char&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var4[128];</span>
<span class="S1">;&nbsp; &nbsp;}</span>
<span class="S1">;=========================================================</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$str</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"int var1;ubyte var2;uint var3;char var4[128]"</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$a</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructCreate.htm"><span class="S4">DllStructCreate</span></a><span class="S8">(</span><span class="S9">$str</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@error"><span class="S6">@error</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Fehler in DllStructCreate "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@error"><span class="S6">@error</span></a><span class="S8">)</span><span class="S1">;</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Exit.htm"><span class="S5">Exit</span></a>
<a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">EndIf</span></a>

<span class="S1">;=========================================================</span>
<span class="S1">;&nbsp; &nbsp;Daten in Struktur setzen</span>
<span class="S1">;&nbsp; &nbsp;struct.var1&nbsp;= -1;</span>
<span class="S1">;&nbsp; &nbsp;struct.var2&nbsp;= 255;</span>
<span class="S1">;&nbsp; &nbsp;struct.var3&nbsp;= INT_MAX; -1 wird per typecast zu (unsigned int)</span>
<span class="S1">;&nbsp; &nbsp;strcpy(struct.var4,"Hallo");</span>
<span class="S1">;&nbsp; &nbsp;struct.var4[0]&nbsp; = 'h';</span>
<span class="S1">;=========================================================</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"var1"</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">-</span></a><span class="S3">1</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"var2"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">255</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"var3"</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">-</span></a><span class="S3">1</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"var4"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Hallo"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"var4"</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../functions/Asc.htm"><span class="S4">Asc</span></a><span class="S8">(</span><span class="S7">"h"</span><span class="S8">),</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span>

<span class="S1">;=========================================================</span>
<span class="S1">;&nbsp; &nbsp;Struktur-Info anzeigen</span>
<span class="S1">;=========================================================</span>
<a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"DllStruct"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Strukturgr&ouml;&szlig;e: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructGetSize.htm"><span class="S4">DllStructGetSize</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"Strukturzeiger: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructGetPtr.htm"><span class="S4">DllStructGetPtr</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S7">"Daten:"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/DllStructGetData.htm"><span class="S4">DllStructGetData</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/DllStructGetData.htm"><span class="S4">DllStructGetData</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/DllStructGetData.htm"><span class="S4">DllStructGetData</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S0"> </span><span class="S3">3</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/DllStructGetData.htm"><span class="S4">DllStructGetData</span></a><span class="S8">(</span><span class="S9">$a</span><span class="S8">,</span><span class="S0"> </span><span class="S3">4</span><span class="S8">))</span>

<span class="S1">;=========================================================</span>
<span class="S1">;&nbsp; &nbsp;Den Speicher freigeben den die Struktur belegt hat</span>
<span class="S1">;=========================================================</span>
<span class="S9">$a</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">0</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
