<!DOCTYPE html>
<html>
<head>
<title>Keyword $tagNMLVCUSTOMDRAW</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Keyword Reference</h1>
<hr style="height:0px">
<h1 style="float:left; margin:15px 0 0 0; padding:0 0 0 0;">$tagNMLVCUSTOMDRAW</h1><br />
<a href="../libfunctions/$tagNMLVCUSTOMDRAW.htm"><img src="../images/Flagge_de.gif" height="29" width="36" border=0 hspace=10 style="float:right"/></a><br />
<div style="display:block; text-align:right;">Show description in</div><br />
<p style="margin:2px 0 0 0;" class="funcdesc">Contains information specific to an NM_CUSTOMDRAW (list view) notification message sent by a list-view control<br /></p>
<p class="codeheader">
Global Const $tagNMLVCUSTOMDRAW = "struct;" & $tagNMHDR & ";dword dwDrawStage;handle hdc;" & $tagRECT & _<br />
	";dword_ptr dwItemSpec;uint uItemState;lparam lItemlParam;endstruct" & _<br />
	";dword clrText;dword clrTextBk;int iSubItem;dword dwItemType;dword clrFace;int iIconEffect;" & _<br />
	"int iIconPhase;int iPartId;int iStateId;struct;long TextLeft;long TextTop;long TextRight;long TextBottom;endstruct;uint uAlign"<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$tagNMHDR</td>
<td style="width:85%">Contains information about a notification message</td>
</tr>
<tr>
<td>dwDrawStage</td>
<td>The current drawing stage. This is one of the following values:<br />
Global Values:<br />
&nbsp;&nbsp;&nbsp; $CDDS_POSTERASE - After the erasing cycle is complete.<br />
&nbsp;&nbsp;&nbsp; $CDDS_POSTPAINT - After the painting cycle is complete.<br />
&nbsp;&nbsp;&nbsp; $CDDS_PREERASE - Before the erasing cycle begins.<br />
&nbsp;&nbsp;&nbsp; $CDDS_PREPAINT - Before the painting cycle begins.<br />
Item-specific Values:<br />
&nbsp;&nbsp;&nbsp; $CDDS_ITEM - Indicates that the dwItemSpec, uItemState, and lItemlParam members are valid.<br />
&nbsp;&nbsp;&nbsp; $CDDS_ITEMPOSTERASE - After an item has been erased.<br />
&nbsp;&nbsp;&nbsp; $CDDS_ITEMPOSTPAINT - After an item has been drawn.<br />
&nbsp;&nbsp;&nbsp; $CDDS_ITEMPREERASE - Before an item is erased.<br />
&nbsp;&nbsp;&nbsp; $CDDS_ITEMPREPAINT - Before an item is drawn.<br />
&nbsp;&nbsp;&nbsp; $CDDS_SUBITEM - Flag combined with $CDDS_ITEMPREPAINT or $CDDS_ITEMPOSTPAINT if a subitem is being drawn.<br />
This will only be set if $CDRF_NOTIFYITEMDRAW is returned from $CDDS_PREPAINT.</td>
</tr>
<tr>
<td>hdc</td>
<td>A handle to the control's device context.<br />
Use this handle to a device context (HDC) to perform any Microsoft Windows Graphics Device Interface (GDI) functions.</td>
</tr>
<tr>
<td>$tagRECT</td>
<td>Left,Top coordinate of the upper left corner of the rectangle of the area being drawn.<br />
This member is initialized only by the $CDDS_ITEMPREPAINT notification Right,Bottom coordinate of the lower right corner of the rectangle of the area being drawn.<br />
This member is initialized only by the $CDDS_ITEMPREPAINT notification.</td>
</tr>
<tr>
<td>dwItemSpec</td>
<td>The item number</td>
</tr>
<tr>
<td>uItemState</td>
<td>The current item state. This value is a combination of the following flags:<br />
&nbsp;&nbsp;&nbsp; $CDIS_CHECKED - The item is checked.<br />
&nbsp;&nbsp;&nbsp; $CDIS_DEFAULT - The item is in its default state.<br />
&nbsp;&nbsp;&nbsp; $CDIS_DISABLED - The item is disabled.<br />
&nbsp;&nbsp;&nbsp; $CDIS_FOCUS - The item is in focus.<br />
&nbsp;&nbsp;&nbsp; $CDIS_GRAYED - The item is grayed.<br />
&nbsp;&nbsp;&nbsp; $CDIS_HOT - The item is currently under the pointer ("hot").<br />
&nbsp;&nbsp;&nbsp; $CDIS_INDETERMINATE - The item is in an indeterminate state.<br />
&nbsp;&nbsp;&nbsp; $CDIS_MARKED - The item is marked. The meaning of this is determined by the implementation.<br />
&nbsp;&nbsp;&nbsp; $CDIS_SELECTED - The item is selected.<br />
&nbsp;&nbsp;&nbsp; $CDIS_SHOWKEYBOARDCUES - Version 6.0 Comctl32. The item is a keyboard cue.<br />
&nbsp;&nbsp;&nbsp; $CDIS_NEARHOT - The item is part of a control that is currently under the mouse pointer ("hot"), but the item is not "hot" itself.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; The meaning of this is determined by the implementation.<br />
&nbsp;&nbsp;&nbsp; $CDIS_OTHERSIDEHOT - The item is part of a splitbutton that is currently under the mouse pointer ("hot"), but the item is not "hot" itself.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; The meaning of this is determined by the implementation.<br />
&nbsp;&nbsp;&nbsp; $CDIS_DROPHILITED - The item is currently the drop target of a drag-and-drop operation.</td>
</tr>
<tr>
<td>lItemlParam</td>
<td>Application-defined item data.</td>
</tr>
<tr>
<td>clrText</td>
<td>COLORREF value representing the color that will be used to display text foreground in the list-view control.</td>
</tr>
<tr>
<td>clrTextBk</td>
<td>COLORREF value representing the color that will be used to display text background in the list-view control.</td>
</tr>
<tr>
<td>iSubItem</td>
<td>Index of the subitem that is being drawn. If the main item is being drawn, this member will be zero.</td>
</tr>
<tr>
<td>dwItemType</td>
<td>Version 6.0. DWORD that contains the type of the item to draw. This member can be one of the following values:<br />
&nbsp;&nbsp;&nbsp; $LVCDI_ITEM - An item is to be drawn.<br />
&nbsp;&nbsp;&nbsp; $LVCDI_GROUP - A group is to be drawn.</td>
</tr>
<tr>
<td>clrFace</td>
<td>Version 6.0. COLORREF value representing the color that will be used to display the face of an item.</td>
</tr>
<tr>
<td>iIconEffect</td>
<td>Version 6.0. Value of type int that specifies the effect that is applied to an icon, such as Glow, Shadow, or Pulse.</td>
</tr>
<tr>
<td>iIconPhase</td>
<td>Version 6.0. Value of type int that specifies the phase of an icon.</td>
</tr>
<tr>
<td>iPartId</td>
<td>Version 6.0. Value of type int that specifies the ID of the part of an item to draw.</td>
</tr>
<tr>
<td>iStateId</td>
<td>Version 6.0. Value of type int that specifies the ID of the state of an item to draw.</td>
</tr>
<tr>
<td>TextLeft</td>
<td>X coordinate of the upper left corner of the rectangle in which the text is to be drawn</td>
</tr>
<tr>
<td>TextTop</td>
<td>Y coordinate of the upper left corner of the rectangle in which the text is to be drawn</td>
</tr>
<tr>
<td>TextRight</td>
<td>X coordinate of the lower right corner of the rectangle in which the text is to be drawn</td>
</tr>
<tr>
<td>TextBottom</td>
<td>Y coordinate of the lower right corner of the rectangle in which the text is to be drawn</td>
</tr>
<tr>
<td>uAlign</td>
<td>Version 6.0. UINT that specifies how a group should be aligned. This member can be one of the following values:<br />
&nbsp;&nbsp;&nbsp; $LVGA_HEADER_CENTER - Center the group.<br />
&nbsp;&nbsp;&nbsp; $LVGA_HEADER_LEFT - Align the group on the left.<br />
&nbsp;&nbsp;&nbsp; $LVGA_HEADER_RIGHT - Align the group on the right.</td>
</tr>
</table>

<h2>Remarks</h2>
<p>$LVxxx_ constants require #include &lt;ListViewConstants.au3&gt;, $CDxx_ constants require #include <WindowsConstants.au3><br />
</p>

</body>
</html>
