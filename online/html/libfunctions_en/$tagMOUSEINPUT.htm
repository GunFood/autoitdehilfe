<!DOCTYPE html>
<html>
<head>
<title>Keyword $tagMOUSEINPUT</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Keyword Reference</h1>
<hr style="height:0px">
<div class="top"><h1>$tagMOUSEINPUT</h1><div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Contains information about a low-level mouse input event<br /></p>
<p class="codeheader">
Global Const $tagMOUSEINPUT = "dword type;struct;long dx;long dy;dword mouseData;sdword dwflags;dword time;ulong_ptr dwExtraInfo;endstruct"<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">type</td>
<td style="width:85%">$INPUT_MOUSE - the event is a mouse event.</td>
</tr>
<tr>
<td>dx</td>
<td>The absolute position of the mouse, or the amount of motion since the last mouse event was generated, depending on the value of the dwFlags member.<br />
Absolute data is specified as the x coordinate of the mouse; relative data is specified as the number of pixels moved.</td>
</tr>
<tr>
<td>dy</td>
<td>The absolute position of the mouse, or the amount of motion since the last mouse event was generated, depending on the value of the dwFlags member.<br />
Absolute data is specified as the y coordinate of the mouse; relative data is specified as the number of pixels moved.</td>
</tr>
<tr>
<td>mouseData</td>
<td>If dwFlags contains $MOUSEEVENTF_WHEEL, then mouseData specifies the amount of wheel movement.<br />
A positive value indicates that the wheel was rotated forward, away from the user;<br />
a negative value indicates that the wheel was rotated backward, toward the user.<br />
One wheel click is defined as WHEEL_DELTA, which is 120.<br />
<br />
If dwFlags does not contain $MOUSEEVENTF_WHEEL, $MOUSEEVENTF_XDOWN, or $MOUSEEVENTF_XUP, then mouseData should be zero.<br />
<br />
If dwFlags contains $MOUSEEVENTF_XDOWN or $MOUSEEVENTF_XUP, then mouseData specifies which X buttons were pressed or released.<br />
This value may be any combination of the following flags.<br />
<br />
XBUTTON1 (0x0001)	Set if the first X button is pressed or released.<br />
XBUTTON2 (0x0002)	Set if the second X button is pressed or released.</td>
</tr>
<tr>
<td>dwFlags</td>
<td>A set of bit flags that specify various aspects of mouse motion and button clicks.<br />
The bits in this member can be any reasonable combination of the following values.<br />
<br />
The bit flags that specify mouse button status are set to indicate changes in status, not ongoing conditions.<br />
For example, if the left mouse button is pressed and held down,<br />
$MOUSEEVENTF_LEFTDOWN is set when the left button is first pressed, but not for subsequent motions.<br />
Similarly $MOUSEEVENTF_LEFTUP is set only when the button is first released.<br />
<br />
You cannot specify both the $MOUSEEVENTF_WHEEL flag and either $MOUSEEVENTF_XDOWN or $MOUSEEVENTF_XUP flags simultaneously in the dwFlags parameter,<br />
because they both require use of the mouseData field.<br />
<br />
$MOUSEEVENTF_MOVE (0x0001)	Movement occurred.<br />
$MOUSEEVENTF_LEFTDOWN (0x0002)	The left button was pressed.<br />
$MOUSEEVENTF_LEFTUP (0x0004)	The left button was released.<br />
$MOUSEEVENTF_RIGHTDOWN (0x0008)	The right button was pressed.<br />
$MOUSEEVENTF_RIGHTUP0x0010)	The right button was released.<br />
$MOUSEEVENTF_MIDDLEDOWN (0x0020)	The middle button was pressed.<br />
$MOUSEEVENTF_MIDDLEUP (0x0040)	The middle button was released.<br />
$MOUSEEVENTF_XDOWN (0x0080)	An X button was pressed.<br />
$MOUSEEVENTF_XUP (0x0100)	An X button was released.<br />
$MOUSEEVENTF_WHEEL (0x0800)	The wheel was moved, if the mouse has a wheel. The amount of movement is specified in mouseData.<br />
$MOUSEEVENTF_HWHEEL (0x1000)	The wheel was moved horizontally, if the mouse has a wheel. The amount of movement is specified in mouseData.<br />
$MOUSEEVENTF_MOVE_NOCOALESCE (0x2000)	The WM_MOUSEMOVE messages will not be coalesced. The default behavior is to coalesce $WM_MOUSEMOVE messages.<br />
$MOUSEEVENTF_VIRTUALDESK (0x4000)	Maps coordinates to the entire desktop. Must be used with $MOUSEEVENTF_ABSOLUTE.<br />
$MOUSEEVENTF_ABSOLUTE (0x8000)	The dx and dy members contain normalized absolute coordinates.<br />
&nbsp;&nbsp;&nbsp; If the flag is not set, dx and dy contain relative data (the change in position since the last reported position).<br />
&nbsp;&nbsp;&nbsp; This flag can be set, or not set, regardless of what kind of mouse or other pointing device, if any, is connected to the system.<br />
&nbsp;&nbsp;&nbsp; For further information about relative mouse motion, see the following Remarks section.</td>
</tr>
<tr>
<td>time</td>
<td>The time stamp for the event, in milliseconds. If this parameter is 0, the system will provide its own time stamp.</td>
</tr>
<tr>
<td>dwExtraInfo</td>
<td>An additional value associated with the mouse event. An application calls GetMessageExtraInfo to obtain this extra information.</td>
</tr>
</table>

<h2>Remarks</h2>
<p>If the mouse has moved, indicated by $MOUSEEVENTF_MOVE, dx and dy specify information about that movement.<br />
The information is specified as absolute or relative integer values.<br />
<br />
If $MOUSEEVENTF_ABSOLUTE value is specified, dx and dy contain normalized absolute coordinates between 0 and 65,535.<br />
The event procedure maps these coordinates onto the display surface.<br />
Coordinate (0,0) maps onto the upper-left corner of the display surface; coordinate (65535,65535) maps onto the lower-right corner. In a multimonitor system, the coordinates map to the primary monitor.<br />
<br />
If $MOUSEEVENTF_VIRTUALDESK is specified, the coordinates map to the entire virtual desktop.<br />
<br />
If the $MOUSEEVENTF_ABSOLUTE value is not specified, dxand dy specify movement relative to the previous mouse event (the last reported position).<br />
Positive values mean the mouse moved right (or down); negative values mean the mouse moved left (or up).<br />
<br />
Relative mouse motion is subject to the effects of the mouse speed and the two-mouse threshold values.<br />
A user sets these three values with the Pointer Speed slider of the Control Panel's Mouse Properties sheet.<br />
You can obtain and set these values using the SystemParametersInfo function.<br />
<br />
The system applies two tests to the specified relative mouse movement.<br />
If the specified distance along either the x or y axis is greater than the first mouse threshold value, and the mouse speed is not zero, the system doubles the distance.<br />
If the specified distance along either the x or y axis is greater than the second mouse threshold value, and the mouse speed is equal to two, the system doubles the distance that resulted from applying the first threshold test.<br />
It is thus possible for the system to multiply specified relative mouse movement along the x or y axis by up to four times.<br />
</p>

</body>
</html>
