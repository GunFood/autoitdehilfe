<!DOCTYPE html>
<html>
<head>
<title>Schl&uuml;sselwort $tagNMTVDISPINFO</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1 class="small">Schl&uuml;sselwortreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>$tagNMTVDISPINFO</h1><div>
<div id="flagtext">Beschreibung anzeigen in</div>
<div id="flaglink"> <a href="../libfunctions_en/$tagNMTVDISPINFO.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><img src="../images/Flagge_en.png" height="29" width="36" border=0 hspace=10/></a></div>
<div ><input id="toggleButton" type="image" onclick="Themes.toggleTheme()" src="../images/dark.png" height ="36" width="36" alt="Toggle Theme"></div><br />
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Enth&auml;lt und ermittelt Anzeigeinformationen f&uuml;r ein Treeview Element<br /></p>
<p class="codeheader">
Global Const $tagNMTVDISPINFO = $tagNMHDR & ";int Mask;int hItem;int State;int StateMask;" & _<br />
	"ptr Text;int TextMax;int Image;int SelectedImage;int Children;int Param"<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$tagNMHDR</td>
<td style="width:85%">Enth&auml;lt Informationen &uuml;ber den Benachrichtigungscode</td>
</tr>
<tr>
<td>Mask</td>
<td>Legt fest, welche Informationen gesetzt oder ermittelt werden. Kann einer oder mehrere der folgenden Werte sein:<br />
&nbsp;&nbsp;&nbsp; $TVIF_CHILDREN      - Das <strong>Children</strong> Mitglied ist g&uuml;ltig<br />
&nbsp;&nbsp;&nbsp; $TVIF_IMAGE         - Das <strong>Image</strong> Mitglied ist g&uuml;ltig<br />
&nbsp;&nbsp;&nbsp; $TVIF_SELECTEDIMAGE - Das <strong>SelectedImage</strong> Mitglied ist g&uuml;ltig<br />
&nbsp;&nbsp;&nbsp; $TVIF_TEXT          - Die <strong>Text</strong> und <strong>TextMax</strong> Mitglieder sind g&uuml;ltig</td>
</tr>
<tr>
<td>hItem</td>
<td>Element, auf welches sich die Struktur bezieht</td>
</tr>
<tr>
<td>State</td>
<td>Satz von Bitflags und Imagelisten-Indizes, die den Zustand des Elements andeuten. Wenn der Zustand eines Elements gesetzt wird, legt das <strong>StateMask</strong> Mitglied fest, welche Bits dieses Mitgliedes g&uuml;ltig sind. Wenn der Zustand eines Elements ermittelt wird, gibt dieses Mitglied den aktuellen Zustand der in dem <strong>StateMask</strong> Mitglied angegebenen Bits zur&uuml;ck.<br />
Die Bits 0 bis 7 dieses Mitgliedes enthalten die Zustandsflags des Elements.<br />
Bits 8 bis 11 legen den eins-basierten Index des eingeblendeten Bildes fest.</td>
</tr>
<tr>
<td>StateMask</td>
<td>Bits des <strong>State</strong> Mitglieds die g&uuml;ltig sind. Wenn der Zustand eines Elements ermittelt wird, werden hier die Bits gesetzt, die man aus dem <strong>State</strong> Mitglied zur&uuml;ckgegeben haben m&ouml;chte.<br />
Wenn der Zustand eines Elements gesetzt wird, werden hier die Bits gesetzt, die man in dem <strong>State</strong> Mitglied gesetzt haben m&ouml;chte.</td>
</tr>
<tr>
<td>Text</td>
<td>Zeiger auf einen null-terminierten String, die den Text des Elements enth&auml;lt.</td>
</tr>
<tr>
<td>TextMax</td>
<td>Gr&ouml;&szlig;e des Puffers auf den das <strong>Text</strong> Mitglied verweist, in Zeichen</td>
</tr>
<tr>
<td>Image</td>
<td>Index des Icons in der Imagelist das genutzt werden soll, wenn das Element im nicht-gew&auml;hlten Zustand ist</td>
</tr>
<tr>
<td>SelectedImage</td>
<td>Index des Icons in der Imagelist das genutzt werden soll, wenn das Element im gew&auml;hlten Zustand ist</td>
</tr>
<tr>
<td>Children</td>
<td>Flag das angibt, ob das Element mit ihm verkn&uuml;pfte Child-Elemente hat. Dieses Mitglied kann einer der folgenden Werte sein:<br />
&nbsp;&nbsp;&nbsp; 0 - Das Element hat keine Child-Elemente<br />
&nbsp;&nbsp;&nbsp; 1 - Das Element hat ein oder mehr Child-Elemente</td>
</tr>
<tr>
<td>Param</td>
<td>Ein Wert, der mit dem Element verkn&uuml;pft werden kann.</td>
</tr>
</table>

<h2>Verwandte Funktionen</h2>
<p><a href="$tagNMHDR.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">$tagNMHDR</a></p>

</body>
</html>
