<!DOCTYPE html>
<html>
<head>
<title>Function _NamedPipes_ConnectNamedPipe</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<div class="top"><h1>_NamedPipes_ConnectNamedPipe</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../libfunctions/_NamedPipes_ConnectNamedPipe.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<div ><input id="toggleButton" type="image" onclick="Themes.toggleTheme()" src="../images/dark.png" height ="36" width="36" alt="Toggle Theme"></div><br />
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Enables a named pipe server process to wait for a client process to connect<br /></p>
<p class="codeheader">
#include &lt;NamedPipes.au3&gt;<br />
_NamedPipes_ConnectNamedPipe ( $hNamedPipe [, $tOverlapped = 0] )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$hNamedPipe</td>
<td style="width:85%">Handle to the server end of a named pipe instance</td>
</tr>
<tr>
<td>$tOverlapped</td>
<td><strong>[optional]</strong> a $tagOVERLAPPED structure.<br />
&nbsp;&nbsp;&nbsp; If $hNamedPipe was opened with $PIPE_FLAG_OVERLAPPED, $pOverlapped must not be 0.<br />
&nbsp;&nbsp;&nbsp; If $hNamedPipe was created with $PIPE_FLAG_OVERLAPPED and $pOverlapped is not 0, the $tagOVERLAPPED structure should contain a handle to a manual reset event object.<br />
&nbsp;&nbsp;&nbsp; If $hNamedPipe was not opened with $PIPE_FLAG_OVERLAPPED, the function does not return until a client is connected or an error occurs.<br />
Successful synchronous operations result in the function returning a nonzero value if a client connects after the function is called.</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">True.</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>False.</td>
</tr>
</table>

<h2>Remarks</h2>
<p>If a client connects before the function is called, the function returns zero and _WinAPI_GetLastError() will return $ERROR_PIPE_CONNECTED (defined in APIErrorsConstants.au3).<br />
This can happen if a client connects in the interval between the call to _NamedPipes_CreateNamedPipe() and the call to _NamedPipes_ConnectNamedPipe().<br />
In this situation, there is a good connection between client and server even though the function returns zero.<br />
</p>

<h2>Related</h2>
<p><a href="$tagOVERLAPPED.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">$tagOVERLAPPED</a>, <a href="_NamedPipes_CreateNamedPipe.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_NamedPipes_CreateNamedPipe</a></p>

<h2>See Also</h2>
<p>Search <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(ConnectNamedPipe);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">ConnectNamedPipe</a> in MSDN  Library.
</p>

</body>
</html>
