<!DOCTYPE html>
<html>
<head>
  <title>Benutzerdefinierte Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1>Processes Benutzerdefinierte Funktionsreferenz</h1>
<p>Es folgt eine komplette Liste der benutzerdefinierten Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>Wenn diese Funktion verwendet wird, so muss <strong>#include &lt;WinAPIProc.au3&gt;</strong> hinzugefügt werden.</p>
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Benutzerdefinierte Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_AdjustTokenPrivileges.htm">_WinAPI_AdjustTokenPrivileges</a></td>
<td>Aktiviert oder deaktiviert bestimmte Privilegien im angegebenen Zugangstoken<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_AssignProcessToJobObject.htm">_WinAPI_AssignProcessToJobObject</a></td>
<td>Assigns a process to an existing job object<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_AttachConsole.htm">_WinAPI_AttachConsole</a></td>
<td>Heftet den aufgerufenen Prozess an der Console des festgelegten Prozesses an<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_AttachThreadInput.htm">_WinAPI_AttachThreadInput</a></td>
<td>Verkn&uuml;pft oder trennt den Eingabe-Prozessmechanismus von einem Thread mit dem eines anderen Threads<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CreateJobObject.htm">_WinAPI_CreateJobObject</a></td>
<td>Erzeugt oder &ouml;ffnet ein Jobobjekt.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CreateProcess.htm">_WinAPI_CreateProcess</a></td>
<td>Erzeugt einen neuen Prozess und seinen prim&auml;ren Thread<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CreateProcessWithToken.htm">_WinAPI_CreateProcessWithToken</a></td>
<td>Erzeugt einen neuen Prozess und dessen prim&auml;ren Thread in dem Sicherheitskontext des angegebenen Tokens.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DuplicateTokenEx.htm">_WinAPI_DuplicateTokenEx</a></td>
<td>Erstellt einen neuen Prim&auml;r- oder Immitierungszugangstoken welcher einen bereits existieren Token dubliziert<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EmptyWorkingSet.htm">_WinAPI_EmptyWorkingSet</a></td>
<td>Entfernt so viele wie Seiten wie m&ouml;glich von der Arbeitsmenge eines gegebenen Prozesses<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumChildProcess.htm">_WinAPI_EnumChildProcess</a></td>
<td>Enumerates a child processes that belong to the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumDeviceDrivers.htm">_WinAPI_EnumDeviceDrivers</a></td>
<td>Retrieves the load address for each device driver in the system<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumProcessHandles.htm">_WinAPI_EnumProcessHandles</a></td>
<td>Enumerates a handles that belong to the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumProcessModules.htm">_WinAPI_EnumProcessModules</a></td>
<td>Retrieves a handle and name for each module in the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumProcessThreads.htm">_WinAPI_EnumProcessThreads</a></td>
<td>Enumerates a threads that belong to the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumProcessWindows.htm">_WinAPI_EnumProcessWindows</a></td>
<td>Enumerates a windows that belong to the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_FatalAppExit.htm">_WinAPI_FatalAppExit</a></td>
<td>Zeigt ein Nachrichtenfenster und beendet die Anwendung<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetCurrentProcessExplicitAppUserModelID.htm">_WinAPI_GetCurrentProcessExplicitAppUserModelID</a></td>
<td>Retrieves the application-defined, explicit Application User Model ID for the current process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetCurrentProcessID.htm">_WinAPI_GetCurrentProcessID</a></td>
<td>Gibt die Prozess ID des aufrufenden Prozesses zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetCurrentThread.htm">_WinAPI_GetCurrentThread</a></td>
<td>Ermittelt ein Pseudo-Handle f&uuml;r den aufrufenden Prozess<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetCurrentThreadId.htm">_WinAPI_GetCurrentThreadId</a></td>
<td>Gibt den Thread-Identifizierer (ID) des aufrufenden Threads zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetDeviceDriverBaseName.htm">_WinAPI_GetDeviceDriverBaseName</a></td>
<td>Retrieves the base name of the specified device driver<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetDeviceDriverFileName.htm">_WinAPI_GetDeviceDriverFileName</a></td>
<td>Retrieves the path available for the specified device driver<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetExitCodeProcess.htm">_WinAPI_GetExitCodeProcess</a></td>
<td>Retrieves the termination status of the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetGuiResources.htm">_WinAPI_GetGuiResources</a></td>
<td>Ermittelt die Anzahl der Handles zu grafischen Benutzerschnittstellen-Objekten in Gebrauch vom angegebenen Prozess<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetModuleFileNameEx.htm">_WinAPI_GetModuleFileNameEx</a></td>
<td>Retrieves the fully-qualified path for the file containing the specified module<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetModuleInformation.htm">_WinAPI_GetModuleInformation</a></td>
<td>Retrieves information about the specified module<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetPriorityClass.htm">_WinAPI_GetPriorityClass</a></td>
<td>Retrieves the priority class for the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessAffinityMask.htm">_WinAPI_GetProcessAffinityMask</a></td>
<td>Bezieht die "Affinity Mask" f&uuml;r den Prozess und das System<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessCommandLine.htm">_WinAPI_GetProcessCommandLine</a></td>
<td>Retrieves the command-line string for the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessFileName.htm">_WinAPI_GetProcessFileName</a></td>
<td>Retrieves the fully-qualified path of the executable file for the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessHandleCount.htm">_WinAPI_GetProcessHandleCount</a></td>
<td>Retrieves the number of open handles that belong to the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessID.htm">_WinAPI_GetProcessID</a></td>
<td>Ermittelt die Prozess-ID des festgelegten Prozesses<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessIoCounters.htm">_WinAPI_GetProcessIoCounters</a></td>
<td>Retrieves accounting information for all I/O operations performed by the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessMemoryInfo.htm">_WinAPI_GetProcessMemoryInfo</a></td>
<td>Retrieves information about the memory usage of the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessName.htm">_WinAPI_GetProcessName</a></td>
<td>Ruft den Namen f&uuml;r den angegebenen Prozess ab<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessTimes.htm">_WinAPI_GetProcessTimes</a></td>
<td>Retrieves timing information for the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessUser.htm">_WinAPI_GetProcessUser</a></td>
<td>Retrieves the user and domain name for the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetProcessWorkingDirectory.htm">_WinAPI_GetProcessWorkingDirectory</a></td>
<td>Retrieves the current working directory for the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetThreadDesktop.htm">_WinAPI_GetThreadDesktop</a></td>
<td>Retrieves a handle to the desktop assigned to the specified thread<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetThreadErrorMode.htm">_WinAPI_GetThreadErrorMode</a></td>
<td>Retrieves the error mode for the calling thread<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsElevated.htm">_WinAPI_IsElevated</a></td>
<td>Determines whether the current process is elevated<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsProcessInJob.htm">_WinAPI_IsProcessInJob</a></td>
<td>Determines whether the process is running in the specified job<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsWow64Process.htm">_WinAPI_IsWow64Process</a></td>
<td>Pr&uuml;ft, ob der angegebene Prozess unter WOW64 ausgef&uuml;hrt wird<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_OpenJobObject.htm">_WinAPI_OpenJobObject</a></td>
<td>Opens an existing job object<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_OpenProcess.htm">_WinAPI_OpenProcess</a></td>
<td>Gibt ein Handle eines existierenden Prozessobjekts zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_OpenProcessToken.htm">_WinAPI_OpenProcessToken</a></td>
<td>Opens the access token associated with a process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_QueryInformationJobObject.htm">_WinAPI_QueryInformationJobObject</a></td>
<td>Retrieves limit and job state information from the job object<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetInformationJobObject.htm">_WinAPI_SetInformationJobObject</a></td>
<td>Sets limits for a job object<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetPriorityClass.htm">_WinAPI_SetPriorityClass</a></td>
<td>Sets the priority class for the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetProcessAffinityMask.htm">_WinAPI_SetProcessAffinityMask</a></td>
<td>Setzt eine "Process Affinity Mask" f&uuml;r die Threads eines bestimmten Prozesses<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetThreadDesktop.htm">_WinAPI_SetThreadDesktop</a></td>
<td>Assigns the specified desktop to the calling thread<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetThreadErrorMode.htm">_WinAPI_SetThreadErrorMode</a></td>
<td>Controls whether the system will handle the specified types of serious errors or whether the calling thread will handle them<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetThreadExecutionState.htm">_WinAPI_SetThreadExecutionState</a></td>
<td>Prevents the system from entering sleep or turning off the display while the current application is running<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_TerminateJobObject.htm">_WinAPI_TerminateJobObject</a></td>
<td>Terminates all processes currently associated with the job<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_TerminateProcess.htm">_WinAPI_TerminateProcess</a></td>
<td>Terminates the specified process and all of its threads<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_UserHandleGrantAccess.htm">_WinAPI_UserHandleGrantAccess</a></td>
<td>Grants or denies access to a handle to a User object to a job that has a user-interface restriction<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_WriteConsole.htm">_WinAPI_WriteConsole</a></td>
<td>Schreibt einen String in einen Konsolen-Bildschirmpuffer<br /></td>
</tr>
</table>

</body>
