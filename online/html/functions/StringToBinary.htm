<!DOCTYPE html>
<html>
<head>
<title>Funktion StringToBinary</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<h1 style="float:left; margin:15px 0 0 0; padding:0 0 0 0;">StringToBinary</h1><br />
<a href="../functions_en/StringToBinary.htm"><img src="../images/Flagge_en.gif" height="29" width="36" border=0 hspace=10 style="float:right"/></a><br />
<div style="display:block; text-align:right;">Beschreibung anzeigen in</div><br />
<p style="margin:2px 0 0 0;" class="funcdesc">Konvertiert einen String zu Bin&auml;rdaten.<br /></p>
<p class="codeheader">
StringToBinary ( expression [, flag = 1] )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">expression</td>
<td style="width:85%">Ausdruck der zu Bin&auml;rdaten konvertiert werden soll.</td>
</tr>
<tr>
<td>flag</td>
<td><strong>[optional]</strong> Setzt das Format wie der String als bin&auml;r gespeichert werden soll:<br />
&nbsp;&nbsp;&nbsp; $SB_ANSI (1) = Bin&auml;rdaten sind ANSI (Standardwert)<br />
&nbsp;&nbsp;&nbsp; $SB_UTF16LE (2) = Bin&auml;rdaten sind UTF16 Little Endian<br />
&nbsp;&nbsp;&nbsp; $SB_UTF16BE (3) = Bin&auml;rdaten sind UTF16 Big Endian<br />
&nbsp;&nbsp;&nbsp; $SB_UTF8 (4) = Bin&auml;rdaten sind UTF8<br />
<br />
Die Konstanten sind in StringConstants.au3 definiert.</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
Gibt&nbsp;eine bin&auml;re Variante zur&uuml;ck.<br />


<h2>Bemerkungen</h2>
<p>F&uuml;r genauere Beschreibung siehe <a href="../intro/unicode.htm">"Unicode Support"</a>.<br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="Binary.htm">Binary</a>, <a href="BinaryToString.htm">BinaryToString</a>, <a href="IsBinary.htm">IsBinary</a>, <a href="String.htm">String</a></p>

<h2 class="bottom">Beispiel</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Das Beispiel wurde in die Zwischenablage kopiert");
}
}
</script>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Dieses Skript &ouml;ffnen"><param name="Item1" value=",Examples\\HelpFile\\BinaryToString.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">In die Zwischenablage kopieren<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;StringConstants.au3&gt;</span>

<span class="S0">Example</span><span class="S8">()</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Definiert den String der sp&auml;ter konvertiert wird.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Anmerkung: Dieser String k&ouml;nnte in der Hilfe Datei und sogar in manchen Texteditoren als ?? dargestellt werden.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Dieses Beispiel wurde als UTF-8 mit BOM gespeichert.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Es sollte in Editoren die auf BOM Basis ver&auml;nderbare Codeseiten unterst&uuml;tzen korrekt angezeigt werden.</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Const</span></a><span class="S0"> </span><span class="S9">$sString</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"Hallo - ??"</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Tempor&auml;re Variablen in denen die Konvertierungsresultate gespeichert werden.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; $dBinary wird den Originalstring in Bin&auml;rform enthalten und</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; $sConverted wird das Resultat enthalten nachdem es in das urspr&uuml;ngliche Format gebracht wurde</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$dBinary</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/Binary.htm"><span class="S4">Binary</span></a><span class="S8">(</span><span class="S7">""</span><span class="S8">),</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">""</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Konvertiert den originalen UTF-8 String in einen ANSI kompatiblen Bin&auml;rstring.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$dBinary</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringToBinary.htm"><span class="S4">StringToBinary</span></a><span class="S8">(</span><span class="S9">$sString</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Konvertiert den ANSI kompatiblen Bin&auml;rstring zur&uuml;ck in einen String.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$sConverted</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/BinaryToString.htm"><span class="S4">BinaryToString</span></a><span class="S8">(</span><span class="S9">$dBinary</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Zeigt die Ergebnisse. Die letzten beiden Zeichen werden als ?? dargestellt, da sie in ANSI nicht repr&auml;sentiert werden k&ouml;nnen.</span>
<span class="S0">&nbsp; &nbsp; DisplayResults</span><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"ANSI"</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Konvertiert den originalen UTF-8 String in einen UTF16-LE Bin&auml;rstring.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$dBinary</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringToBinary.htm"><span class="S4">StringToBinary</span></a><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF16LE</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Konvertiert den UTF16-LE Bin&auml;rstring zur&uuml;ck in einen String.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$sConverted</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/BinaryToString.htm"><span class="S4">BinaryToString</span></a><span class="S8">(</span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF16LE</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Zeigt die Ergebnisse.</span>
<span class="S0">&nbsp; &nbsp; DisplayResults</span><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"UTF16-LE"</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Konvertiert den originalen UTF-8 String in einen UTF16-LE Bin&auml;rstring.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$dBinary</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringToBinary.htm"><span class="S4">StringToBinary</span></a><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF16BE</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Konvertiert den UTF16-LE Bin&auml;rstring zur&uuml;ck in einen String.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$sConverted</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/BinaryToString.htm"><span class="S4">BinaryToString</span></a><span class="S8">(</span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF16BE</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Zeigt die Ergebnisse.</span>
<span class="S0">&nbsp; &nbsp; DisplayResults</span><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"UTF16-BE"</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Konvertiert den originalen UTF-8 String in einen UTF-8 Bin&auml;rstring.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$dBinary</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringToBinary.htm"><span class="S4">StringToBinary</span></a><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF8</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Konvertiert den UTF-8 Bin&auml;rstring zur&uuml;ck in einen String.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S9">$sConverted</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/BinaryToString.htm"><span class="S4">BinaryToString</span></a><span class="S8">(</span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF8</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Zeigt die Ergebnisse.</span>
<span class="S0">&nbsp; &nbsp; DisplayResults</span><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"UTF8"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;Example</span>

<span class="S1">; Hilfsfunktion welche die Nachricht f&uuml;r die Darstellung formatiert. Sie empf&auml;ngt folgende Parameter:</span>
<span class="S1">; $sOriginal - Der originale String vor der Konvertierung.</span>
<span class="S1">; $dBinary - Der originale String nachdem er in Bin&auml;rform konvertiert wurde.</span>
<span class="S1">; $sConverted - Der originale String nachdem er in Bin&auml;rform und zur&uuml;ck konvertiert wurde.</span>
<span class="S1">; $sConversionType - Ein f&uuml;r den Benutzer lesbarer Name f&uuml;r den bei der konvertierung verwendeten Kodierungstyp.</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> DisplayResults</span><span class="S8">(</span><span class="S9">$sOriginal</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConversionType</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Original:"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sOriginal</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"Bin&auml;r:"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sConversionType</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">":"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;DisplayResults</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
