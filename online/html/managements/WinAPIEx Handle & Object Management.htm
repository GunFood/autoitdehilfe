<!DOCTYPE html>
<html>
<head>
  <title>Benutzerdefinierte Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1>Handle &amp; Object Benutzerdefinierte Funktionsreferenz</h1>
<p>Es folgt eine Liste der benutzerdefinierten Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>Wenn diese Funktion verwendet wird, so muss <strong>#include &lt;WinAPIHObj.au3&gt;</strong> hinzugefügt werden.</p>
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Benutzerdefinierte Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CloseHandle.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CloseHandle</a></td>
<td>Schlie&szlig;t ein offenes Objekthandle<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DeleteObject.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DeleteObject</a></td>
<td>L&ouml;scht einen logischen Zeichenstift, F&uuml;llmuster, Schrift, Bitmap, Region oder Palette<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DuplicateHandle.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DuplicateHandle</a></td>
<td>Erstellt ein Duplikat eines Objekt-Handles<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetCurrentObject.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetCurrentObject</a></td>
<td>Retrieves a handle to an object of the specified type that has been selected into the specified device context<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetCurrentProcess.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetCurrentProcess</a></td>
<td>Gibt das Prozess-Handle des aufgerufenen Prozesses zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetObject.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetObject</a></td>
<td>Ermittelt Informationen &uuml;ber das angegebene Grafik-Objekt<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetObjectInfoByHandle.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetObjectInfoByHandle</a></td>
<td>Retrieves information about a specified object<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetObjectNameByHandle.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetObjectNameByHandle</a></td>
<td>Retrieves a name of the specified object<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetObjectType.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetObjectType</a></td>
<td>Retrieves the type of the specified object<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetStdHandle.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetStdHandle</a></td>
<td>Ermittelt ein Handle f&uuml;r das Standard Eingabe-, Ausgabe- oder Fehlerausgabeger&auml;t<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetStockObject.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetStockObject</a></td>
<td>Ermittelt ein Handle zu einem der vordefinierten Zeichenstifte, F&uuml;llmuster, Schriften oder Paletten des Systems<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SelectObject.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SelectObject</a></td>
<td>W&auml;hlt ein Objekt in dem festgelegten Ger&auml;tekontext aus<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetHandleInformation.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetHandleInformation</a></td>
<td>Setzt bestimmte Eigenschaften eines Objekthandles<br /></td>
</tr>
</table>

</body>
