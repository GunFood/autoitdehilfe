<!DOCTYPE html>
<html>
<head>
<title>Funktion _Security__DuplicateTokenEx</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>_Security__DuplicateTokenEx</h1><div>
<div id="flagtext">Beschreibung anzeigen in</div>
<div id="flaglink"> <a href="../libfunctions_en/_Security__DuplicateTokenEx.htm"><img src="../images/Flagge_en.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Erstellt ein neues Zugriffstoken als Duplikat eines existierenden Tokens<br /></p>
<p class="codeheader">
#include &lt;Security.au3&gt;<br />
_Security__DuplicateTokenEx ( $hExistingToken, $iDesiredAccess, $iImpersonationLevel, $iTokenType )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$hExistingToken</td>
<td style="width:85%">Ein Handle zu einem Zugriffstoken, welches mit TOKEN_DUPLICATE-Zugriff ge&ouml;ffnet ist.</td>
</tr>
<tr>
<td>$iDesiredAccess</td>
<td>Die geforderten Zugriffsrechte f&uuml;r das neue Token.</td>
</tr>
<tr>
<td>$iImpersonationLevel</td>
<td>Das Level des neuen Tokens.</td>
</tr>
<tr>
<td>$iTokenType</td>
<td>Der Typ des neuen Tokens.</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Erfolg:</td>
<td style="width:90%">Ein Handle, welches das neue Token empf&auml;ngt.</td>
</tr>
<tr>
<td class="valign-top">Fehler:</td>
<td>0</td>
</tr>
</table>

<h2>Verwandte Funktionen</h2>
<p><a href="_Security__OpenProcessToken.htm">_Security__OpenProcessToken</a>, <a href="_Security__OpenThreadToken.htm">_Security__OpenThreadToken</a>, <a href="_Security__OpenThreadTokenEx.htm">_Security__OpenThreadTokenEx</a></p>

<h2>Siehe auch</h2>
<p>Suche nach <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(DuplicateTokenEx);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">DuplicateTokenEx</a> in der MSDN Bibliothek.
</p>

<h2 class="bottom">Beispiel</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Das Beispiel wurde in die Zwischenablage kopiert");
}
}
</script>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Dieses Skript &ouml;ffnen"><param name="Item1" value=",Examples\\HelpFile\\_Security__DuplicateTokenEx.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">In die Zwischenablage kopieren<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;MsgBoxConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;ProcessConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;Security.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;SecurityConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WinAPIHObj.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WinAPIProc.au3&gt;</span>

<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hProcess</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_OpenProcess.htm"><span class="S15">_WinAPI_OpenProcess</span></a><span class="S8">(</span><span class="S9">$PROCESS_ALL_ACCESS</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../functions/ProcessExists.htm"><span class="S4">ProcessExists</span></a><span class="S8">(</span><span class="S7">"explorer.exe"</span><span class="S8">))</span>
<span class="S1">; Wenn erfolgreich:</span>
<a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><span class="S9">$hProcess</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Token stellen:</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hTokOriginal</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_Security__OpenProcessToken.htm"><span class="S15">_Security__OpenProcessToken</span></a><span class="S8">(</span><span class="S9">$hProcess</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$TOKEN_ALL_ACCESS</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Prozesshandle schlie&szlig;en, da es nicht mehr gebraucht wird:</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_CloseHandle.htm"><span class="S15">_WinAPI_CloseHandle</span></a><span class="S8">(</span><span class="S9">$hProcess</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Wenn erfolgreich:</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><span class="S9">$hTokOriginal</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Duplizieren des Originaltokens:</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$hTokDuplicate</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_Security__DuplicateTokenEx.htm"><span class="S15">_Security__DuplicateTokenEx</span></a><span class="S8">(</span><span class="S9">$hTokOriginal</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$TOKEN_ALL_ACCESS</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SECURITYIMPERSONATION</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$TOKENPRIMARY</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Originaltoken schlie&szlig;en:</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_CloseHandle.htm"><span class="S15">_WinAPI_CloseHandle</span></a><span class="S8">(</span><span class="S9">$hTokOriginal</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Nun liegt ein prim&auml;res Token vor (!)</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; ... Weitere Tokenbefehle hier hinein ...</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"DuplicateTokenEx"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"$hTokDuplicate = "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$hTokDuplicate</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S1">; Token schlie&szlig;en:</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_CloseHandle.htm"><span class="S15">_WinAPI_CloseHandle</span></a><span class="S8">(</span><span class="S9">$hTokDuplicate</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">EndIf</span></a>
<a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">EndIf</span></a>

<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
