<!DOCTYPE html>
<html>
<head>
<title>Keyword $tagWINDOWPLACEMENT</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1 class="small">Keyword Reference</h1>
<hr style="height:0px">
<div class="top"><h1>$tagWINDOWPLACEMENT</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../libfunctions/$tagWINDOWPLACEMENT.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<div ><input id="toggleButton" type="image" onclick="Themes.toggleTheme()" src="../images/dark.png" height ="36" width="36" alt="Toggle Theme"></div><br />
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">The WINDOWPLACEMENT structure contains information about the placement of a window on the screen<br /></p>
<p class="codeheader">
Global Const $tagWINDOWPLACEMENT = "UINT length; UINT flags; UINT showCmd; int ptMinPosition[2]; int ptMaxPosition[2]; int rcNormalPosition[4]"<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">length</td>
<td style="width:85%">Specifies the length, in bytes, of the structure</td>
</tr>
<tr>
<td>flags</td>
<td>Specifies flags that control the position of the minimized window and the method by which the window is restored. This member can be one or more of the following values<br />
&nbsp;&nbsp;&nbsp; $WPF_ASYNCWINDOWPLACEMENT - If the calling thread and the thread that owns the window are attached to different input queues, the system posts the request to the thread that owns the window.<br />
&nbsp;&nbsp;&nbsp; $WPF_RESTORETOMAXIMIZED - Specifies that the restored window will be maximized, regardless of whether it was maximized before it was minimized.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; This setting is only valid the next time the window is restored. It does not change the default restoration behavior.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; This flag is only valid when the @SW_SHOWMINIMIZED value is specified for the showCmd member.<br />
&nbsp;&nbsp;&nbsp; $WPF_SETMINPOSITION - Specifies that the coordinates of the minimized window may be specified.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; This flag must be specified if the coordinates are set in the ptMinPosition member.</td>
</tr>
<tr>
<td>showCmd</td>
<td>Specifies the current show state of the window. This member can be one of the following values:<br />
&nbsp;&nbsp;&nbsp; @SW_HIDE - Hides the window and activates another window.<br />
&nbsp;&nbsp;&nbsp; @SW_MAXIMIZE - Maximizes the specified window.<br />
&nbsp;&nbsp;&nbsp; @SW_MINIMIZE - Minimizes the specified window and activates the next top-level window in the z-order.<br />
&nbsp;&nbsp;&nbsp; @SW_RESTORE - Activates and displays the window. If the window is minimized or maximized, the system restores it to its original size and position.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; An application should specify this flag when restoring a minimized window.<br />
&nbsp;&nbsp;&nbsp; @SW_SHOW - Activates the window and displays it in its current size and position.<br />
&nbsp;&nbsp;&nbsp; @SW_SHOWMAXIMIZED - Activates the window and displays it as a maximized window.<br />
&nbsp;&nbsp;&nbsp; @SW_SHOWMINIMIZED - Activates the window and displays it as a minimized window.<br />
&nbsp;&nbsp;&nbsp; @SW_SHOWMINNOACTIVE - Displays the window as a minimized window.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; This value is similar to @SW_SHOWMINIMIZED, except the window is not activated.<br />
&nbsp;&nbsp;&nbsp; @SW_SHOWNA - Displays the window in its current size and position.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; This value is similar to @SW_SHOW, except the window is not activated.<br />
&nbsp;&nbsp;&nbsp; @SW_SHOWNOACTIVATE - Displays a window in its most recent size and position.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; This value is similar to @SW_SHOWNORMAL, except the window is not activated.<br />
&nbsp;&nbsp;&nbsp; @SW_SHOWNORMAL - Activates and displays a window.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; If the window is minimized or maximized, the system restores it to its original size and position.<br />
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; An application should specify this flag when displaying the window for the first time.</td>
</tr>
<tr>
<td>ptMinPosition</td>
<td>Specifies the coordinates of the window's upper-left corner when the window is minimized.</td>
</tr>
<tr>
<td>ptMaxPosition</td>
<td>Specifies the coordinates of the window's upper-left corner when the window is maximized.</td>
</tr>
<tr>
<td>rcNormalPosition</td>
<td>Specifies the window's coordinates when the window is in the restored position.</td>
</tr>
</table>

</body>
</html>
