<!DOCTYPE html>
<html>
<head>
  <title>Script Breaking Changes in Recent Versions</title>
  <meta charset="utf-8">
  <link href="css/default.css" rel="stylesheet">
</head>
<body>
  <h1>Script Breaking Changes in Recent Versions</h1>
  <p>This page contains a list of all changes made in recent updates that will almost certainly <strong>break existing scripts</strong>. Please read this list carefully when upgrading if you have not been keeping up with developments in the beta
  versions. If any of these issues affect you then <strong>you will need to modify your scripts</strong>.</p>
  <h2>v3.3.16.0</h2>
  <p><strong>UDFs:</strong></p>
  <ul>
   <li>ColorConstants.au3 has been addapted to fit W3C Colors. So MAROON, SKYBLUE have different values, CREAM, MEDBLUE, MDGRAY,MONEYGREEN have been removed.</li>
   <li>SecurityConstants.au3 has been addapted to avoid naming confict. So $RIGHTS_DELETE, $SYNCHRONIZE,  have been renamed to $STANDARD_*.</li>
 </ul>

  <h2>v3.3.14.3</h2>
  <p><strong>UDFs:</strong></p>
  <ul>
   <li>_MathCheckDiv() documentation has been removed. The function is still present in Math.au3, but may be removed at a later date. Scripts should be updated to use Mod() instead.</li>
   <li>On error value of both <a href="libfunctions/_Degree.htm">_Degree()</a> and <a href="libfunctions/_Radian.htm">_Radian()</a>, has been changed from an empty string to 0.</li>
   <li><a href="libfunctions/_WinAPI_DefSubclassProc.htm">_WinAPI_DefSubclassProc()</a>, <a href="libfunctions/_WinAPI_GetWindowSubclass.htm">_WinAPI_GetWindowSubclass()</a>, <a href="libfunctions/_WinAPI_RemoveWindowSubclass.htm">_WinAPI_RemoveWindowSubclass()</a> and <a href="libfunctions/_WinAPI_SetWindowSubclass.htm">_WinAPI_SetWindowSubclass()</a> moved from WinAPIShellEx.au3 to <strong>WinAPISys.au3</strong>.
   <li>Fixed typo in AutoItConstants.au3 ( $EXITCLOSE_BYSUTDOWN > $EXITCLOSE_BYS<strong>H</strong>UTDOWN ) which was used with <a href="functions/OnAutoItExitRegister.htm">OnAutoItExitRegister()</a>.
   <li><a href="libfunctions/WinAPI_GetOpenFileName.htm">WinAPI_GetOPenFileName()</a>, <a href="libfunctions/_WinAPI_GetSaveFileName.htm">_WinAPI_GetSaveFileName()</a> returns file with extension only if typed.</li>
 </ul>

  <h2>v3.3.14.2</h2>
  <p><strong>UDFs:</strong></p>
  <ul>
    <li>_SQLite_Startup() function no longer automatically downloads the SQLite DLL files from autoitscript.com. Most users were completely unaware that this download was occuring on each script run and it was also a severe bandwidth hog for the website. The SQLite DLLs must now be manually download. See the <a href="libfunctions/_SQLite_Startup.htm">_SQLite_Startup()</a> documentation for details.</li>
  </ul>

  <h2>v3.3.14.0</h2>
  <p><strong>AutoIt:</strong></p>
  <ul>
    <li>If Min and Max are the same value then <a href="functions/Random.htm">Random()</a> will now return that value and the @error flag will no longer be set.</li>
    <li>Under Vista or Server 2008 <a href="libfunctions/_GDIPlus_Startup.htm">_GDIPlus_Startup()</a> need explicit Dll for GDI+ v1.1 support.</li>
    <li>File operations on text files not opened with <a href="functions/FileOpen.htm">FileOpen()</a> and <strong>explicit unicode flags</strong> now auto-detect encoding slightly differently to be more in line with modern editors. This includes all file functions that are used with a filename, for example FileRead("filename.txt"). Specifically:</li>
    <ul>
      <li>Files containing a BOM will be opened in the relevant mode as per that BOM. UTF-8 and UTF-16 BOMs are checked.</li>
      <li>UTF-8 and UTF-16 files without a BOM will be automatically detected and opened in the relevant mode.</li>
      <li>Files containing nulls are opened in Binary ($FO_BINARY) mode by default (unless they are detected as valid UTF-16). Previously they would be opened in ANSI mode. Use the $FO_ANSI flag to override.</li>
      <li>Files containing only characters 1-127 are opened in UTF-8 with no BOM ($FO_UTF8_NOBOM) mode by default. Previously they would be opened in ANSI mode. Use the $FO_ANSI flag to override.</li>
      <li>Files containing only characters 1-255 are opened in ANSI ($FO_ANSI) mode by default.</li>
      <li>Due to the above  <a href="functions/FileGetEncoding.htm">FileGetEncoding()</a> now returns 512 ($FO_ANSI) or 256 ($FO_UTF8_NOBOM) instead of 0 which was undocumented but indicated ANSI.</li>
    </ul>
    <li>New files are written in UTF-8 with no BOM ($FO_UTF8_NOBOM) mode by default. Use <a href="functions/FileOpen.htm">FileOpen()</a> to override.</li>
    <li>UTF-16 files without a BOM are now automatically detected in most cases.</li>
  </ul>
  <p><strong>UDFs:</strong></p>
  <ul>
    <li>Excel UDF, function _Excel_BookOpen: When parameter $bReadOnly = False and read-write access could not be granted @error was set to 4 and the Workbook was opened read-only. Now @error = 0, @extended = 1 and the Workbook is opened read-only.</li>
    <li>Word UDF, function _Word_DocOpen: When parameter $bReadOnly = False and read-write access could not be granted @error was set to 4 and the document was opened read-only. Now @error = 0, @extended = 1 and the document is opened read-only.</li>
  </ul>
  <h2>v3.3.12.0</h2>
  <p><strong>UDFs:</strong></p>
  <ul>
    <li>The parameter $hPrintCallback (formerly $sPrintCallback) in <a href="libfunctions/_SQLite_Startup.htm">_SQLite_Startup()</a> now requires a function object rather than a function string. This is due to the usage of <a href="functions/Call.htm">Call()</a> being removed from the UDF.</li>
    <li>The parameter $hFunctionCall (formerly $sFunctionCall) in <a href="libfunctions/_FTP_ProgressDownload.htm">_FTP_ProgressDownload()</a> and <a href="libfunctions/_FTP_ProgressUpload.htm">_FTP_ProgressUpload()</a> now requires a function object rather than a function string. This is due to the usage of <a href="functions/Call.htm">Call()</a> being removed from the UDF.</li>
    <li><a href="libfunctions/_ArrayDelete.htm">_ArrayDelete()</a> sets @error to non-zero if $iElement is out of bounds. Please see documentation for more details.</li>
    <li><a href="libfunctions/_StringBetween.htm">_StringBetween()</a> change in behaviour and parameter order change. Please see documentation for more details.</li>
    <li><a href="libfunctions/_GUICtrlListView_GetView.htm">_GUICtrlListView_GetView()</a> and <a href="libfunctions/_GUICtrlListView_SetView.htm">_GUICtrlListView_SetView()</a> were using 0 for detailed view and 1 for large icon view, when it's 0 for large icon view and 1 for detailed view.</li>
    <li>Array UDF was re-written. Functions and/or parameters have been changed, removed or added. <strong>A detailed list can be found <a href="script_breaking_changes_array_udf.htm">here</a>.</strong></li>
    <li>Excel UDF was re-written. Functions and/or parameters have been renamed, removed or added. <strong>A detailed list can be found <a href="script_breaking_changes_excel_udf.htm">here</a>.</strong></li>
  </ul>
  <p>Missing information from the v3.3.10.0 notes:</p>
  <ul>
    <li><a href="libfunctions/_ArrayDisplay.htm">_ArrayDisplay()</a> re-written with additional parameters. Please see documentation for more details.</li>
  </ul>
  <h2>v3.3.10.1</h2>
  <p><strong>UDFs:</strong></p>
  <p>Missing information from the v3.3.10.0 notes:</p>
  <ul>
    <li><a href="libfunctions/$tagBITMAPINFO.htm">$tagBITMAPINFO</a> fields changed by using the prefix of "bi".</li>
  </ul>
  <h2>v3.3.10.0</h2>
  <p><strong>AutoIt:</strong></p>
  <ul>
    <li>The return value of ShellExecute() has now changed. Instead of returning 1, it returns the PID of the executed process or -1 if no PID exists.</li>
  </ul>
  <p><strong>UDFs:</strong></p>
  <ul>
    <li>_Iif() documentation has been removed. The function is still present in Misc.au3, but may be removed at a later date. Scripts should be updated to use ternary operators instead.</li>
    <li>_IEErrorHandlerRegister() has been removed. It's not required due to COM errors no longer being fatal.</li>
    <li>_StringEncrypt() documentation has been removed. The function is still present in String.au3, but may be removed at a later date. Scripts should be updated to use the Crypt functions instead.<br />
    Look at <a href="libfunctions/_Crypt_EncryptData.htm">_Crypt_EncryptData()</a> for an example of an alternative _StringEncrypt.</li>
    <li>_StringReverse() documentation has been removed. The function is still present in String.au3, but may be removed at a later date. Scripts should be updated to use the native function <a href="functions/StringReverse.htm">StringReverse()</a> instead.</li>
    <li>With the introduction of WinAPIEx functions some constants of Constants.au3 include file have been moved to WinAPIConstants.au3.</li>
    <li>Word UDF was re-written. Functions and/or parameters have been renamed, removed or added. <strong>A detailed list can be found <a href="script_breaking_changes_word_udf.htm">here</a>.</strong></li>
    <li>$tagGDIPPENCODERPARAMS removed, use <a href="libfunctions/$tagGDIPENCODERPARAMS.htm">$tagGDIPENCODERPARAMS</a>.</li>
    <li><a href="libfunctions/$tagGDIPENCODERPARAMS.htm">$tagGDIPENCODERPARAMS</a> use $tagGDIPENCODERPARAM as a first structure of the array.</li>
    <li>$tagGDIPENCODERPARAM "count" field renamed in "nbOfValues".</li>
    <li><a href="libfunctions/$tagBITMAPINFO.htm">$tagBITMAPINFO</a> fields changed by using the prefix of "bi".</li>
    <li><a href="libfunctions/_ArrayUnique.htm">_ArrayUnique()</a> re-written with improved speed. The final parameter is used to select whether to return count of returned strings in $aArray[0]</li>
    <li>ToolTip UDF was re-written. Functions and/or parameters have been renamed, removed or added. <strong>A detailed list can be found <a href="script_breaking_changes_tooltip_udf.htm">here</a>.</strong></li>
	<li><a href="libfunctions/_ArrayDisplay.htm">_ArrayDisplay()</a> re-written with additional parameters. Please see documentation for more details.</li>
  </ul>
  <h2>v3.3.8.0</h2>
  <p><strong>AutoIt:</strong></p>
  <ul>
    <li><a href="functions/ObjName.htm">ObjName()</a> has had a number of bug fixes and changes that may affect data returned. Built-in UDFs have been changed to accommodate this but custom scripts may need to be edited.</li>
    <li><a href="functions/ObjEvent.htm">ObjEvent()</a> AutoIt.Error objects no longer have Raise() or Clear() methods and the properties are read-only.</li>
    <li><a href="functions/Int.htm">Int()</a> and <a href="functions/Hex.htm">Hex()</a> no longer set @error.</li>
    <li>COM methods now require parenthesis so the language can internally detect properties versus methods easier.</li>
  </ul>
  <h2>v3.3.6.0</h2>
  <p><strong>UDFs:</strong></p>
  <ul>
    <li>_DateToDayOfWeekISO returned 0-6 and is changed to 1-7 where Monday = 1.</li>
  </ul>
  <h2>v3.3.4.0</h2>
  <p><em><strong>Some of the following features are deprecated. Deprecated features are no longer documented but continue to work. Deprecated features will be removed after version 3.3.4.0. It is strongly recommended that scripts relying on deprecated
  features be updated to work with the new behavior. Some features have already been removed and will be noted as such.</strong></em></p>
  <p><strong>AutoIt:</strong></p>
  <ul>
    <li>The raw reading mode for FileOpen() has been removed.</li>
    <li>InetGet("abort"), @InetGetActive and @InetGetBytesRead have been removed. The following list shows the new functions used to access the old behavior:</li>
    <li>
      <ul>
        <li><strong>InetGet("abort")</strong> - Calling the new <a href="functions/InetClose.htm">InetClose()</a> function with a handle returned from <a href="functions/InetGet.htm">InetGet()</a> will abort a download.</li>
        <li><strong>@InetGetActive</strong> - Calling the new <a href="functions/InetGetInfo.htm">InetGetInfo()</a> function with no parameters returns a count of active downloads.</li>
        <li><strong>@InetGetBytesRead</strong> - Calling the new <a href="functions/InetGetInfo.htm">InetGetInfo()</a> function with a handle returned from <a href="functions/InetGet.htm">InetGet()</a>will return the bytes read (and more) for a
        download.</li>
      </ul>
    </li>
    <li>AdlibEnable() and AdlibDisable() have been removed. See the new functions <a href="functions/AdlibRegister.htm">AdlibRegister()</a> and <a href="functions/AdlibUnRegister.htm">AdlibUnRegister()</a>.</li>
    <li>OnAutoItStart() has been removed. See the new pre-processor statement <a href="keywords/OnAutoItStartRegister.htm">#OnAutoItStartRegister</a>.</li>
    <li>OnAutoItExit() has been removed. See the new functions <a href="functions/OnAutoItExitRegister.htm">OnAutoItExitRegister()</a> and <a href="functions/OnAutoItExitUnRegister.htm">OnAutoItExitUnRegister()</a>.</li>
  </ul>
  <h2>v3.3.2.0</h2>
  <p><em><strong>Some of the following features are deprecated. Deprecated features are no longer documented but continue to work. Deprecated features will be removed after version 3.3.2.0. It is strongly recommended that scripts relying on deprecated
  features be updated to work with the new behavior. Some features have already been removed and will be noted as such.</strong></em></p>
  <p><strong>AutoIt:</strong></p>
  <ul>
    <li><a href="functions/ShellExecute.htm">ShellExecute()</a> and <a href="functions/ShellExecuteWait.htm">ShellExecuteWait()</a> no longer use the "open" verb by default. See the remarks section for those functions for more details.</li>
    <li>The return value of <a href="functions/InetGet.htm">InetGet()</a> has changed. It is <strong>important</strong> to read and understand the changes because it is possible to leak resources if <a href="functions/InetGet.htm">InetGet()</a> is used
    incorrectly.</li>
    <li>InetGet("abort"), @InetGetActive and @InetGetBytesRead are now deprecated. The following list shows the new functions used to access the old behavior:</li>
    <li>
      <ul>
        <li><strong>InetGet("abort")</strong> - Calling the new <a href="functions/InetClose.htm">InetClose()</a> function with a handle returned from <a href="functions/InetGet.htm">InetGet()</a> will abort a download.</li>
        <li><strong>@InetGetActive</strong> - Calling the new <a href="functions/InetGetInfo.htm">InetGetInfo()</a> function with no parameters returns a count of active downloads.</li>
        <li><strong>@InetGetBytesRead</strong> - Calling the new <a href="functions/InetGetInfo.htm">InetGetInfo()</a> function with a handle returned from <a href="functions/InetGet.htm">InetGet()</a>will return the bytes read (and more) for a
        download.</li>
      </ul>
    </li>
    <li>The FtpBinaryMode option set with AutoItSetOption() has been removed. Now <a href="functions/InetGet.htm">InetGet()</a> takes a flag to specify the transfer mode.</li>
    <li>The URLDownloadToFile() alias for <a href="functions/InetGet.htm">InetGet()</a> has been removed.</li>
    <li>AdlibEnable() and AdlibDisable() are deprecated. See the new functions <a href="functions/AdlibRegister.htm">AdlibRegister()</a> and <a href="functions/AdlibUnRegister.htm">AdlibUnRegister()</a>.</li>
    <li>OnAutoItStart() is deprecated. See the new pre-processor statement <a href="keywords/OnAutoItStartRegister.htm">#OnAutoItStartRegister</a>.</li>
    <li>OnAutoItExit() is deprecated. See the new functions <a href="functions/OnAutoItExitRegister.htm">OnAutoItExitRegister()</a> and <a href="functions/OnAutoItExitUnRegister.htm">OnAutoItExitUnRegister()</a>.</li>
    <li>The AutoItSetOption() option OnExitFunc has been removed. See the new functions <a href="functions/OnAutoItExitRegister.htm">OnAutoItExitRegister()</a> and <a href="functions/OnAutoItExitUnRegister.htm">OnAutoItExitUnRegister()</a>.</li>
    <li><a href="functions/GUICreate.htm">GUICreate()</a> with $WS_EX_MDICHILD has been fixed to be relative to client area as documented.</li>
    <li><a href="functions/ProcessWait.htm">ProcessWait()</a> now returns a PID instead of 1 on success.</li>
    <li><a href="functions/WinWait.htm">WinWait()</a>, <a href="functions/WinWaitActive.htm">WinWaitActive()</a>, <a href="functions/WinActivate.htm">WinActivate()</a>, <a href="functions/WinActive.htm">WinActive()</a> and <a href=
    "functions/WinMove.htm">WinMove()</a> now return an HWND instead of 1 on success.</li>
    <li>The macro <a href="macros/TimeAndDate.htm">@YDAY</a> now uses the range 001 - 366 instead of 1 - 366. This makes the macro more consistent with other languages (like C/C++) and more consistent with all other date related macros which return
    strings with leading 0s to pad the length.</li>
    <li><a href="functions/RegEnumKey.htm">RegEnumKey()</a> and <a href="functions/RegEnumVal.htm">RegEnumVal()</a> now return an empty string instead of an error message.</li>
  </ul>
  <p><strong>UDFs:</strong></p>
  <ul>
    <li>The last optional parameter for _StringBetween() has been removed.</li>
    <li>_StringAddThousandsSep() has been removed. There are too many opinions on what this function should do and too many revisions of this function have been made.</li>
    <li>_SQLite_SaveMode() has been renamed to _SQLite_SafeMode().</li>
  </ul>
  <h2>v3.3.0.0</h2>
  <p><strong>AutoIt:</strong></p>
  <ul>
    <li>Windows 9x and Windows NT 4.0 Operating System support has been removed. Use v3.2.12.1 of AutoIt if you really need this.</li>
    <li>@ProcessorArch changed to @OSArch as it was misleading.</li>
    <li><a href="functions/RegRead.htm">RegRead()</a> and <a href="functions/RegWrite.htm">RegWrite()</a> no longer use hex strings for REG_BINARY types - native binary datatypes are enforced.</li>
  </ul>
  <p><strong>AutoItX:</strong></p>
  <ul>
    <li>The native version of the DLL now exclusively uses Unicode strings (LPWSTR and LPCWTSR). If you really need ANSI strings then continue to use v3.2.12.1. The easiest workaround though is to use a "wrapper" function to simply convert between
    Unicode and ANSI. A limited selection of functions (WinWait... and Send) have an ANSI version but it is not intended to add ANSI versions for any others unless there is a large demand.</li>
  </ul>
  <h2>v3.2.12.0</h2>
  <p><strong>AutoIt:</strong></p>
  <ul>
    <li>RunAsSet() has been removed. Use the new <a href="functions/RunAs.htm">RunAs()</a> and <a href="functions/RunAsWait.htm">RunAsWait()</a> functions instead. They have been enhanced with slightly better security (It is still not recommended to
    store important passwords in your scripts) and more functionality.</li>
    <li>The option <a href="functions/AutoItSetOption.htm">RunErrorsFatal</a> has been removed. <a href="functions/Run.htm">Run()</a>, <a href="functions/RunWait.htm">RunWait()</a>, <a href="functions/ShellExecute.htm">ShellExecute()</a> and <a href=
    "functions/ShellExecuteWait.htm">ShellExecuteWait()</a> now all set @error when they fail to run the application. AutoIt will no longer throw a fatal error when an application fails to run.</li>
    <li><a href="functions/StdoutRead.htm">StdoutRead()</a>, <a href="functions/StderrRead.htm">StderrRead()</a> and <a href="functions/ConsoleRead.htm">ConsoleRead()</a> have undergone significant changes. They no longer block, they return immediately.
    The parameters have changed as well. It's no longer possible to read count parameters. The peek parameter has moved to the second parameter. The third parameter now specifies you want the data to be returned in binary format (default is text). The
    macro @extended now holds the number of bytes/characters read.</li>
    <li><a href="functions/StdinWrite.htm">StdinWrite()</a>, <a href="functions/ConsoleWrite.htm">ConsoleWrite()</a> and <a href="functions/ConsoleWriteError.htm">ConsoleWriteError()</a> will now behave differently when given binary data. The binary data
    is written as-is instead of converting it to a string. Also, the return value from these functions is the number of bytes written instead of a generic value of 1.</li>
    <li>Removed: ColorMode option ( <a href="functions/AutoItSetOption.htm">Opt()</a> ).</li>
    <li>Fixed: Random(Min,Max,1). Previously this would never actually return Max, so if Max was artificially incremented by one the script will now need to be changed.</li>
  </ul>
  <p><strong>UDFs:</strong></p>
  <ul>
    <li>(Please see <a href="http://www.autoitscript.com/forum/index.php?showtopic=70902" target="_blank">this forum</a> thread for more details and help with these changes.)</li>
    <li>GUIConstants.au3 is identical to GUIConstantsEx.au3. This means that many scripts using advanced GUI functionality will need to use additional #include statements to include files containing constants that were previously and erroneously
    included.</li>
    <li>GUIDefaultConstants.au3 no longer exists. You must now #include the corresponding individual constants file for the control type you need. For example, ListBoxConstants.au3, ComboConstants.au3, EditConstants.au3, etc.</li>
    <li>_ArrayCreate() documentation has been removed. The function is still present but may be removed at a later time. Scripts should be updated to use the array initialization syntax built into AutoIt.</li>
  </ul>
  <h2>v3.2.10.0</h2>
  <p><strong>AutoIt</strong></p>
  <ul>
    <li><a href="functions/DllCall.htm">DllCall()</a>: short_ptr, long_ptr, int_ptr types deprecated. Use short*, long* and int* respectively.</li>
  </ul>
  <p><strong>UDFs</strong></p>
  <ul>
    <li>_GUICtrlXXXYYY() have been renamed _GUICtrlXXX_YYY() without any functional changes.</li>
  </ul>
</body>
</html>
