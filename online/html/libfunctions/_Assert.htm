<!DOCTYPE html>
<html>
<head>
<title>Funktion _Assert</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>_Assert</h1><div>
<div id="flagtext">Beschreibung anzeigen in</div>
<div id="flaglink"> <a href="../libfunctions_en/_Assert.htm"><img src="../images/Flagge_en.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Zeigt eine Nachricht an, falls die Aussage nicht zutrifft<br /></p>
<p class="codeheader">
#include &lt;Debug.au3&gt;<br />
_Assert ( $sCondition [, $bExit = True [, $iCode = 0x7FFFFFFF [, $sLine = @ScriptLineNumber]]] )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$sCondition</td>
<td style="width:85%">Die Bedingung (Ausdr&uuml;cke in Anf&uuml;hrungszeichen) dessen Auswertung wahr ergeben muss.</td>
</tr>
<tr>
<td>$bExit</td>
<td><strong>[optional]</strong> Falls True (Standard), wird das Skript abgebrochen.</td>
</tr>
<tr>
<td>$iCode</td>
<td><strong>[optional]</strong> Der Exit-Code, der zur&uuml;ckgegeben werden soll, wenn das Skript abgebrochen ist.</td>
</tr>
<tr>
<td>$sLine</td>
<td><strong>[optional]</strong> Zeigt die Zeilennummer an, in der die Aussage nicht zutrifft. Wenn dieser Wert unver&auml;ndert ist, dann zeigt der Standardwert die korrekte Zeile an.</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
Gibt&nbsp;das Ergebnis der Bedingung zur&uuml;ck (Nur g&uuml;ltig wenn nicht abgebrochen wird).<br />


<h2>Bemerkungen</h2>
<p>@error und @extended werden bei R&uuml;ckgabe nicht zerst&ouml;rt.<br />
Wenn <a href="_DebugSetup.htm">_DebugSetup()</a> aufgerufen wurde, wird anstelle der Anzeige einer <a href="../functions/MsgBox.htm">MsgBox()</a>,<br />
<a href="_DebugReport.htm">_DebugReport()</a> verwendet und $bExit auf False gesetzt, um einen Abbruch des Skripts zu vermeiden. <br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="_DebugReport.htm">_DebugReport</a>, <a href="_DebugSetup.htm">_DebugSetup</a></p>

<h2 class="bottom">Beispiel</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Das Beispiel wurde in die Zwischenablage kopiert");
}
}
</script>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Dieses Skript &ouml;ffnen"><param name="Item1" value=",Examples\\HelpFile\\_Assert.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">In die Zwischenablage kopieren<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;Debug.au3&gt;</span>

<a class="codeSnippetLink" href="../libfunctions/_DebugSetup.htm"><span class="S15">_DebugSetup</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../keywords/Default.htm"><span class="S5">Default</span></a><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Booleans.htm"><span class="S5">True</span></a><span class="S8">)</span>

<span class="S0">Example</span><span class="S8">()</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$sABC</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">""</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S12">#forceref</span><span class="S0"> </span><span class="S9">$sABC</span>

<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_Assert.htm"><span class="S15">_Assert</span></a><span class="S8">(</span><span class="S7">'$sABC &gt; ""'</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_Assert.htm"><span class="S15">_Assert</span></a><span class="S8">(</span><span class="S7">'$sABC &gt; ""'</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
