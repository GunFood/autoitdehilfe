<!DOCTYPE html>
<html>
<head>
<title>Funktion _WinAPI_ChangeWindowMessageFilterEx</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter pr√ºfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>_WinAPI_ChangeWindowMessageFilterEx</h1><div>
<div ><input id="toggleButton" type="image" onclick="Themes.toggleTheme()" src="../images/dark.png" height ="36" width="36" alt="Toggle Theme"></div><br />
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Modifies the User Interface Privilege Isolation (UIPI) message filter for a specified window<br /></p>
<p class="codeheader">
#include &lt;WinAPISysWin.au3&gt;<br />
_WinAPI_ChangeWindowMessageFilterEx ( $hWnd, $iMsg, $iAction )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$hWnd</td>
<td style="width:85%">Handle to the window whose UIPI message filter is to be modified.<br />
If this parameter is 0, the UIPI message filter will be modified in a process-wide manner.<br />
Moreover, under Windows Vista this parameter is not used and should be set to 0.</td>
</tr>
<tr>
<td>$iMsg</td>
<td>The message that the message filter allows through or blocks.</td>
</tr>
<tr>
<td>$iAction</td>
<td>The action to be performed. This parameter can be one of the following values:<br />
&nbsp;&nbsp;&nbsp; $MSGFLT_ALLOW<br />
&nbsp;&nbsp;&nbsp; $MSGFLT_DISALLOW<br />
<br />
<strong>Windows 7 or later</strong><br />
&nbsp;&nbsp;&nbsp; $MSGFLT_RESET</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">1 and sets the @extended flag to 0 or one of the following values (only under <strong>Windows 7 or later</strong>).<br />
&nbsp;&nbsp;&nbsp;&nbsp;$MSGFLTINFO_ALLOWED_HIGHER<br />
&nbsp;&nbsp;&nbsp;&nbsp;$MSGFLTINFO_ALREADYALLOWED_FORWND<br />
&nbsp;&nbsp;&nbsp;&nbsp;$MSGFLTINFO_ALREADYDISALLOWED_FORWND<br />
&nbsp;&nbsp;&nbsp;&nbsp;$MSGFLTINFO_NONE<br />
(See&nbsp;MSDN for more information)</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>0 and sets the @error flag to non-zero, call <a href="_WinAPI_GetLastError.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetLastError()</a> to get extended code information.</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p>UIPI is a security feature that prevents messages from being received from a lower-integrity-level sender.<br />
You can use this function to allow specific messages to be delivered to a window even if the message originates from a process at a lower integrity level.<br />
<br />
Certain messages whose value is smaller than WM_USER are required to be passed through the filter, regardless of the filter setting. There will be no effect when you attempt to use this function to allow or block such messages.<br />
<br />
This function requires <strong>Windows Vista or later</strong>.<br />
</p>

<h2>Siehe auch</h2>
<p>Suche nach <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(ChangeWindowMessageFilterEx);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">ChangeWindowMessageFilterEx</a> in der MSDN Bibliothek.
</p>

</body>
</html>
