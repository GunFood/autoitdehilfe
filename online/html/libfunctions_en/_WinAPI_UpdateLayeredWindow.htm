<!DOCTYPE html>
<html>
<head>
<title>Function _WinAPI_UpdateLayeredWindow</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<div class="top"><h1>_WinAPI_UpdateLayeredWindow</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../libfunctions/_WinAPI_UpdateLayeredWindow.htm"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Updates the position, size, shape, content, and translucency of a layered window<br /></p>
<p class="codeheader">
#include &lt;WinAPISysWin.au3&gt;<br />
_WinAPI_UpdateLayeredWindow ( $hWnd, $hDestDC, $tPTDest, $tSize, $hSrcDC, $tPTSrce, $iRGB, $tBlend, $iFlags )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$hWnd</td>
<td style="width:85%">Handle to a layered window. A layered window is created by specifying $WS_EX_LAYERED when creating the window.</td>
</tr>
<tr>
<td>$hDestDC</td>
<td>Handle to a device context for the screen</td>
</tr>
<tr>
<td>$tPTDest</td>
<td>A $tagPOINT structure or a pointer to it that specifies the new screen position of the layered window.<br />
If the current position is not changing, this can be zero.</td>
</tr>
<tr>
<td>$tSize</td>
<td>A $tagSIZE structure or a pointer to it that specifies the new size of the layered window.<br />
If the size of the window is not changing, this can be 0.</td>
</tr>
<tr>
<td>$hSrcDC</td>
<td>Handle to a device context for the surface that defines the layered window.<br />
This handle can be obtained by calling the <a href="_WinAPI_CreateCompatibleDC.htm">_WinAPI_CreateCompatibleDC()</a> function.</td>
</tr>
<tr>
<td>$tPTSrce</td>
<td>A $tagPOINT structure or a pointer to it that specifies the location of the layer in the device context</td>
</tr>
<tr>
<td>$iRGB</td>
<td>The color key to be used when composing the layered window</td>
</tr>
<tr>
<td>$tBlend</td>
<td>A $tagBLENDFUNCTION structure or a pointer to it that specifies the transparency value to be used when composing the layered window.</td>
</tr>
<tr>
<td>$iFlags</td>
<td>This parameter can be one of the following values.<br />
&nbsp;&nbsp;&nbsp; $ULW_ALPHA - Use $tblend as the blend function<br />
&nbsp;&nbsp;&nbsp; $ULW_COLORKEY - Use $iRGB as the transparency color<br />
&nbsp;&nbsp;&nbsp; $ULW_OPAQUE - Draw an opaque layered window</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">True</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>False, call <a href="_WinAPI_GetLastError.htm">_WinAPI_GetLastError()</a> to get extended error information</td>
</tr>
</table>

<h2>Related</h2>
<p><a href="$tagBLENDFUNCTION.htm">$tagBLENDFUNCTION</a>, <a href="$tagPOINT.htm">$tagPOINT</a>, <a href="$tagSIZE.htm">$tagSIZE</a></p>

<h2>See Also</h2>
<p>Search <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(UpdateLayeredWindow);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">UpdateLayeredWindow</a> in MSDN  Library.
</p>

</body>
</html>
