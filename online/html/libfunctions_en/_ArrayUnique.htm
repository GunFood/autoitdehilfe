<!DOCTYPE html>
<html>
<head>
<title>Function _ArrayUnique</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<div class="top"><h1>_ArrayUnique</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../libfunctions/_ArrayUnique.htm"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Returns the Elements from a column of a 1D or 2D array, removing all duplicates<br /></p>
<p class="codeheader">
#include &lt;Array.au3&gt;<br />
_ArrayUnique ( Const ByRef $aArray [, $iColumn = 0 [, $iBase = 0 [, $iCase = 0 [, $iCount = $ARRAYUNIQUE_COUNT [, $iIntType = $ARRAYUNIQUE_AUTO]]]]] )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$aArray</td>
<td style="width:85%">The Array to use</td>
</tr>
<tr>
<td>$iColumn</td>
<td><strong>[optional]</strong> 0-based column to be used - default 0. (2D only)</td>
</tr>
<tr>
<td>$iBase</td>
<td><strong>[optional]</strong> The array is 0-based or 1-based. Default 0 : 0-based.</td>
</tr>
<tr>
<td>$iCase</td>
<td><strong>[optional]</strong> Flag to indicate if the operations should be case sensitive. Default 0 : not case sensitive.</td>
</tr>
<tr>
<td>$iCount</td>
<td><strong>[optional]</strong> Flag to determine if [0] element holds the count of returned items (default) - see Remarks for details.</td>
</tr>
<tr>
<td>$iIntType</td>
<td><strong>[optional]</strong> Flag to change function algorithm - see Remarks for details.</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">a 1-dimensional array containing only the unique elements of that Column.</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>sets the @error flag to non-zero.</td>
</tr>
<tr>
<td class="valign-top">@error:</td>
<td>1 - $aArray is not an array or has no elements to check.<br />
2&nbsp;- $aArray is not a 1D or 2D array<br />
3&nbsp;- Invalid $iBase or $iCase value<br />
4&nbsp;- Invalid $iCount value<br />
5&nbsp;- Invalid $iIntType value<br />
6&nbsp;- $iColumn ouside array bounds<br />
7&nbsp;- Mismatch of Int32 and Int64 items - requires $iIntType to be set</td>
</tr>
</table>

<h2>Remarks</h2>
<p>Returns an array containing the unique elements.<br />
<br />
By default $iCount is set to $ARRAYUNIQUE_COUNT (1) and a count is placed in the [0] element. Setting $iCount to $ARRAYUNIQUE_NOCOUNT (0) returns a list without a count.<br />
<br />
The function can use a fast algorithm as long as the elements to be examined do not contain Int64 values (e.g. 64 bit integers, handles, pointers) - if these values are present then the function must use a slower algorithm. Setting the $iIntType parameter alters function behaviour as follows:<br />
<br />
$ARRAYUNIQUE_AUTO (0) (Default)&nbsp;&nbsp;&nbsp; : If first element not an integer runs fast algorithm - returns error if Int64 elements are found.<br />
&nbsp;&nbsp;&nbsp; : If first element is integer sets relevant FORCE32/64 value.<br />
$ARRAYUNIQUE_FORCE32 (1) &nbsp;&nbsp;&nbsp; : Forces all integers to Int32, runs fast algorithm - returns error if Int64 values are found.<br />
$ARRAYUNIQUE_FORCE64 (2) &nbsp;&nbsp;&nbsp; : Forces all integers to Int64, runs slow algorithm - returns error if Int32 values are found.<br />
$ARRAYUNIQUE_MATCH (3) &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; : 0x00000123 and 0x0123 considered the same value, only first encountered returned - runs slow algorithm.<br />
$ARRAYUNIQUE_DISTINCT (4)&nbsp;&nbsp;&nbsp; : 0x00000123 and 0x0123 considered as distinct, both returned - runs slow algorithm.<br />
<br />
Using other than the default $ARRAYUNIQUE_AUTO setting is only required it is known or suspected that Int64 values will be examined. The requirement to use a slower algorithm when dealing with Int64 values is a limitation of the Scripting.Dictionary object used within the function, not of AutoIt itself.<br />
</p>

<h2>Related</h2>
<p><a href="_ArrayMax.htm">_ArrayMax</a>, <a href="_ArrayMin.htm">_ArrayMin</a></p>

<h2 class="bottom">Example</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Copied to clipboard");
}
}
</script>
<h3>Example 1</h3>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\_ArrayUnique.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">Copy to clipboard<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;Array.au3&gt;</span>

<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aArray</span><span class="S8">[</span><span class="S3">10</span><span class="S8">]</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S8">[</span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2</span><span class="S8">,</span><span class="S0"> </span><span class="S3">3</span><span class="S8">,</span><span class="S0"> </span><span class="S3">4</span><span class="S8">,</span><span class="S0"> </span><span class="S3">5</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><span class="S3">2</span><span class="S8">,</span><span class="S0"> </span><span class="S3">3</span><span class="S8">,</span><span class="S0"> </span><span class="S3">4</span><span class="S8">,</span><span class="S0"> </span><span class="S3">5</span><span class="S8">]</span><span class="S0"> </span><span class="S1">; Create a 1-dimensional array that contains duplicate values.</span>
<a class="codeSnippetLink" href="../libfunctions/_ArrayDisplay.htm"><span class="S15">_ArrayDisplay</span></a><span class="S8">(</span><span class="S9">$aArray</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"$aArray Initial"</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; Display the current array.</span>

<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aArrayUnique</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_ArrayUnique.htm"><span class="S15">_ArrayUnique</span></a><span class="S8">(</span><span class="S9">$aArray</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; Use default parameters to create a unique array.</span>
<a class="codeSnippetLink" href="../libfunctions/_ArrayDisplay.htm"><span class="S15">_ArrayDisplay</span></a><span class="S8">(</span><span class="S9">$aArrayUnique</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"$aArray Unique"</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; Display the unique array.</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
<h3>Example 2</h3>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\_ArrayUnique[2].au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext2\').innerText)">Copy to clipboard<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext2">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;Array.au3&gt;</span>

<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aArray</span><span class="S8">[</span><span class="S3">6</span><span class="S8">][</span><span class="S3">2</span><span class="S8">]</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S8">[[</span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"A"</span><span class="S8">],</span><span class="S0"> </span><span class="S8">[</span><span class="S3">2</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"B"</span><span class="S8">],</span><span class="S0"> </span><span class="S8">[</span><span class="S3">3</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"C"</span><span class="S8">],</span><span class="S0"> </span><span class="S8">[</span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"A"</span><span class="S8">],</span><span class="S0"> </span><span class="S8">[</span><span class="S3">2</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"B"</span><span class="S8">],</span><span class="S0"> </span><span class="S8">[</span><span class="S3">3</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"C"</span><span class="S8">]]</span>
<a class="codeSnippetLink" href="../libfunctions/_ArrayDisplay.htm"><span class="S15">_ArrayDisplay</span></a><span class="S8">(</span><span class="S9">$aArray</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"2D array"</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; Display the current array.</span>
<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aArrayUnique</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_ArrayUnique.htm"><span class="S15">_ArrayUnique</span></a><span class="S8">(</span><span class="S9">$aArray</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; Use default parameters to create a unique array of the first column.</span>
<a class="codeSnippetLink" href="../libfunctions/_ArrayDisplay.htm"><span class="S15">_ArrayDisplay</span></a><span class="S8">(</span><span class="S9">$aArrayUnique</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"$aArray first column"</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; Display the unique array.</span>

<span class="S9">$aArrayUnique</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_ArrayUnique.htm"><span class="S15">_ArrayUnique</span></a><span class="S8">(</span><span class="S9">$aArray</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; Create a unique array of the second column.</span>
<a class="codeSnippetLink" href="../libfunctions/_ArrayDisplay.htm"><span class="S15">_ArrayDisplay</span></a><span class="S8">(</span><span class="S9">$aArrayUnique</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"$aArray second column"</span><span class="S8">)</span><span class="S0"> </span><span class="S1">; Display the unique array.</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
