<!DOCTYPE html>
<html>
<head>
  <title>User Defined Functions</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1>Conversion user defined functions Reference</h1>
<p>Below is a complete list of the user defined functions available in AutoIt.
Click on a user defined function name for a detailed description.</p>
<p>When using them you need to add a <strong>#include &lt;WinAPIConv.au3&gt;</strong>.
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">User Defined Function</th>
  <th style="width:75%">Description</th>
</tr>
<tr>
<td><a href="_WinAPI_CharToOem.htm">_WinAPI_CharToOem</a></td>
<td>Converts a string into the OEM-defined character set<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ClientToScreen.htm">_WinAPI_ClientToScreen</a></td>
<td>Converts the client coordinates of a specified point to screen coordinates<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DWordToFloat.htm">_WinAPI_DWordToFloat</a></td>
<td>Converts a value of type DWORD to a value of type FLOAT<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DWordToInt.htm">_WinAPI_DWordToInt</a></td>
<td>Converts a value of type DWORD to a value of type INT<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FloatToDWord.htm">_WinAPI_FloatToDWord</a></td>
<td>Converts a value of type FLOAT to a value of type DWORD<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FloatToInt.htm">_WinAPI_FloatToInt</a></td>
<td>Returns a 4 byte float as an integer value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetXYFromPoint.htm">_WinAPI_GetXYFromPoint</a></td>
<td>Returns the X/Y values from a $tagPOINT structure<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GUIDFromString.htm">_WinAPI_GUIDFromString</a></td>
<td>Converts a string GUID to binary form<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GUIDFromStringEx.htm">_WinAPI_GUIDFromStringEx</a></td>
<td>Converts a string GUID to binary form<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_HashData.htm">_WinAPI_HashData</a></td>
<td>Hashes a memory block<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_HashString.htm">_WinAPI_HashString</a></td>
<td>Hashes a string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_HiByte.htm">_WinAPI_HiByte</a></td>
<td>Returns the high BYTE of a 16-bit (2 bytes) value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_HiDWord.htm">_WinAPI_HiDWord</a></td>
<td>Returns the high DWORD of a 64-bit (8 bytes) value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_HiWord.htm">_WinAPI_HiWord</a></td>
<td>Returns the high word of a longword value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IntToDWord.htm">_WinAPI_IntToDWord</a></td>
<td>Converts a value of type INT to a value of type DWORD<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IntToFloat.htm">_WinAPI_IntToFloat</a></td>
<td>Returns a 4 byte integer as a float value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LoByte.htm">_WinAPI_LoByte</a></td>
<td>Returns the low BYTE of a 16-bit (2 bytes) value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LoDWord.htm">_WinAPI_LoDWord</a></td>
<td>Returns the low DWORD of a 64-bit (8 bytes) value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LongMid.htm">_WinAPI_LongMid</a></td>
<td>Extracts a number of bits from a DWORD (32-bit) value<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_LoWord.htm">_WinAPI_LoWord</a></td>
<td>Returns the low word of a longword<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MAKELANGID.htm">_WinAPI_MAKELANGID</a></td>
<td>Construct language id from a primary language id and a sublanguage id<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MAKELCID.htm">_WinAPI_MAKELCID</a></td>
<td>Construct locale id from a language id and a sort id<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MakeLong.htm">_WinAPI_MakeLong</a></td>
<td>Returns a long int value from two int values<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MakeQWord.htm">_WinAPI_MakeQWord</a></td>
<td>Returns a QWORD value from two int values<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MakeWord.htm">_WinAPI_MakeWord</a></td>
<td>Returns a WORD (16-bit) value from two BYTE (8-bit) values<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MultiByteToWideChar.htm">_WinAPI_MultiByteToWideChar</a></td>
<td>Maps a character string to a wide-character (Unicode) string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_MultiByteToWideCharEx.htm">_WinAPI_MultiByteToWideCharEx</a></td>
<td>Maps a character string to a wide-character (Unicode) string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_OemToChar.htm">_WinAPI_OemToChar</a></td>
<td>Converts a string from the OEM-defined character set into either an ANSI string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_PointFromRect.htm">_WinAPI_PointFromRect</a></td>
<td>Returns the top/left coordinates of a $tagRECT as a $tagPOINT structure<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_PrimaryLangId.htm">_WinAPI_PrimaryLangId</a></td>
<td>Extract primary language id from a language id<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ScreenToClient.htm">_WinAPI_ScreenToClient</a></td>
<td>Converts screen coordinates of a specified point on the screen to client coordinates<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_ShortToWord.htm">_WinAPI_ShortToWord</a></td>
<td>Converts a value of type SHORT to a value of type WORD<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_StrFormatByteSize.htm">_WinAPI_StrFormatByteSize</a></td>
<td>Converts a numeric value into a string that represents the number expressed as a size value in bytes, kilobytes, megabytes, or gigabytes<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_StrFormatByteSizeEx.htm">_WinAPI_StrFormatByteSizeEx</a></td>
<td>Converts a numeric value into a string that represents the number expressed as separated groups of digits to the left of the decimal<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_StrFormatKBSize.htm">_WinAPI_StrFormatKBSize</a></td>
<td>Converts a numeric value into a string that represents the number expressed as a size value in kilobytes<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_StrFromTimeInterval.htm">_WinAPI_StrFromTimeInterval</a></td>
<td>Converts a time interval to a string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_StringFromGUID.htm">_WinAPI_StringFromGUID</a></td>
<td>Converts a binary GUID to string form<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SubLangId.htm">_WinAPI_SubLangId</a></td>
<td>Extract sublanguage id from a language id<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SwapDWord.htm">_WinAPI_SwapDWord</a></td>
<td>Converts a ULONG from little-endian to big-endian, and vice versa<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SwapQWord.htm">_WinAPI_SwapQWord</a></td>
<td>Converts a ULONGLONG from little-endian to big-endian, and vice versa<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SwapWord.htm">_WinAPI_SwapWord</a></td>
<td>Converts a USHORT from little-endian to big-endian, and vice versa<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WideCharToMultiByte.htm">_WinAPI_WideCharToMultiByte</a></td>
<td>Converts a UTF-16 (wide character) string to a multibyte string<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WordToShort.htm">_WinAPI_WordToShort</a></td>
<td>Converts a value of type WORD to a value of type SHORT<br /></td>
</tr>
</table>

</body>
