<!DOCTYPE html>
<html>
<head>
<title>Funktion _WinAPI_DuplicateTokenEx</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<h1 style="float:left; margin:15px 0 0 0; padding:0 0 0 0;">_WinAPI_DuplicateTokenEx</h1><br />
<a href="../libfunctions_en/_WinAPI_DuplicateTokenEx.htm"><img src="../images/Flagge_en.gif" height="29" width="36" border=0 hspace=10 style="float:right"/></a><br />
<div style="display:block; text-align:right;">Beschreibung anzeigen in</div><br />
<p style="margin:2px 0 0 0;" class="funcdesc">Erstellt einen neuen Prim&auml;r- oder Immitierungszugangstoken welcher einen bereits existieren Token dubliziert<br /></p>
<p class="codeheader">
#include &lt;WinAPIProc.au3&gt;<br />
_WinAPI_DuplicateTokenEx ( $hToken, $iAccess, $iLevel [, $iType = 1 [, $tSecurity = 0]] )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$hToken</td>
<td style="width:85%">Das Handle zu einem Zugangstoken welcher mit dem $TOKEN_DUPLICATE Zugang ge&ouml;ffnet wurde.</td>
</tr>
<tr>
<td>$iAccess</td>
<td>Die angeforderten Zugriffsrecht f&uuml;r einen neuen Token. Um die selben Zugangsrechte wie f&uuml;r den bereits bestehenden Token anzuforden muss $iAccess 0 sein.<br />
Um alle Zugangsrechte, welche f&uuml;r den Aufrufer g&uuml;ltig sind, zu fordern, sollte man $TOKEN_ALL_ACCESS verwenden.</td>
</tr>
<tr>
<td>$iLevel</td>
<td>Die Sicherheitsimmitationslevels.<br />
&nbsp;&nbsp;&nbsp; $SECURITYANONYMOUS<br />
&nbsp;&nbsp;&nbsp; $SECURITYIDENTIFICATION<br />
&nbsp;&nbsp;&nbsp; $SECURITYIMPERSONATION<br />
&nbsp;&nbsp;&nbsp; $SECURITYDELEGATION</td>
</tr>
<tr>
<td>$iType</td>
<td><strong>[optional]</strong> Der Tokentyp.<br />
&nbsp;&nbsp;&nbsp; $TOKENPRIMARY<br />
&nbsp;&nbsp;&nbsp; $TOKENIMPERSONATION</td>
</tr>
<tr>
<td>$tSecurity</td>
<td><strong>[optional]</strong> Die $tagSECURITY_ATTRIBUTES Struktur gibt einen Sicherheitsdeskriptor f&uuml;r einen neuen Token an und gibt ab ob Kindprozesse diesen Token erben k&ouml;nnen.<br />
Wenn dieser Parameter 0 ist (Standard), dann bekommt der Token einen Standardsicherheitsdeskriptor und das Handle kann nicht vererbt werden.<br />
Wenn der Sicherheitsdeskriptor eine Systemzugangskontrollliste (system access control list) beinhaltet, so bekommt der Token den $ACCESS_SYSTEM_SECURITY Zugang auch wenn dieser nicht angefordert wurde.</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Erfolg:</td>
<td style="width:90%">Das Handle zu dem neuen Token.</td>
</tr>
<tr>
<td class="valign-top">Fehler:</td>
<td>0. Ruft <a href="_WinAPI_GetLastError.htm">_WinAPI_GetLastError()</a> auf, um erweiterte Fehlerinformationen zu erhalten.</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p>Wenn man mit dem neuen Token fertig ist, so sollte man die <a href="_WinAPI_CloseHandle.htm">_WinAPI_CloseHandle()</a> Funktion aufrufen um das Handle des Tokens zu schlie&szlig;en.<br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="_WinAPI_CloseHandle.htm">_WinAPI_CloseHandle</a></p>

<h2>Siehe auch</h2>
<p>Suche nach <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(DuplicateTokenEx);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">DuplicateTokenEx</a> in der MSDN Bibliothek.
</p>

</body>
</html>
