<!DOCTYPE html>
<html>
<head>
  <title>Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<div class="top"><h1>Prozesse Funktionsreferenz</h1><div>
<p>Es folgt eine Liste der Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\functions\DllCall.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllCall</a></td>
<td>Ruft eine Funktion in einer DLL dynamisch auf.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllCallAddress.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllCallAddress</a></td>
<td>Ruft eine Funktion an einer bestimmten Speicheradresse dynamisch auf.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllCallbackFree.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllCallbackFree</a></td>
<td>Gibt ein zuvor mit DllCallbackRegister erzeugtes Handle wieder frei.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllCallbackGetPtr.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllCallbackGetPtr</a></td>
<td>Gibt einen Zeiger auf eine Callback Funktion zur&uuml;ck die an Win32 API &uuml;bergeben werden kann.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllCallbackRegister.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllCallbackRegister</a></td>
<td>Erzeugt eine benutzerdefinierte Callback- (R&uuml;ckruf-)funktion.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllClose.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllClose</a></td>
<td>Schlie&szlig;t eine zuvor ge&ouml;ffnete DLL.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllOpen.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllOpen</a></td>
<td>L&auml;dt eine DLL f&uuml;r den Gebrauch in DllCall.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllStructCreate.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllStructCreate</a></td>
<td>Erzeugt eine Struktur im C/C++-Stil die mit DllCall genutzt werden kann.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllStructGetData.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllStructGetData</a></td>
<td>Gibt die Daten eines Elements der Struktur zur&uuml;ck.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllStructGetPtr.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllStructGetPtr</a></td>
<td>Gibt den Zeiger auf die Struktur oder ein Element in der Struktur zur&uuml;ck.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllStructGetSize.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllStructGetSize</a></td>
<td>Gibt die Gr&ouml;sse der Struktur in Bytes zur&uuml;ck.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\DllStructSetData.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">DllStructSetData</a></td>
<td>Setzt Daten in einem Element der Struktur.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ProcessClose.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ProcessClose</a></td>
<td>Beendet den genannten Prozess.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ProcessExists.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ProcessExists</a></td>
<td>&Uuml;berpr&uuml;ft, ob ein bestimmter Prozess existiert.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ProcessGetStats.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ProcessGetStats</a></td>
<td>Gibt ein Array mit Speicher- oder IO-Infos eines laufenden Prozesses zur&uuml;ck.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ProcessList.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ProcessList</a></td>
<td>Gibt ein Array zur&uuml;ck, das die aktuell laufenden Prozesse auflistet (Namen und PIDs).<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ProcessSetPriority.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ProcessSetPriority</a></td>
<td>&Auml;ndert die Priorit&auml;t eines Prozesses.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ProcessWait.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ProcessWait</a></td>
<td>Pausiert das Skript, bis der genannte Prozess existiert.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ProcessWaitClose.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ProcessWaitClose</a></td>
<td>Pausiert das Skript, bis der genannte Prozess nicht mehr existiert.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\Run.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">Run</a></td>
<td>Startet ein externes Programm.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\RunAs.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">RunAs</a></td>
<td>Startet ein externes Programm im Kontext eines anderen Benutzers.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\RunAsWait.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">RunAsWait</a></td>
<td>Startet ein externes Programm im Kontext eines anderen Benutzers und pausiert das Skript, bis das Programm beendet wurde.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\RunWait.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">RunWait</a></td>
<td>Startet ein externes Programm und pausiert die Ausf&uuml;hrung des Autoit-Skripts, bis das externe Programm beendet ist.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ShellExecute.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ShellExecute</a></td>
<td>F&uuml;hrt ein externes Programm unter Verwendung der ShellExecute-API aus.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\ShellExecuteWait.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">ShellExecuteWait</a></td>
<td>F&uuml;hrt ein externes Programm unter Verwendung der ShellExecute API aus und pausiert die Skriptausf&uuml;hrung, bis das Programm beendet wird.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\Shutdown.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">Shutdown</a></td>
<td>F&auml;hrt das System herunter.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\StderrRead.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StderrRead</a></td>
<td>Liest eine Anzahl von Zeichen aus einem STDERR-Stream eines zuvor gestarteten Child-Prozesses ein.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\StdinWrite.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StdinWrite</a></td>
<td>Schreibt eine Anzahl von Zeichen in den STDIN-Stream eines zuvor gestarteten Child-Prozesses.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\StdioClose.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StdioClose</a></td>
<td>Gibt alle von einem Prozess, der zuvor mit STDIO-Umleitung gestartet wurde, belegten Ressourcen frei.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\functions\StdoutRead.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">StdoutRead</a></td>
<td>Liest vom STDOUT-Stream eines zuvor gestarteten Child-Prozesses ein.<br /></td>
</tr>
</table>

</body>
