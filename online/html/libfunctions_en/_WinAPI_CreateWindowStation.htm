<!DOCTYPE html>
<html>
<head>
<title>Function _WinAPI_CreateWindowStation</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<div class="top"><h1>_WinAPI_CreateWindowStation</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../libfunctions/_WinAPI_CreateWindowStation.htm"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Creates a window station object, associates it with the calling process, and assigns it to the current session<br /></p>
<p class="codeheader">
#include &lt;WinAPISys.au3&gt;<br />
_WinAPI_CreateWindowStation ( [$sName = '' [, $iAccess = 0 [, $iFlags = 0 [, $tSecurity = 0]]]] )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$sName</td>
<td style="width:85%"><strong>[optional]</strong> The name of the window station to be created. Window station names are case-insensitive and cannot contain backslash characters (\).<br />
Only members of the Administrators group are allowed to specify a name.<br />
If this parameter is empty string (Default), the system forms a window station name using the logon session identifier for the calling process.</td>
</tr>
<tr>
<td>$iAccess</td>
<td><strong>[optional]</strong> The type of access the returned handle has to the window station. This parameter can be one or more of the following values:<br />
&nbsp;&nbsp;&nbsp; $WINSTA_ALL_ACCESS<br />
&nbsp;&nbsp;&nbsp; $WINSTA_ACCESSCLIPBOARD<br />
&nbsp;&nbsp;&nbsp; $WINSTA_ACCESSGLOBALATOMS<br />
&nbsp;&nbsp;&nbsp; $WINSTA_CREATEDESKTOP<br />
&nbsp;&nbsp;&nbsp; $WINSTA_ENUMDESKTOPS<br />
&nbsp;&nbsp;&nbsp; $WINSTA_ENUMERATE<br />
&nbsp;&nbsp;&nbsp; $WINSTA_EXITWINDOWS<br />
&nbsp;&nbsp;&nbsp; $WINSTA_READATTRIBUTES<br />
&nbsp;&nbsp;&nbsp; $WINSTA_READSCREEN<br />
&nbsp;&nbsp;&nbsp; $WINSTA_WRITEATTRIBUTES</td>
</tr>
<tr>
<td>$iFlags</td>
<td><strong>[optional]</strong> The optional flags. It can be zero (Default) or the following value:<br />
&nbsp;&nbsp;&nbsp; $CWF_CREATE_ONLY</td>
</tr>
<tr>
<td>$tSecurity</td>
<td><strong>[optional]</strong> $tagSECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited by child processes. If this parameter is 0 (Default), the handle cannot be inherited.</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">Handle to the newly created window station. If the specified window station already exists, the function succeeds and returns a handle to the existing window station.</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>0, call <a href="_WinAPI_GetLastError.htm">_WinAPI_GetLastError()</a> to get extended error information.</td>
</tr>
</table>

<h2>Remarks</h2>
<p>After you are done with the handle, you must call <a href="_WinAPI_CloseWindowStation.htm">_WinAPI_CloseWindowStation()</a> to free the handle.<br />
</p>

<h2>Related</h2>
<p><a href="_WinAPI_CloseWindowStation.htm">_WinAPI_CloseWindowStation</a></p>

<h2>See Also</h2>
<p>Search <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(CreateWindowStation);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">CreateWindowStation</a> in MSDN  Library.
</p>

</body>
</html>
