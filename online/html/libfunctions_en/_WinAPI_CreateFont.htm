<!DOCTYPE html>
<html>
<head>
<title>Function _WinAPI_CreateFont</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<div class="top"><h1>_WinAPI_CreateFont</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../libfunctions/_WinAPI_CreateFont.htm"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Creates a logical font with the specified characteristics<br /></p>
<p class="codeheader">
#include &lt;WinAPIGdi.au3&gt;<br />
_WinAPI_CreateFont ( $iHeight, $iWidth [, $iEscape = 0 [, $iOrientn = 0 [, $iWeight = $FW_NORMAL [, $bItalic = False [, $bUnderline = False [, $bStrikeout = False [, $iCharset = $DEFAULT_CHARSET [, $iOutputPrec = $OUT_DEFAULT_PRECIS [, $iClipPrec = $CLIP_DEFAULT_PRECIS [, $iQuality = $DEFAULT_QUALITY [, $iPitch = 0 [, $sFace = 'Arial']]]]]]]]]]]] )<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">$iHeight</td>
<td style="width:85%">height of font</td>
</tr>
<tr>
<td>$iWidth</td>
<td>average character width</td>
</tr>
<tr>
<td>$iEscape</td>
<td><strong>[optional]</strong> angle of escapement</td>
</tr>
<tr>
<td>$iOrientn</td>
<td><strong>[optional]</strong> base-line orientation angle</td>
</tr>
<tr>
<td>$iWeight</td>
<td><strong>[optional]</strong> font weight, The following values are defined for convenience:<br />
$FW_DONTCARE - 0<br />
$FW_THIN - 100<br />
$FW_EXTRALIGHT - 200<br />
$FW_LIGHT - 300<br />
$FW_NORMAL - 400<br />
$FW_MEDIUM - 500<br />
$FW_SEMIBOLD - 600<br />
$FW_BOLD - 700<br />
$FW_EXTRABOLD - 800<br />
$FW_HEAVY - 900</td>
</tr>
<tr>
<td>$bItalic</td>
<td><strong>[optional]</strong> italic attribute option</td>
</tr>
<tr>
<td>$bUnderline</td>
<td><strong>[optional]</strong> underline attribute option</td>
</tr>
<tr>
<td>$bStrikeout</td>
<td><strong>[optional]</strong> strikeout attribute option</td>
</tr>
<tr>
<td>$iCharset</td>
<td><strong>[optional]</strong> Specifies the character set. The following values are predefined:<br />
$ANSI_CHARSET - 0<br />
$BALTIC_CHARSET - 186<br />
$CHINESEBIG5_CHARSET - 136<br />
$DEFAULT_CHARSET - 1<br />
$EASTEUROPE_CHARSET - 238<br />
$GB2312_CHARSET - 134<br />
$GREEK_CHARSET - 161<br />
$HANGEUL_CHARSET - 129<br />
$MAC_CHARSET - 77<br />
$OEM_CHARSET - 255<br />
$RUSSIAN_CHARSET - 204<br />
$SHIFTJIS_CHARSET - 128<br />
$SYMBOL_CHARSET - 2<br />
$TURKISH_CHARSET - 162<br />
$VIETNAMESE_CHARSET - 163</td>
</tr>
<tr>
<td>$iOutputPrec</td>
<td><strong>[optional]</strong> Specifies the output precision, It can be one of the following values:<br />
$OUT_CHARACTER_PRECIS - Not used<br />
$OUT_DEFAULT_PRECIS - Specifies the default font mapper behavior<br />
$OUT_DEVICE_PRECIS - Instructs the font mapper to choose a Device font when the system contains multiple fonts with the same name<br />
$OUT_OUTLINE_PRECIS - This value instructs the font mapper to choose from TrueType and other outline-based fonts<br />
$OUT_PS_ONLY_PRECIS - Instructs the font mapper to choose from only PostScript fonts.<br />
If there are no PostScript fonts installed in the system, the font mapper returns to default behavior<br />
$OUT_RASTER_PRECIS - Instructs the font mapper to choose a raster font when the system contains multiple fonts with the same name<br />
$OUT_STRING_PRECIS - This value is not used by the font mapper, but it is returned when raster fonts are enumerated<br />
$OUT_STROKE_PRECIS - This value is not used by the font mapper, but it is returned when TrueType, other outline-based fonts, and vector fonts are enumerated<br />
$OUT_TT_ONLY_PRECIS - Instructs the font mapper to choose from only TrueType fonts. If there are no TrueType fonts installed in the system, the font mapper returns to default behavior<br />
$OUT_TT_PRECIS - Instructs the font mapper to choose a TrueType font when the system contains multiple fonts with the same name</td>
</tr>
<tr>
<td>$iClipPrec</td>
<td><strong>[optional]</strong> Specifies the clipping precision, It can be one or more of the following values:<br />
$CLIP_CHARACTER_PRECIS - Not used<br />
$CLIP_DEFAULT_PRECIS - Specifies default clipping behavior<br />
$CLIP_EMBEDDED - You must specify this flag to use an embedded read-only font<br />
$CLIP_LH_ANGLES - When this value is used, the rotation for all fonts depends on whether the orientation of the coordinate system is left-handed or right-handed.<br />
If not used, device fonts always rotate counterclockwise, but the rotation of other fonts is dependent on the orientation of the coordinate system.<br />
$CLIP_MASK - Not used<br />
$CLIP_STROKE_PRECIS - Not used by the font mapper, but is returned when raster, vector, or TrueType fonts are enumerated<br />
For compatibility, this value is always returned when enumerating fonts<br />
$CLIP_TT_ALWAYS - Not used</td>
</tr>
<tr>
<td>$iQuality</td>
<td><strong>[optional]</strong> Specifies the output quality, It can be one of the following values:<br />
$ANTIALIASED_QUALITY - Font is antialiased, or smoothed, if the font supports it and the size of the font is not too small or too large.<br />
In addition, you must select a TrueType font into a screen DC prior to using it in a DIBSection, otherwise antialiasing does not happen<br />
$DEFAULT_QUALITY - Appearance of the font does not matter<br />
$DRAFT_QUALITY - Appearance of the font is less important than when the PROOF_QUALITY value is used.<br />
For GDI raster fonts, scaling is enabled, which means that more font sizes are available, but the quality may be lower.<br />
Bold, italic, underline, and strikeout fonts are synthesized, if necessary<br />
$NONANTIALIASED_QUALITY - Font is never antialiased, that is, font smoothing is not done<br />
$PROOF_QUALITY - Character quality of the font is more important than exact matching of the logical-font attributes.<br />
For GDI raster fonts, scaling is disabled and the font closest in size is chosen.<br />
Although the chosen font size may not be mapped exactly when PROOF_QUALITY is used, the quality of the font is high and there is no distortion of appearance.<br />
Bold, italic, underline, and strikeout fonts are synthesized, if necessary</td>
</tr>
<tr>
<td>$iPitch</td>
<td><strong>[optional]</strong> Specifies the pitch and family of the font. The two low-order bits specify the pitch of the font and can be one of the following values:<br />
$DEFAULT_PITCH, $FIXED_PITCH, $VARIABLE_PITCH<br />
The four high-order bits specify the font family and can be one of the following values:<br />
$FF_DECORATIVE - Novelty fonts. Old English is an example<br />
$FF_DONTCARE - Use default font<br />
$FF_MODERN - Fonts with constant stroke width, with or without serifs. Pica, Elite, and Courier New are examples<br />
$FF_ROMAN - Fonts with variable stroke width and with serifs. MS Serif is an example<br />
$FF_SCRIPT - Fonts designed to look like handwriting. Script and Cursive are examples<br />
$FF_SWISS - Fonts with variable stroke width and without serifs. MS Sans Serif is an example</td>
</tr>
<tr>
<td>$sFace</td>
<td><strong>[optional]</strong> typeface name</td>
</tr>
</table>

<h2>Return Value</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">The handle to a logical font</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>0</td>
</tr>
</table>

<h2>Remarks</h2>
<p>When you no longer need the font, call the <a href="_WinAPI_DeleteObject.htm">_WinAPI_DeleteObject()</a> function to delete it<br />
<br />
Above constants require #include &lt;FontConstants.au3&gt;<br />
</p>

<h2>See Also</h2>
<p>Search <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(CreateFont);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">CreateFont</a> in MSDN  Library.
</p>

<h2 class="bottom">Example</h2>
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
function copyToClipboard(section) {
if (window.clipboardData && clipboardData.setData) {
clipboardData.setData("text", section + "\r\n");
alert("Copied to clipboard");
}
}
</script>
<div class="codeSnippetContainer">
	<div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i)) {
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\_WinAPI_SetTextColor.au3,"></object>');
document.write('<\/div>');
}
</script>
</div>

<div class="codeSnippetContainerCodeContainer">
<div class="codeSnippetToolBar">
<div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">Copy to clipboard<\/a>');
</script>
</div>
</div>
<div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
<pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;FontConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WinAPIGdi.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WinAPIGdiDC.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WinAPIHObj.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WinAPISysWin.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7">&lt;WindowsConstants.au3&gt;</span>

<a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Global</span></a><span class="S0"> </span><span class="S9">$g_tRECT</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$g_hFont</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$g_hOldFont</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$g_hDC</span>

<a class="codeSnippetLink" href="../functions/HotKeySet.htm"><span class="S4">HotKeySet</span></a><span class="S8">(</span><span class="S7">"</span><span class="S10">{ESC}</span><span class="S7">"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"_Exit"</span><span class="S8">)</span>

<span class="S9">$g_tRECT</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/DllStructCreate.htm"><span class="S4">DllStructCreate</span></a><span class="S8">(</span><a class="codeSnippetLink" href="$tagRect.htm"><span class="S9">$tagRect</span></a><span class="S8">)</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$g_tRECT</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Left"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">5</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$g_tRECT</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Top"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">5</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$g_tRECT</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Right"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">250</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../functions/DllStructSetData.htm"><span class="S4">DllStructSetData</span></a><span class="S8">(</span><span class="S9">$g_tRECT</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Bottom"</span><span class="S8">,</span><span class="S0"> </span><span class="S3">50</span><span class="S8">)</span>

<span class="S9">$g_hDC</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_GetDC.htm"><span class="S15">_WinAPI_GetDC</span></a><span class="S8">(</span><span class="S3">0</span><span class="S8">)</span>
<span class="S9">$g_hFont</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_CreateFont.htm"><span class="S15">_WinAPI_CreateFont</span></a><span class="S8">(</span><span class="S3">50</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">400</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Booleans.htm"><span class="S5">False</span></a><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Booleans.htm"><span class="S5">False</span></a><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Booleans.htm"><span class="S5">False</span></a><span class="S8">,</span><span class="S0"> </span><span class="S9">$DEFAULT_CHARSET</span><span class="S8">,</span><span class="S0"> </span><span class="S8">_</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S9">$OUT_DEFAULT_PRECIS</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$CLIP_DEFAULT_PRECIS</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$DEFAULT_QUALITY</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S7">'Arial'</span><span class="S8">)</span>
<span class="S9">$g_hOldFont</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_SelectObject.htm"><span class="S15">_WinAPI_SelectObject</span></a><span class="S8">(</span><span class="S9">$g_hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$g_hFont</span><span class="S8">)</span>

<a class="codeSnippetLink" href="../libfunctions/_WinAPI_SetTextColor.htm"><span class="S15">_WinAPI_SetTextColor</span></a><span class="S8">(</span><span class="S9">$g_hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0x0000FF</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../libfunctions/_WinAPI_SetBkColor.htm"><span class="S15">_WinAPI_SetBkColor</span></a><span class="S8">(</span><span class="S9">$g_hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0x000000</span><span class="S8">)</span>
<span class="S1">; comment next line to get black background instead of transparent one</span>
<a class="codeSnippetLink" href="../libfunctions/_WinAPI_SetBkMode.htm"><span class="S15">_WinAPI_SetBkMode</span></a><span class="S8">(</span><span class="S9">$g_hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$TRANSPARENT</span><span class="S8">)</span>

<a class="codeSnippetLink" href="../keywords/While.htm"><span class="S5">While</span></a><span class="S0"> </span><span class="S3">1</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_DrawText.htm"><span class="S15">_WinAPI_DrawText</span></a><span class="S8">(</span><span class="S9">$g_hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Hello world!"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$g_tRECT</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$DT_CENTER</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../functions/Sleep.htm"><span class="S4">Sleep</span></a><span class="S8">(</span><span class="S3">100</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/While.htm"><span class="S5">WEnd</span></a>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> _Exit</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_SelectObject.htm"><span class="S15">_WinAPI_SelectObject</span></a><span class="S8">(</span><span class="S9">$g_hDC</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$g_hOldFont</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_DeleteObject.htm"><span class="S15">_WinAPI_DeleteObject</span></a><span class="S8">(</span><span class="S9">$g_hFont</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_ReleaseDC.htm"><span class="S15">_WinAPI_ReleaseDC</span></a><span class="S8">(</span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$g_hDC</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../libfunctions/_WinAPI_InvalidateRect.htm"><span class="S15">_WinAPI_InvalidateRect</span></a><span class="S8">(</span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S9">$g_tRECT</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">0</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><a class="codeSnippetLink" href="../keywords/Exit.htm"><span class="S5">Exit</span></a>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;_Exit</span>
<span class="S0"></span></span>
</pre>
</div>
</div>
</div>
</body>
</html>
