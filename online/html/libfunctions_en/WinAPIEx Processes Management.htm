<!DOCTYPE html>
<html>
<head>
  <title>User Defined Functions</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1>Processes user defined functions Reference</h1>
<p>Below is a complete list of the user defined functions available in AutoIt.
Click on a user defined function name for a detailed description.</p>
<p>When using them you need to add a <strong>#include &lt;WinAPIProc.au3&gt;</strong>.
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">User Defined Function</th>
  <th style="width:75%">Description</th>
</tr>
<tr>
<td><a href="_WinAPI_AdjustTokenPrivileges.htm">_WinAPI_AdjustTokenPrivileges</a></td>
<td>Enables or disables privileges in the specified access token<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_AssignProcessToJobObject.htm">_WinAPI_AssignProcessToJobObject</a></td>
<td>Assigns a process to an existing job object<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_AttachConsole.htm">_WinAPI_AttachConsole</a></td>
<td>Attaches the calling process to the console of the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_AttachThreadInput.htm">_WinAPI_AttachThreadInput</a></td>
<td>Attaches the input processing mechanism of one thread to that of another thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateJobObject.htm">_WinAPI_CreateJobObject</a></td>
<td>Creates or opens a job object<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateProcess.htm">_WinAPI_CreateProcess</a></td>
<td>Creates a new process and its primary thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_CreateProcessWithToken.htm">_WinAPI_CreateProcessWithToken</a></td>
<td>Creates a new process and its primary thread in the security context of the specified token<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_DuplicateTokenEx.htm">_WinAPI_DuplicateTokenEx</a></td>
<td>Creates a new primary or impersonation access token that duplicates an existing token<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EmptyWorkingSet.htm">_WinAPI_EmptyWorkingSet</a></td>
<td>Removes as many pages as possible from the working set of the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumChildProcess.htm">_WinAPI_EnumChildProcess</a></td>
<td>Enumerates a child processes that belong to the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumDeviceDrivers.htm">_WinAPI_EnumDeviceDrivers</a></td>
<td>Retrieves the load address for each device driver in the system<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumProcessHandles.htm">_WinAPI_EnumProcessHandles</a></td>
<td>Enumerates a handles that belong to the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumProcessModules.htm">_WinAPI_EnumProcessModules</a></td>
<td>Retrieves a handle and name for each module in the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumProcessThreads.htm">_WinAPI_EnumProcessThreads</a></td>
<td>Enumerates a threads that belong to the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_EnumProcessWindows.htm">_WinAPI_EnumProcessWindows</a></td>
<td>Enumerates a windows that belong to the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_FatalAppExit.htm">_WinAPI_FatalAppExit</a></td>
<td>Displays a message box and terminates the application<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetCurrentProcessExplicitAppUserModelID.htm">_WinAPI_GetCurrentProcessExplicitAppUserModelID</a></td>
<td>Retrieves the application-defined, explicit Application User Model ID for the current process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetCurrentProcessID.htm">_WinAPI_GetCurrentProcessID</a></td>
<td>Returns the process identifier of the calling process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetCurrentThread.htm">_WinAPI_GetCurrentThread</a></td>
<td>Retrieves a pseudo handle for the calling thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetCurrentThreadId.htm">_WinAPI_GetCurrentThreadId</a></td>
<td>Returns the thread identifier of the calling thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetDeviceDriverBaseName.htm">_WinAPI_GetDeviceDriverBaseName</a></td>
<td>Retrieves the base name of the specified device driver<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetDeviceDriverFileName.htm">_WinAPI_GetDeviceDriverFileName</a></td>
<td>Retrieves the path available for the specified device driver<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetExitCodeProcess.htm">_WinAPI_GetExitCodeProcess</a></td>
<td>Retrieves the termination status of the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetGuiResources.htm">_WinAPI_GetGuiResources</a></td>
<td>Retrieves the count of handles to graphical user interface (GUI) objects in use by the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetModuleFileNameEx.htm">_WinAPI_GetModuleFileNameEx</a></td>
<td>Retrieves the fully-qualified path for the file containing the specified module<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetModuleInformation.htm">_WinAPI_GetModuleInformation</a></td>
<td>Retrieves information about the specified module<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetPriorityClass.htm">_WinAPI_GetPriorityClass</a></td>
<td>Retrieves the priority class for the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessAffinityMask.htm">_WinAPI_GetProcessAffinityMask</a></td>
<td>Obtains the affinity masks for the process and the system<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessCommandLine.htm">_WinAPI_GetProcessCommandLine</a></td>
<td>Retrieves the command-line string for the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessFileName.htm">_WinAPI_GetProcessFileName</a></td>
<td>Retrieves the fully-qualified path of the executable file for the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessHandleCount.htm">_WinAPI_GetProcessHandleCount</a></td>
<td>Retrieves the number of open handles that belong to the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessID.htm">_WinAPI_GetProcessID</a></td>
<td>Retrieves the process identifier of the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessIoCounters.htm">_WinAPI_GetProcessIoCounters</a></td>
<td>Retrieves accounting information for all I/O operations performed by the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessMemoryInfo.htm">_WinAPI_GetProcessMemoryInfo</a></td>
<td>Retrieves information about the memory usage of the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessName.htm">_WinAPI_GetProcessName</a></td>
<td>Retrieves the name for the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessTimes.htm">_WinAPI_GetProcessTimes</a></td>
<td>Retrieves timing information for the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessUser.htm">_WinAPI_GetProcessUser</a></td>
<td>Retrieves the user and domain name for the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetProcessWorkingDirectory.htm">_WinAPI_GetProcessWorkingDirectory</a></td>
<td>Retrieves the current working directory for the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetThreadDesktop.htm">_WinAPI_GetThreadDesktop</a></td>
<td>Retrieves a handle to the desktop assigned to the specified thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_GetThreadErrorMode.htm">_WinAPI_GetThreadErrorMode</a></td>
<td>Retrieves the error mode for the calling thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsElevated.htm">_WinAPI_IsElevated</a></td>
<td>Determines whether the current process is elevated<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsProcessInJob.htm">_WinAPI_IsProcessInJob</a></td>
<td>Determines whether the process is running in the specified job<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_IsWow64Process.htm">_WinAPI_IsWow64Process</a></td>
<td>Determines whether the specified process is running under WOW64<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_OpenJobObject.htm">_WinAPI_OpenJobObject</a></td>
<td>Opens an existing job object<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_OpenProcess.htm">_WinAPI_OpenProcess</a></td>
<td>Returns a handle of an existing process object<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_OpenProcessToken.htm">_WinAPI_OpenProcessToken</a></td>
<td>Opens the access token associated with a process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_QueryInformationJobObject.htm">_WinAPI_QueryInformationJobObject</a></td>
<td>Retrieves limit and job state information from the job object<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetInformationJobObject.htm">_WinAPI_SetInformationJobObject</a></td>
<td>Sets limits for a job object<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetPriorityClass.htm">_WinAPI_SetPriorityClass</a></td>
<td>Sets the priority class for the specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetProcessAffinityMask.htm">_WinAPI_SetProcessAffinityMask</a></td>
<td>Sets a processor affinity mask for the threads of a specified process<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetThreadDesktop.htm">_WinAPI_SetThreadDesktop</a></td>
<td>Assigns the specified desktop to the calling thread<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetThreadErrorMode.htm">_WinAPI_SetThreadErrorMode</a></td>
<td>Controls whether the system will handle the specified types of serious errors or whether the calling thread will handle them<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_SetThreadExecutionState.htm">_WinAPI_SetThreadExecutionState</a></td>
<td>Prevents the system from entering sleep or turning off the display while the current application is running<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_TerminateJobObject.htm">_WinAPI_TerminateJobObject</a></td>
<td>Terminates all processes currently associated with the job<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_TerminateProcess.htm">_WinAPI_TerminateProcess</a></td>
<td>Terminates the specified process and all of its threads<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_UserHandleGrantAccess.htm">_WinAPI_UserHandleGrantAccess</a></td>
<td>Grants or denies access to a handle to a User object to a job that has a user-interface restriction<br /></td>
</tr>
<tr>
<td><a href="_WinAPI_WriteConsole.htm">_WinAPI_WriteConsole</a></td>
<td>Writes a character string to a console screen buffer<br /></td>
</tr>
</table>

</body>
