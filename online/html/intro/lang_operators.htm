<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
  <title>Sprachreferenz - Operatoren</title>
</head>
<body>
  <h1>Sprachreferenz - Operatoren</h1>
  <p>AutoIt hat die folgenden Zuweisungs-, Vergleichs-, mathematischen und logischen Operatoren.</p>

  <table>
    <tr>
      <th>Operator</th>
      <th>Beschreibung</th>
    </tr>
    <tr class="yellow">
      <td></td>
      <td><strong>Zugeh&ouml;rige Operatoren</strong></td>
    </tr>
    <tr>
      <td class="S8 center">=</td>
      <td>Zuweisung. Z. B. <strong class="S9">$vVar</strong> <strong class="S8">=</strong> <strong class="S3">5</strong> (<em>weist die Zahl 5 </em> <em>$vVar</em> zu)</td>
    </tr>
    <tr>
      <td class="S8 center">+=</td>
      <td>Addition und Zuweisung. Z. B. <strong class="S9">$vVar</strong> <strong class="S8">+=</strong> <strong class="S3">1</strong> (<em>addiert 1</em> <em>zu</em> <em>$vVar</em>)</td>
    </tr>
    <tr>
      <td class="S8 center">-=</td>
      <td>Subtraktion und Zuweisung</td>
    </tr>
    <tr>
      <td class="S8 center">*=</td>
      <td>Multiplikation und Zuweisung</td>
    </tr>
    <tr>
      <td class="S8 center">/=</td>
      <td>Division und Zuweisung</td>
    </tr>
    <tr class="yellow">
      <td></td>
      <td><strong>Verkettungsoperatoren</strong></td>
    </tr>
    <tr>
      <td class="S8 center">&amp;</td>
      <td>Verketten/Verbinden zweier Strings. Z. B. <strong>"eins"</strong> <strong class="S8">&amp;</strong> <strong class="S3">10</strong> (<em>entspricht "eins10" und nicht 11</em>)</td>
    </tr>
    <tr>
      <td class="S8 center">&amp;=</td>
      <td>Verkettung und Zuweisung. Z. B. <strong class="S9">$vVar</strong> <strong class="S8">=</strong> <strong>"eins"</strong> und dann <strong class="S9">$vVar</strong> <strong class="S8">&amp;=</strong> <strong class=
      "S3">10</strong>  (<em>$vVar entspricht nun "eins10"</em>)</td>
    </tr>
    <tr class="yellow">
      <td></td>
      <td><strong>Mathematische Operatoren </strong></td>
    </tr>
    <tr>
      <td class="S8 center">+</td>
      <td>Zwei Zahlen addieren. Z. B. <strong class="S3">10</strong> <strong class="S8">+</strong> <strong class="S3">20</strong> (<em>das Ergebnis ist 30</em>)</td>
    </tr>
    <tr>
      <td class="S8 center">-</td>
      <td>Zwei Zahlen subtrahieren. Z. B. <strong class="S3">20</strong> <strong class="S8">-</strong> <strong class="S3">10</strong> (<em>das Ergebnis ist 10</em>)<br/>
      Wirkt auch als einstelliges Minus (setzt den negativen Wert einer Variablen)<br/>
      Siehe nachstehende Erl&auml;uterung</td>
    </tr>
    <tr>
      <td class="S8 center">*</td>
      <td>Zwei Zahlen multiplizieren. Z. B. <strong class="S3">20</strong> <strong class="S8">*</strong> <strong class="S3">10</strong> (<em>das Ergebnis ist 200</em>)</td>
    </tr>
    <tr>
      <td class="S8 center">/</td>
      <td>Zwei Zahlen dividieren. Z. B. <strong class="S3">20</strong> <strong class="S8">/</strong> <strong class="S3">10</strong> (<em>das Ergebnis ist 2</em>)</td>
    </tr>
    <tr>
      <td class="S8 center">^</td>
      <td>Eine Zahl (Basis) mit ihrem Exponent potenzieren. Z. B. <strong class="S3">2</strong> <strong class="S8">^</strong> <strong class="S3">4</strong> (<em>das Ergebnis ist 16</em>)</td>
    </tr>
    <tr class="yellow">
      <td class="S8 center"></td>
      <td><strong>Vergleichende Operatoren</strong> (Gro&szlig;- und Kleinschreibung wird nicht ber&uuml;cksichtigt, ausgenommen <strong class="S8">==</strong>)</td>
    </tr>
    <tr>
      <td class="S8 center">=</td>
      <td>Pr&uuml;ft, ob zwei Werte gleich sind. Z. B. <a href="../keywords/IfElseEndIf.htm"><strong class="S5">If</strong></a> <strong class="S9">$vVar</strong> <strong class="S8">=</strong> <strong class="S3">5</strong> <a href="../keywords/IfElseEndIf.htm"><strong class="S5">Then</strong></a> (<em>true falls $vVar 5 entspricht</em>). <strong>Gro&szlig;- und Kleinschreibung wird nicht ber&uuml;cksichtigt</strong>, falls Strings verwendet werden. Weiter unten gibt es Informationen zum Vergleich mit gemischten Datentypen.</td>
    </tr>
    <tr>
      <td class="S8 center">==</td>
      <td>Pr&uuml;ft, ob zwei <strong>Strings</strong> gleich sind. <strong> Gro&szlig;- und Kleinschreibung wird ber&uuml;cksichtigt.</strong> Die linken und rechten Werte werden in Strings umgewandelt, falls sie dies nicht schon sind. Dieser Operator sollte nur f&uuml;r String-Vergleiche verwendet werden, wenn die Gro&szlig;- und Kleinschreibung ber&uuml;cksichtigt werden soll.</td>
    </tr>
    <tr>
      <td class="S8 center">&lt;&gt;</td>
      <td>Pr&uuml;ft, ob zwei Werte nicht gleich sind. <strong>Gro&szlig;- und Kleinschreibung wird nicht ber&uuml;cksichtigt</strong>, falls Strings verwendet werden. Um die Ungleichheit unter Beachtung der Gro&szlig;- und Kleinschreibung festzustellen, ist <strong class="S5">Not</strong> <strong class="S8">(</strong><strong class="S0">"string1"</strong>
      <strong class="S8">==</strong> <strong class="S0">"string2"</strong><strong class="S8">)</strong> zu verwenden.</td>
    </tr>
    <tr>
      <td class="S8 center">&gt;</td>
      <td>Pr&uuml;ft, ob der erste Wert gr&ouml;&szlig;er als der zweite ist. Die Strings werden lexikographisch verglichen, auch wenn die Inhalte der Strings numerisch sind.</td>
    </tr>
    <tr>
      <td class="S8 center">&gt;=</td>
      <td>Pr&uuml;ft, ob der erste Wert gr&ouml;&szlig;er/gleich dem zweiten ist. Die Strings werden lexikographisch verglichen, auch wenn die Inhalte der Strings numerisch sind.</td>
    </tr>
    <tr>
      <td class="S8 center">&lt;</td>
      <td>Pr&uuml;ft, ob der erste Wert kleiner als der zweite ist. Die Strings werden lexikographisch verglichen, auch wenn die Inhalte der Strings numerisch sind.</td>
    </tr>
    <tr>
      <td class="S8 center">&lt;=</td>
      <td>Pr&uuml;ft, ob der erste Wert kleiner/gleich dem zweiten ist. Die Strings werden lexikographisch verglichen, auch wenn die Inhalte der Strings numerisch sind.</td>
    </tr>
    <tr class="yellow">
      <td></td>
      <td><strong>Logische Operatoren</strong></td>
    </tr>
    <tr>
      <td class="S5 center">And</td>
      <td>Logisches UND. Z. B. <strong class="S5">If</strong> <strong class="S9">$vVar</strong> <strong class="S8">=</strong> <strong class="S3">5</strong> <strong class="S5">And</strong> <strong class="S9">$vVar2</strong> <strong class=
      "S8">&gt;</strong> <strong class="S3">6</strong> <strong class="S5">Then</strong> (<em>True falls $vVar 5 entspricht <strong>und</strong> $vVar2 gr&ouml;&szlig;er als 6 ist</em>)</td>
    </tr>
    <tr>
      <td class="S5 center">Or</td>
      <td>Logisches ODER. Z. B. <strong class="S5">If</strong> <strong class="S9">$vVar</strong> <strong class="S8">=</strong> <strong class="S3">5</strong> <strong class="S5">Or</strong> <strong class="S9">$vVar2</strong> <strong class=
      "S8">&gt;</strong> <strong class="S3">6</strong> <strong class="S5">Then</strong> (<em>True falls $vVar gleich 5 ist <strong>oder</strong> $vVar2 gr&ouml;&szlig;er als 6 ist</em>)</td>
    </tr>
    <tr>
      <td class="S5 center">Not</td>
      <td>Logisches NICHT. Z. B. <strong class="S5">Not</strong> <strong class="S3">1</strong> (<em>False</em>)</td>
    </tr>
    <tr class="yellow">
      <td></td>
      <td><strong>Bedingter Operator</strong></td>
    </tr>
    <tr>
      <td class="S8 center"><a href="../keywords/Ternary.htm">? :</a></td>
      <td>Es ist ein Ausdruck auszuw&auml;hlen z. B. <strong>$condition <a href="../keywords/Ternary.htm">?</a> $expression1 <a href="../keywords/Ternary.htm">:</a> $expression2</strong>  (<em>$expression1 wenn $condition True ist oder
      $expression2 False ist</em>) Ein Beispiel ist beim <a href="../keywords/Ternary.htm">Ternary</a> Operator zu finden.</td>
    </tr>
  </table>

  <h2>Priorit&auml;t</h2>
  <p>Wenn mehr als ein Operator in einem Ausdruck verwendet werden, bestimmt die <strong>Operatorpriorit&auml;t </strong>die Reihenfolge der Verwendung. Die Priorit&auml;t, die in AutoIt verwendet wird, ist weiter unten aufgelistet. Wenn zwei Operatoren die gleiche Priorit&auml;t besitzen, wird der Ausdruck von <em>links nach rechts</em> ausgewertet.</p>
  <p>Von der h&ouml;chsten zur niedrigsten Priorit&auml;t:</p>
  <p><strong class="S5">Not</strong><br />
    <strong class="S8">^<br />
    * /<br />
    + -<br />
    &amp;<br />
    &lt; &gt; &lt;= &gt;= = &lt;&gt; ==</strong><br />
    <strong class="S5">And Or</strong></p>
  <br />
  <p>Z. B. <strong class="S3">2</strong> <strong class="S8">+</strong> <strong class="S3">4</strong> <strong class="S8">*</strong> <strong class="S3">10</strong> entspricht <strong class="S3">42</strong>:</p>
  <p>  <strong class="S3">4</strong> <strong class="S8">*</strong> <strong class="S3">10</strong>  (entspricht <strong class="S3">40</strong>)</p>
  <p>  <strong class="S3">2</strong> <strong class="S8">+</strong> <strong class="S3">40</strong>  (entspricht <strong class="S3">42</strong>)</p>
  <p>Da der <strong class="S8">*</strong> eine h&ouml;here Priorit&auml;t besitzt als das <strong class="S8">+</strong> wird er <strong>vor</strong> der Addition verwendet. (Punktrechnung vor Strichrechnung)</p>

  <p>Obwohl der Vorrang der Operatoren in den meisten F&auml;llen ausreichen sollte, wird empfohlen, Klammern zu verwenden, um die Reihenfolge der Auswertung zu erzwingen, wenn das Ergebnis kritisch ist oder der Ausdruck komplex ist.</p>
  <p>Z. B. <strong class="S8">(</strong><strong class="S3">2</strong> <strong class="S8">+</strong> <strong class="S3">4</strong><strong class="S8">) *</strong> <strong class="S3">10</strong> entspricht <strong class="S3">60</strong>.</p>
  Dies gilt insbesondere f&uuml;r den <strong class="S8">-</strong> Operator, der sowohl f&uuml;r <strong>bin&auml;re Subtraktion</strong> (Subtraktion von 2 Zahlen) als auch f&uuml;r die <strong>un&auml;re Negation</strong> (Setzen des Negativs eines Wertes) verwendet werden kann. Die Verwendung von Klammern wird in diesem Fall dringend empfohlen, um Verwechslungen zu vermeiden.

  <h2>Kurze Zusammenfassung</h2>
  <p>Folgendes ist zu beachten, wenn die logischen Operatoren AND, OR verwendet werden:</p>
  <p>Z. B. <a class="le" href="../keywords/If.htm"><strong class="S5">If</strong></a> <strong class="S4">MyFunc1</strong><strong class="S8">()</strong> <strong class="S5">Or</strong> <strong class="S4">MyFunc2</strong><strong class="S8">()</strong>
  <strong class="S5">Then</strong>   (<em><strong class="S4">MyFunc2</strong><strong class="S8">()</strong> wird nicht aufgerufen, falls <strong class="S4">MyFunc1</strong><strong class="S8">()</strong> true zur&uuml;ckgibt</em>)</p>
  <p>Z. B. <a class="le" href="../keywords/If.htm"><strong class="S5">If</strong></a> <strong class="S4">MyFunc1</strong><strong class="S8">()</strong> <strong class="S5">And</strong> <strong class="S4">MyFunc2</strong><strong class="S8">()</strong>
  <strong class="S5">Then</strong>   (<em><strong class="S4">MyFunc2</strong><strong class="S8">()</strong> wird nicht aufgerufen, falls <strong class="S4">MyFunc1</strong><strong class="S8">()</strong> false zur&uuml;ckgibt</em>)</p>

  <h2>Vergleich gemischter Datentypen</h2>
  <p>Beim Vergleich gemischter Datentypen ist Vorsicht geboten, da gemischte Vergleiche normalerweise numerisch durchgef&uuml;hrt werden, sofern nicht der Stringoperator (<strong>==</strong>) verwendet wird, welcher auch die Gro&szlig;- und Kleinschreibung ber&uuml;cksichtigt. Die meisten Strings werden mit <strong>0</strong> bewertet, sodass das Ergebnis m&ouml;glicherweise nicht das erwartete ist. Es wird empfohlen, die zu vergleichenden Elemente vor dem Vergleich mit <em>Number()/String()</em> in denselben Datentyp zu zwingen.</p>
@@SyntaxHighlighting@@
#include <MsgBoxConstants.au3>

Local $iNumber = 0
Local $sString = "Ein String"

; Dies wird als true ausgewertet, wenn der String in eine Zahl, d. h. Null, konvertiert wird
If $iNumber = $sString Then
  MsgBox($MB_SYSTEMMODAL, "", $iNumber & " und '" & $sString & "' sind gleich")
EndIf

; Dies wird als false ausgewertet, da der String und die Zahl nach Wert und Datentyp verglichen werden
If $iNumber == $sString Then
  MsgBox($MB_SYSTEMMODAL, "", $iNumber & " und '" & $sString & "' sind gleich")
EndIf
@@End@@
</body>
</html>
