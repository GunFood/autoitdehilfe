<!DOCTYPE html>
<html>
<head>
  <title>Benutzerdefinierte Funktionen</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet" type="text/css" id="theme" />
	<script type="text/javascript">
		var aThemes = new Array('default.css','dark.css');
		var aImages = new Array('dark.png','default.png');
			
		class Themes {
			static theme = document.getElementById('theme').getAttribute('href').split('/')[1];
			static index = 0;
			static getTheme() {
				return this.theme;
			}
			static setTheme(name) {
				this.index = (name == 'default') ? 1 : 0;
				this.toggleTheme();
			}
			static storeTheme(idx) {
				this.theme = aThemes[idx];				
				document.getElementById('theme').setAttribute('href', '../css/' + this.theme);
				document.getElementById('toggleButton').src = '../images/' + aImages[idx];
			}
			static toggleTheme() {
				this.index = Math.abs(this.index -1);
				if (this.theme != aThemes[this.index]) {
					this.storeTheme(this.index);
				}
				// *** NUR hier im Test zur Anzeige geladenes Theme ***
				// *** document.getElementById('nameTheme').innerText = aThemes[this.index];
			}
		}		

		function getURLParameter(name) {
			var value = decodeURIComponent((RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, ""])[1]);
			return (value !== 'null') ? value : false;
		}
		
		// -- Wenn Seite geladen: auf Theme-Parameter prüfen. Wenn anderes Theme: Wechseln. --
		window.addEventListener('load', function(){
			var themeCurrent = Themes.getTheme();
			var param = getURLParameter('Theme'); 
			if (param && themeCurrent != param) {
				Themes.setTheme(param);
			}
			// *** NUR hier im Test zur Anzeige Parameter ***
			// *** document.getElementById('info').innerText = param;
		})	
	</script>	
</head>

<body>
<h1>Windows Benutzerdefinierte Funktionsreferenz</h1>
<p>Es folgt eine Liste der benutzerdefinierten Funktionen die in AutoIt verfügbar sind.
Ein Klick auf einen Funktionsnamen liefert eine detaillierte Beschreibung.</p>
<p>Wenn diese Funktion verwendet wird, so muss <strong>#include &lt;WinAPISysWin.au3&gt;</strong> hinzugefügt werden.</p>
</p>
<p>&nbsp;</p>

<table>
<tr>
  <th style="width:25%">Benutzerdefinierte Funktion</th>
  <th style="width:75%">Beschreibung</th>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_AdjustWindowRectEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_AdjustWindowRectEx</a></td>
<td>Berechnet die ben&ouml;tigte Gr&ouml;&szlig;e des Fensterrechtecks basierend auf der gew&uuml;nschten Gr&ouml;&szlig;e des Clientrechtecks<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_AnimateWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_AnimateWindow</a></td>
<td>Erlaubt die Produktion von Spezialeffekte wenn Fenster angezeigt oder versteckt werden<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_BeginDeferWindowPos.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_BeginDeferWindowPos</a></td>
<td>Allocates memory for a multiple-window-position structure<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_BringWindowToTop.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_BringWindowToTop</a></td>
<td>Brings the specified window to the top of the Z order<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_BroadcastSystemMessage.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_BroadcastSystemMessage</a></td>
<td>Sends a message to the specified recipients<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CallWindowProc.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CallWindowProc</a></td>
<td>&Uuml;bergibt die "Hook"-Information an die n&auml;chste "Hook"-Prozedur in der aktuellen "Hook"-Kette<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CallWindowProcW.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CallWindowProcW</a></td>
<td>Passes message information to the specified window procedure<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CascadeWindows.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CascadeWindows</a></td>
<td>Cascades the specified child windows of the specified parent window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_ChangeWindowMessageFilterEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_ChangeWindowMessageFilterEx</a></td>
<td>Modifies the User Interface Privilege Isolation (UIPI) message filter for a specified window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_ChildWindowFromPointEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_ChildWindowFromPointEx</a></td>
<td>Determines which, if any, of the child windows belonging to the specified parent window contains the specified point<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CloseWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CloseWindow</a></td>
<td>Minimizes (but does not destroy) the specified window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_CreateWindowEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_CreateWindowEx</a></td>
<td>Erstellt ein &uuml;berlappendes, Pop-up oder ein Child-Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DeferWindowPos.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DeferWindowPos</a></td>
<td>Aktualisiert die angegebene mehrere-Fenster-Position Struktur f&uuml;r ein angegebenes Fenster.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DefWindowProc.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DefWindowProc</a></td>
<td>Ruft die Standard Fenster-Prozedur auf, um eine korrekte Weiterverarbeitung der unbearbeiteten Nachrichten zu gew&auml;hrleisten<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DefWindowProcW.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DefWindowProcW</a></td>
<td>Ruft die Standardfensterprozedur auf um eine Standardverarbeitung f&uuml;r jegliche Fensternachrichten bereitzustellen.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DeregisterShellHookWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DeregisterShellHookWindow</a></td>
<td>Deregistriert ein gegebenes Shellfenster welches registriert wurde um Shellhooknachrichten zu erhalten.<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DestroyWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DestroyWindow</a></td>
<td>L&ouml;scht das festgelegte Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DragAcceptFiles.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DragAcceptFiles</a></td>
<td>Registriert ob ein Fenster Dropdateien akzeptiert<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DragFinish.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DragFinish</a></td>
<td>Gibt den Speicher frei welches durch das System zugewiesen wurde um Dateinamen zur Anwendung zu schicken<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DragQueryFileEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DragQueryFileEx</a></td>
<td>Gibt den Namen der Dropdateien einer erfolgreichen Drag-und-Drop Operation zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_DragQueryPoint.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_DragQueryPoint</a></td>
<td>Gibt die Position des Mauszeigers zum Zeitpunkt des Loslassens der Datei w&auml;hrend einer Drag-und-Drop Operation zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EndDeferWindowPos.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_EndDeferWindowPos</a></td>
<td>Aktualisiert gleichzeitig die Position und Gr&ouml;&szlig;e eines oder mehrerer Fenster in einem einzelnen Anzeigeaktualisierungszyklus<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumChildWindows.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_EnumChildWindows</a></td>
<td>Enumerates a child windows that belong to the specified parent window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumWindows.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_EnumWindows</a></td>
<td>Listet alle Fenster auf<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumWindowsPopup.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_EnumWindowsPopup</a></td>
<td>Listet alle Popup Fenster auf (Kontextmen&uuml;s)<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_EnumWindowsTop.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_EnumWindowsTop</a></td>
<td>Listet alle Top-Level Fenster auf<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_FindWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_FindWindow</a></td>
<td>Ermittelt das Handle zu dem Top-Level Fenster des entsprechenden Klassen- und Fensternamen<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_FlashWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_FlashWindow</a></td>
<td>L&auml;sst das angegebene Fenster einmal aufblinken<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_FlashWindowEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_FlashWindowEx</a></td>
<td>L&auml;sst das angegebene Fenster (mehrmalig) aufblinken<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetAncestor.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetAncestor</a></td>
<td>Ermittelt das Handle zum "Urvater" eines Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetClassInfoEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetClassInfoEx</a></td>
<td>Retrieves information about a window class<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetClassLongEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetClassLongEx</a></td>
<td>Retrieves the specified value associated with the specified window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetClassName.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetClassName</a></td>
<td>Ermittelt den Namen der Klasse (Class) zu der das angegebene Fenster geh&ouml;rt<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetClientHeight.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetClientHeight</a></td>
<td>Ermittelt die H&ouml;he des Anwendungsbereichs eines Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetClientRect.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetClientRect</a></td>
<td>Ermittelt die Koordinaten einer Fensterfl&auml;che<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetClientWidth.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetClientWidth</a></td>
<td>Ermittelt die Breite des Anwendungsbereichs eines Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetDesktopWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetDesktopWindow</a></td>
<td>Ermittelt das Handle des Windows Desktop Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetDlgItem.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetDlgItem</a></td>
<td>Ermittelt das Handle des angegebenen Controls in einem Dialogfenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetFocus.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetFocus</a></td>
<td>Ermittelt das Handle des Fensters, welches den Tastaturfokus besitzt<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetForegroundWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetForegroundWindow</a></td>
<td>Gibt das Handle des Fensters im Vordergrund zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetGUIThreadInfo.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetGUIThreadInfo</a></td>
<td>Retrieves information about the active window or a specified GUI thread<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetLastActivePopup.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetLastActivePopup</a></td>
<td>Determines which pop-up window owned by the specified window was most recently active<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetLayeredWindowAttributes.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetLayeredWindowAttributes</a></td>
<td>Holt die Attribute mehrschichtiger Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetMessageExtraInfo.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetMessageExtraInfo</a></td>
<td>Retrieves the extra message information for the current thread<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetParent.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetParent</a></td>
<td>Ermittelt das Handle vom Parentfenster des angegebenen Childfensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetParentProcess.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetParentProcess</a></td>
<td>Retrieves the PID of the parent process for the specified process<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetShellWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetShellWindow</a></td>
<td>Retrieves a handle to the Shell's desktop window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetSysColor.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetSysColor</a></td>
<td>Gibt die aktuelle Farbe des angegebenen Anzeigeelements zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetTopWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetTopWindow</a></td>
<td>Retrieves a handle to the child window at the top of the Z order<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindow</a></td>
<td>Ermittelt das Handle eines Fensters, das ein bestimmtes Verh&auml;ltnis (Z-Anordnung oder Besitzer) zu dem angegebenen Fenster hat<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowDC.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowDC</a></td>
<td>Holt einen Ger&auml;tekontext (DC) f&uuml;r das gesamte Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowDisplayAffinity.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowDisplayAffinity</a></td>
<td>Retrieves the current display affinity setting, from any process, for a given window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowExt.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowExt</a></td>
<td>Retrieves the x-extent and y-extent of the window for the specified device context<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowFileName.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowFileName</a></td>
<td>Retrieves the fully-qualified path of the module associated with the specified window handle<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowHeight.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowHeight</a></td>
<td>Gibt die H&ouml;he des Fensters zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowInfo.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowInfo</a></td>
<td>Ermittelt Informationen &uuml;ber das angegebene Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowLong.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowLong</a></td>
<td>Ermittelt Informationen &uuml;ber das angegebene Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowOrg.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowOrg</a></td>
<td>Retrieves the x-coordinates and y-coordinates of the window origin for the specified device context<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowPlacement.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowPlacement</a></td>
<td>Ermittelt die minimale, maximale und normale Position des Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowRect.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowRect</a></td>
<td>Ermittelt die Abmessungen des begrenzenden Rechtecks des festgelegten Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowText.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowText</a></td>
<td>Ermittelt den Text in der festgelegten Fenstertitelzeile<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowThreadProcessId.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowThreadProcessId</a></td>
<td>Ermittelt die ID des Threads der in dem festgelegten Fenster erstellt wurde<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_GetWindowWidth.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_GetWindowWidth</a></td>
<td>Gibt die Breite des Fensters zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_InProcess.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_InProcess</a></td>
<td>Bestimmt ob ein Fenster zu dem aktuellen Prozess geh&ouml;rt<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_InvalidateRect.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_InvalidateRect</a></td>
<td>F&uuml;gt ein Rechteck der zu aktualisierenden Region eines Fensters hinzu<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsChild.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsChild</a></td>
<td>Tests whether a window is a child window of a specified parent window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsClassName.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsClassName</a></td>
<td>Wrapper um den Klassennamen eines Fensters zu pr&uuml;fen<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsHungAppWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsHungAppWindow</a></td>
<td>Determines whether the specified application is not responding<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsIconic.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsIconic</a></td>
<td>Determines whether the specified window is minimized (iconic)<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsWindow</a></td>
<td>Ermittelt, ob das festgelegte Fensterhandle ein existierendes Fenster identifiziert<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsWindowEnabled.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsWindowEnabled</a></td>
<td>Bestimmt, ob das angegebene Fenster f&uuml;r Maus- und Tastatureingabe aktiviert ist<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsWindowUnicode.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsWindowUnicode</a></td>
<td>Determines whether the specified window is a native Unicode window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsWindowVisible.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsWindowVisible</a></td>
<td>Ermittelt den Sichtbarkeitsstatus des angegebenen Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_IsZoomed.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_IsZoomed</a></td>
<td>Determines whether a window is maximized<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_KillTimer.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_KillTimer</a></td>
<td>Destroys the specified timer<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_MoveWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_MoveWindow</a></td>
<td>&Auml;ndert die Position und Gr&ouml;&szlig;e des angegebenen Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_OpenIcon.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_OpenIcon</a></td>
<td>Stellt ein minimiertes (ikonisches) Fenster in seiner vorherigen Gr&ouml;&szlig;e und Position wieder her und aktiviert das Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_PostMessage.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_PostMessage</a></td>
<td>Platziert eine Nachricht in die Nachrichten-Warteschlange und kehrt umgehend zur&uuml;ck<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_RegisterClass.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_RegisterClass</a></td>
<td>Registers a window class<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_RegisterClassEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_RegisterClassEx</a></td>
<td>Registers a window class<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_RegisterShellHookWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_RegisterShellHookWindow</a></td>
<td>Registers a specified Shell window to receive certain messages for events or notifications<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_RegisterWindowMessage.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_RegisterWindowMessage</a></td>
<td>Definiert eine neue Fensternachricht, welche garantiert einzigartig im System ist<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SendMessageTimeout.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SendMessageTimeout</a></td>
<td>Sends the specified message to one of more windows<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetClassLongEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetClassLongEx</a></td>
<td>Replaces the specified value into the specified window belongs<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetFocus.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetFocus</a></td>
<td>Setzt den Fokus der Tastatur auf das angegebenen Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetFont.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetFont</a></td>
<td>Setzt einen Schrift-Typ f&uuml;r ein Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetForegroundWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetForegroundWindow</a></td>
<td>Puts the specified window into the foreground and activates its<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetLayeredWindowAttributes.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetLayeredWindowAttributes</a></td>
<td>Setzt die Attribute f&uuml;r ein mehrschichtiges Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetMessageExtraInfo.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetMessageExtraInfo</a></td>
<td>Sets the extra message information for the current thread<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetParent.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetParent</a></td>
<td>&Auml;ndert das Parent-Fenster des angegebenen Child-Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetSysColors.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetSysColors</a></td>
<td>Setzt Informationen &uuml;ber die angezeigten Ger&auml;te in einem System<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetTimer.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetTimer</a></td>
<td>Creates a timer with the specified time-out value<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetWindowDisplayAffinity.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetWindowDisplayAffinity</a></td>
<td>Stores the display affinity setting in kernel mode on the specified window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetWindowLong.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetWindowLong</a></td>
<td>Setzt Informationen &uuml;ber das angegebene Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetWindowPlacement.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetWindowPlacement</a></td>
<td>Setzt die minimale, maximale und normale Position des Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetWindowPos.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetWindowPos</a></td>
<td>&Auml;ndert die Gr&ouml;&szlig;e, Position und Z-Order eines Child-, Popup- oder Top-Level-Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SetWindowText.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SetWindowText</a></td>
<td>&Auml;ndert den Text in der Titelleiste des angegebenen Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_ShowOwnedPopups.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_ShowOwnedPopups</a></td>
<td>Shows or hides all pop-up windows owned by the specified window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_ShowWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_ShowWindow</a></td>
<td>Setzt den Anzeigestatus des angegebenen Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_SwitchToThisWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_SwitchToThisWindow</a></td>
<td>Switches the focus to a specified window and bring it to the foreground<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_TileWindows.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_TileWindows</a></td>
<td>Tiles the specified child windows of the specified parent window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_UnregisterClass.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_UnregisterClass</a></td>
<td>Unregisters a window class, freeing the memory required for the class<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_UpdateLayeredWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_UpdateLayeredWindow</a></td>
<td>Aktualisiert die Position, Gr&ouml;&szlig;e, Umriss, Inhalt und Durchscheinbarkeit (Opazit&auml;t) eines mehrschichtigen Fensters<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_UpdateLayeredWindowEx.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_UpdateLayeredWindowEx</a></td>
<td>Updates a bitmap translucency of a layered window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_UpdateLayeredWindowIndirect.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_UpdateLayeredWindowIndirect</a></td>
<td>Updates the position, size, shape, content, and translucency of a layered window<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_UpdateWindow.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_UpdateWindow</a></td>
<td>Aktualisiert die Fensterfl&auml;che durch das Senden einer WM_PAINT Nachricht an das Fenster<br /></td>
</tr>
<tr>
<td><a href="..\..\html\libfunctions\_WinAPI_WindowFromPoint.htm" onclick="location.href = this.href + '?Theme=' + Themes.getTheme();return false">_WinAPI_WindowFromPoint</a></td>
<td>Ermittelt das Handle des Fensters welches den festgelegten Punkt enth&auml;lt<br /></td>
</tr>
</table>

</body>
