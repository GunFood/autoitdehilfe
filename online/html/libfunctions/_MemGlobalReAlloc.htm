<!DOCTYPE html>
<html>
<head>
<title>Funktion _MemGlobalReAlloc</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Funktionreferenz</h1>
<hr style="height:0px">
<div class="top"><h1>_MemGlobalReAlloc</h1><div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">ReAllocates the specified number of bytes from the heap<br /></p>
<p class="codeheader">
#include &lt;Memory.au3&gt;<br />
_MemGlobalReAlloc ( $hMemory, $iBytes [, $iFlags = 0] )<br />
</p>

<h2>Parameter</h2>
<table>
<tr>
<td style="width:15%">$hMemory</td>
<td style="width:85%">A handle to the global memory object to be reallocated. This handle is returned by either the <a href="_MemGlobalAlloc.htm">_MemGlobalAlloc</a> or <a href="_MemGlobalReAlloc.htm">_MemGlobalReAlloc</a> function.</td>
</tr>
<tr>
<td>$iBytes</td>
<td>The new size of the memory block, in bytes. If $iFlags specifies $GMEM_MODIFY, this parameter is ignored.</td>
</tr>
<tr>
<td>$iFlags</td>
<td><strong>[optional]</strong> The memory allocation attributes:<br />
&nbsp;&nbsp;&nbsp; $GMEM_MOVEABLE - optionally combine with $GMEM_MODIFY.<br />
&nbsp;&nbsp;&nbsp; If the memory is a locked $GMEM_MOVEABLE memory block or a $GMEM_FIXED memory block and this flag is not specified, the memory can only be reallocated in place<br />
&nbsp;&nbsp;&nbsp; $GMEM_ZEROINIT - If this parameter does not specify $GMEM_MODIFY, initializes additional memory contents to zero if the memory object is growing in size.</td>
</tr>
</table>

<h2>R&uuml;ckgabewert</h2>
<table class="noborder">
<tr>
<td style="width:10%" class="valign-top">Success:</td>
<td style="width:90%">a handle to the newly reallocated memory object.</td>
</tr>
<tr>
<td class="valign-top">Failure:</td>
<td>0.</td>
</tr>
</table>

<h2>Bemerkungen</h2>
<p>If <a href="_MemGlobalReAlloc.htm">_MemGlobalReAlloc</a> reallocates a movable object, the return value is a handle to the memory object. To convert the handle to a pointer, use the <a href="_MemGlobalLock.htm">_MemGlobalLock</a> function.<br />
<br />
If <a href="_MemGlobalReAlloc.htm">_MemGlobalReAlloc</a> reallocates a fixed object, the value of the handle returned is the address of the first byte of the memory block. To access the memory, a process can simply cast the return value to a pointer.<br />
<br />
If <a href="_MemGlobalReAlloc.htm">_MemGlobalReAlloc</a> fails, the original memory is not freed, and the original handle and pointer are still valid.<br />
</p>

<h2>Verwandte Funktionen</h2>
<p><a href="_MemGlobalFree.htm">_MemGlobalFree</a>, <a href="_MemGlobalLock.htm">_MemGlobalLock</a>, <a href="_MemGlobalAlloc.htm">_MemGlobalAlloc</a>, <a href="_MemGlobalSize.htm">_MemGlobalSize</a>, <a href="_MemVirtualAlloc.htm">_MemVirtualAlloc</a></p>

<h2>Siehe auch</h2>
<p>Suche nach <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&l=EN-US&k=k(GlobalReAlloc);k(DevLang-C);k(TargetOS-WINDOWS)&rd=true">GlobalReAlloc</a> in der MSDN Bibliothek.
</p>

</body>
</html>
