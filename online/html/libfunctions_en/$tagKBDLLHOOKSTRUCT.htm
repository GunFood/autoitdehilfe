<!DOCTYPE html>
<html>
<head>
<title>Keyword $tagKBDLLHOOKSTRUCT</title>
<meta charset="utf-8">
<link href="../css/default.css" rel="stylesheet">
</head>

<body>
<h1 class="small">Keyword Reference</h1>
<hr style="height:0px">
<div class="top"><h1>$tagKBDLLHOOKSTRUCT</h1><div>
<div id="flagtext">Show description in</div>
<div id="flaglink"> <a href="../libfunctions/$tagKBDLLHOOKSTRUCT.htm"><img src="../images/Flagge_de.png" height="29" width="36" border=0 hspace=10/></a></div>
<br style="clear: both;">
<p style="margin:2px 0 0 0;" class="funcdesc">Contains information about a low-level keyboard input event<br /></p>
<p class="codeheader">
Global Const $tagKBDLLHOOKSTRUCT = "dword vkCode;dword scanCode;dword flags;dword time;ulong_ptr dwExtraInfo"<br />
</p>

<h2>Parameters</h2>
<table>
<tr>
<td style="width:15%">vkCode</td>
<td style="width:85%">Specifies a virtual-key code. The code must be a value in the range 1 to 254</td>
</tr>
<tr>
<td>scanCode</td>
<td>Specifies a hardware scan code for the key</td>
</tr>
<tr>
<td>flags</td>
<td>Specifies the extended-key flag, event-injected flag, context code, and transition-state flag. This member is specified as follows.<br />
An application can use the following values to test the keystroke flags:<br />
&nbsp;&nbsp;&nbsp; $LLKHF_EXTENDED - Test the extended-key flag<br />
&nbsp;&nbsp;&nbsp; $LLKHF_LOWER_IL_INJECTED - Test the event-injected (from a process running at lower integrity level) flag<br />
&nbsp;&nbsp;&nbsp; $LLKHF_INJECTED - Test the event-injected flag<br />
&nbsp;&nbsp;&nbsp; $LLKHF_ALTDOWN - Test the context code<br />
&nbsp;&nbsp;&nbsp; $LLKHF_UP - Test the transition-state flag<br />
0 - Specifies whether the key is an extended key, such as a function key or a key on the numeric keypad<br />
&nbsp;&nbsp;&nbsp; The value is 1 if the key is an extended key; otherwise, it is 0<br />
1 - Specifies whether the event was injected from a process running at lower integrity level.<br />
&nbsp;&nbsp;&nbsp; The value is 1 if that is the case; otherwise, it is 0.<br />
&nbsp;&nbsp;&nbsp; Note that bit 4 is also set whenever bit 1 is set.<br />
2 to 3 - Reserved<br />
4 - Specifies whether the event was injected. The value is 1 if the event was injected; otherwise, it is 0.<br />
&nbsp;&nbsp;&nbsp; Note that bit 1 is not necessarily set when bit 4 is set.<br />
5 - Specifies the context code. The value is 1 if the ALT key is pressed; otherwise, it is 0<br />
6 - Reserved<br />
7 - Specifies the transition state. The value is 0 if the key is pressed and 1 if it is being released</td>
</tr>
<tr>
<td>time</td>
<td>Specifies the time stamp for this message, equivalent to what GetMessageTime would return for this message</td>
</tr>
<tr>
<td>dwExtraInfo</td>
<td>Specifies extra information associated with the message</td>
</tr>
</table>

</body>
</html>
